{"version":3,"file":"vcomponent.js","sources":["../../ElsieSDK/packages/elsie/src/lib/classes.ts","../../ElsieSDK/node_modules/dlv/dist/dlv.es.js","../../ElsieSDK/node_modules/preact-markup/dist/preact-markup.module.js","../../ElsieSDK/node_modules/preact-i18n/dist/preact-i18n.esm.js","../../ElsieSDK/packages/elsie/src/lib/vcomponent.tsx"],"sourcesContent":["import { JSXInternal } from 'preact/src/jsx';\n\ntype ClassName = string | JSXInternal.SignalLike<string | undefined>;\n\nexport const classes = (\n  classes: Array<ClassName | [ClassName, boolean] | undefined>\n) => {\n  const result = classes.reduce((result, item) => {\n    if (!item) return result;\n\n    if (typeof item === 'string') result += ` ${item}`;\n\n    if (Array.isArray(item)) {\n      const [className, isActive] = item;\n      if (className && isActive) {\n        result += ` ${className}`;\n      }\n    }\n\n    return result;\n  }, '') as string;\n\n  return result.trim();\n};\n","export default function(t,e,l,n,r){for(e=e.split?e.split(\".\"):e,n=0;n<e.length;n++)t=t?t[e[n]]:r;return t===r?l:t}\n//# sourceMappingURL=dlv.es.js.map\n","import{h as r,Component as t}from\"preact\";var e,o={};function n(r,t,e){if(3===r.nodeType){var o=\"textContent\"in r?r.textContent:r.nodeValue||\"\";if(!1!==n.options.trim){var a=0===t||t===e.length-1;if((!(o=o.match(/^[\\s\\n]+$/g)&&\"all\"!==n.options.trim?\" \":o.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g,\"all\"===n.options.trim||a?\"\":\" \"))||\" \"===o)&&e.length>1&&a)return null}return o}if(1!==r.nodeType)return null;var p=String(r.nodeName).toLowerCase();if(\"script\"===p&&!n.options.allowScripts)return null;var l,s,u=n.h(p,function(r){var t=r&&r.length;if(!t)return null;for(var e={},o=0;o<t;o++){var a=r[o],i=a.name,p=a.value;\"on\"===i.substring(0,2)&&n.options.allowEvents&&(p=new Function(p)),e[i]=p}return e}(r.attributes),(s=(l=r.childNodes)&&Array.prototype.map.call(l,n).filter(i))&&s.length?s:null);return n.visitor&&n.visitor(u),u}var a,i=function(r){return r},p={};function l(r){var t=(r.type||\"\").toLowerCase(),e=l.map;e&&e.hasOwnProperty(t)?(r.type=e[t],r.props=Object.keys(r.props||{}).reduce(function(t,e){var o;return t[(o=e,o.replace(/-(.)/g,function(r,t){return t.toUpperCase()}))]=r.props[e],t},{})):r.type=t.replace(/[^a-z0-9-]/i,\"\")}export default(function(t){function i(){t.apply(this,arguments)}return t&&(i.__proto__=t),(i.prototype=Object.create(t&&t.prototype)).constructor=i,i.setReviver=function(r){a=r},i.prototype.shouldComponentUpdate=function(r){var t=this.props;return r.wrap!==t.wrap||r.type!==t.type||r.markup!==t.markup},i.prototype.setComponents=function(r){if(this.map={},r)for(var t in r)if(r.hasOwnProperty(t)){var e=t.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g,\"$1$3-$2$4\").toLowerCase();this.map[e]=r[t]}},i.prototype.render=function(t){var i=t.wrap;void 0===i&&(i=!0);var s,u=t.type,c=t.markup,m=t.components,v=t.reviver,f=t.onError,d=t[\"allow-scripts\"],h=t[\"allow-events\"],y=t.trim,w=function(r,t){var e={};for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&-1===t.indexOf(o)&&(e[o]=r[o]);return e}(t,[\"wrap\",\"type\",\"markup\",\"components\",\"reviver\",\"onError\",\"allow-scripts\",\"allow-events\",\"trim\"]),C=v||this.reviver||this.constructor.prototype.reviver||a||r;this.setComponents(m);var g={allowScripts:d,allowEvents:h,trim:y};try{s=function(r,t,a,i,s){var u=function(r,t){var o,n,a,i,p=\"html\"===t?\"text/html\":\"application/xml\";\"html\"===t?(i=\"body\",a=\"<!DOCTYPE html>\\n<html><body>\"+r+\"</body></html>\"):(i=\"xml\",a='<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>'+r+\"</xml>\");try{o=(new DOMParser).parseFromString(a,p)}catch(r){n=r}if(o||\"html\"!==t||((o=e||(e=function(){if(document.implementation&&document.implementation.createHTMLDocument)return document.implementation.createHTMLDocument(\"\");var r=document.createElement(\"iframe\");return r.style.cssText=\"position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;\",r.setAttribute(\"sandbox\",\"allow-forms\"),document.body.appendChild(r),r.contentWindow.document}())).open(),o.write(a),o.close()),o){var l=o.getElementsByTagName(i)[0],s=l.firstChild;return r&&!s&&(l.error=\"Document parse failed.\"),s&&\"parsererror\"===String(s.nodeName).toLowerCase()&&(s.removeChild(s.firstChild),s.removeChild(s.lastChild),l.error=s.textContent||s.nodeValue||n||\"Unknown error\",l.removeChild(s)),l}}(r,t);if(u&&u.error)throw new Error(u.error);var c=u&&u.body||u;l.map=i||p;var m=c&&function(r,t,e,a){return n.visitor=t,n.h=e,n.options=a||o,n(r)}(c,l,a,s);return l.map=null,m&&m.props&&m.props.children||null}(c,u,C,this.map,g)}catch(r){f?f({error:r}):\"undefined\"!=typeof console&&console.error&&console.error(\"preact-markup: \"+r)}if(!1===i)return s||null;var x=w.hasOwnProperty(\"className\")?\"className\":\"class\",b=w[x];return b?b.splice?b.splice(0,0,\"markup\"):\"string\"==typeof b?w[x]+=\" markup\":\"object\"==typeof b&&(b.markup=!0):w[x]=\"markup\",C(\"div\",w,s||null)},i}(t));\n//# sourceMappingURL=preact-markup.module.js.map\n","import { createContext, h, cloneElement } from 'preact';\nimport { useContext } from 'preact/hooks';\nimport delve from 'dlv';\nimport Markup from 'preact-markup';\n\nvar IntlContext = createContext({ intl: {} });\n\n/** Check if an object is not null or undefined\n *\t@private\n */\nfunction defined(obj) {\n\treturn obj!==null && obj!==undefined;\n}\n\n\n/** A simpler Object.assign\n *  @private\n */\nfunction assign(obj, props) {\n\tfor (var i in props) {\n\t\tobj[i] = props[i];\n\t}\n\treturn obj;\n}\n\n\n/** Recursively copy keys from `source` to `target`, skipping truthy values already in `target`.\n *\t@private\n */\nfunction deepAssign(target, source) {\n\tvar out = assign({}, target);\n\tfor (var i in source) {\n\t\tif (source.hasOwnProperty(i)) {\n\t\t\tif (target[i] && source[i] && typeof target[i]==='object' && typeof source[i]==='object') {\n\t\t\t\tout[i] = deepAssign(target[i], source[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[i] = target[i] || source[i];\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/** select('foo,bar') creates a mapping: `{ foo, bar }`\n *\t@private\n */\nfunction select(properties) {\n\tproperties = properties || {};\n\tif (typeof properties==='string') {\n\t\tproperties = properties.split(',');\n\t}\n\tif ('join' in properties) {\n\t\tvar selected = {};\n\t\tfor (var i=0; i<properties.length; i++) {\n\t\t\tvar val = properties[i].trim();\n\t\t\tif (val) { selected[val.split('.').pop()] = val; }\n\t\t}\n\t\treturn selected;\n\t}\n\treturn properties;\n}\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\n\nvar URL_FLAG = /[?&#]intl=show/;\n\n\n/** `<IntlProvider>` is a nestable internationalization definition provider.\n *\tIt exposes an Intl scope & definition into the tree,\n *\tmaking them available to descendant components.\n *\n *\t> **Note:** When nested, gives precedence to keys higher up the tree!\n *\t> This means lower-level components can set their defaults by wrapping themselves\n *\t> in an `<IntlProvider>`, but still remain localizable by their parent components.\n *\n *\t@name IntlProvider\n *\t@param props\n *\t@param {String} [props.scope]\t\t\tNest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).\n *\t@param {Boolean} [props.mark=false]\t\tIf `true`, all `<Text>` elements will be shown with a red/green background indicating whether they have valid Intl keys.\n *\t@param {Object} [props.definition={}]\tMerge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)\n *\n *\t@example\n *\t// generally imported from a JSON file:\n *\tlet definition = {\n *\t\tfoo: 'Le Feux'\n *\t};\n *\n *\t<IntlProvider scope=\"weather\" definition={definition}>\n *\t\t<Text key=\"foo\">The Foo</Text>\n *\t</IntlProvider>\n *\n *\t// This will render the text:\n *\t\"Le Feux\"\n */\n\nfunction IntlProvider(ref) {\n\tvar scope = ref.scope;\n\tvar mark = ref.mark;\n\tvar definition = ref.definition;\n\tvar rest = objectWithoutProperties( ref, [\"scope\", \"mark\", \"definition\"] );\n\tvar props = rest;\n\n\tvar ref$1 = useContext(IntlContext);\n\tvar parentIntl = ref$1.intl;\n\tvar intl = assign({}, parentIntl || {});\n\n\t// set active scope for the tree if given\n\tif (scope) { intl.scope = scope; }\n\n\t// merge definition into current with lower precedence\n\tif (definition) {\n\t\tintl.dictionary = deepAssign(intl.dictionary || {}, definition);\n\t}\n\n\tif (mark || (typeof location!=='undefined' && String(location).match(URL_FLAG))) {\n\t\tintl.mark = true;\n\t}\n\n\treturn (\n\t\th( IntlContext.Provider, { value: { intl: intl } },\n\t\t\tprops.children\n\t\t)\n\t);\n}\n\n/**\n * Higher-order function that creates an `<IntlProvider />` wrapper component for the given component.  It\n * takes two forms depending on how many arguments it's given:\n * It can take a functional form like:\n * intl(ComponentToWrap, options)\n *\n * or it can take an annotation form like:\n * @intl(options)\n * class ComponentToWrap extends Component {}\n *\n *\t@param {Component or Object} args[0] If there are two arguments, the first argument is the Component to wrap in `<IntlProvider/>`. If there is just one argument, this is the options object to pass as `props` to `<IntlProvider/>`. See the definition of the options param below for details.\n *\t@param {Object} options If there are two arguments, the second argument is Passed as `props` to `<IntlProvider />`\n *\t@param [options.scope]\t\t\tNest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).\n *\t@param [options.definition={}]\tMerge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)\n */\nfunction intl(Child, options) {\n\tif (arguments.length<2) {\n\t\toptions = Child;\n\t\treturn function (Child) { return intl(Child, options); };\n\t}\n\tfunction IntlProviderWrapper(props) {\n\t\treturn h(\n\t\t\tIntlProvider,\n\t\t\toptions || {},\n\t\t\th(Child, props)\n\t\t);\n\t}\n\n\tIntlProviderWrapper.getWrappedComponent = Child && Child.getWrappedComponent || (function () { return Child; });\n\treturn IntlProviderWrapper;\n}\n\nvar EMPTY = {};\n\n/** Populate {{template.fields}} within a given string.\n *\n *\t@private\n *\t@param {String} template\tThe string containing fields to be resolved\n *\t@param {Object} [fields={}]\tOptionally nested object of fields, referencable from `template`.\n *\t@example\n *\t\ttemplate('foo{{bar}}', { bar:'baz' }) === 'foobaz'\n */\nfunction template(template, fields, scope, dictionary) {\n\treturn template && template.replace(/\\{\\{([\\w.-]+)\\}\\}/g, replacer.bind(null, fields || EMPTY, scope, dictionary));\n}\n\n/** Replacement callback for injecting fields into a String\n *\t@private\n */\nfunction replacer(currentFields, scope, dictionary, s, field) {\n\tvar parts = field.split('.'),\n\t\tv = currentFields;\n\tfor (var i=0; i<parts.length; i++) {\n\t\tv = v[parts[i]];\n\t\tif (v == null) { return ''; } // eslint-disable-line eqeqeq\n\n\t\t//allow field values to be <Text /> nodes\n\t\tif (v && v.type === Text) {\n\t\t\treturn translate(v.props.id, scope, dictionary, v.props.fields, v.props.plural, v.props.fallback);\n\t\t}\n\t}\n\t// allow for recursive {{config.xx}} references:\n\tif (typeof v==='string' && v.match(/\\{\\{/)) {\n\t\tv = template(v, currentFields);\n\t}\n\treturn v;\n}\n\n/** Attempts to look up a translated value from a given dictionary.\n *  Also supports json templating using the format: {{variable}}\n *  Falls back to default text.\n *\n *  @param {String} id  \t\t\tIntl field name/id (subject to scope)\n *  @param {String} [scope='']\t\tScope, which prefixes `id` with `${scope}.`\n *  @param {Object} dictionary\t\tA nested object containing translations\n *  @param {Object} [fields={}]\t\tTemplate fields for use by translated strings\n *  @param {Number} [plural]\t\tIndicates a quantity, used to trigger pluralization\n *  @param {String|Array} [fallback]\tText to return if no translation is found\n *  @returns {String} translated\n */\nfunction translate(id, scope, dictionary, fields, plural, fallback) {\n\tif (scope) { id = scope + '.' + id; }\n\n\tvar value = dictionary && delve(dictionary, id);\n\n\t// plural forms:\n\t// key: ['plural', 'singular']\n\t// key: { none, one, many }\n\t// key: { zero, one, other }\n\t// key: { singular, plural }\n\tif ((plural || plural===0) && value && typeof value==='object') {\n\t\tif (value.splice) {\n\t\t\tvalue = value[plural] || value[0];\n\t\t}\n\t\telse if (plural===0 && defined(value.none || value.zero)) {\n\t\t\tvalue = value.none || value.zero;\n\t\t}\n\t\telse if (plural===1 && defined(value.one || value.singular)) {\n\t\t\tvalue = value.one || value.singular;\n\t\t}\n\t\telse {\n\t\t\tvalue = value.some || value.many || value.plural || value.other || value;\n\t\t}\n\t}\n\n\treturn value && template(value, fields, scope, dictionary) || fallback || null;\n}\n\n/** Highlight/colorize the i18n'd node if `mark` is set on `intl` in context.  If not, just returns `value`\n *\n *\t@private\n *\t@param {String|VNode} value\tThe l10n'd text/vnode to highlight or pass through\n *\t@param {string} id\tThe key used to lookup the value in the intl dictionary\n */\nfunction HighlightI18N(ref) {\n\tvar value = ref.value;\n\tvar id = ref.id;\n\n\tvar ref$1 = useContext(IntlContext);\n\tvar intl = ref$1.intl;\n\n\tif (intl && intl.mark) {\n\t\tvar dictionaryKey = \"dictionary\" + (intl && intl.scope ? (\".\" + (intl.scope)) : '') + \".\" + id;\n\t\treturn (\n\t\t\th( 'mark', {\n\t\t\t\tstyle: {\n\t\t\t\t\tbackground: value\n\t\t\t\t\t\t? delve(intl, dictionaryKey)\n\t\t\t\t\t\t\t? 'rgba(119,231,117,.5)'\n\t\t\t\t\t\t\t: 'rgba(229,226,41,.5)'\n\t\t\t\t\t\t: 'rgba(228,147,51,.5)'\n\t\t\t\t}, title: id },\n\t\t\t\tvalue\n\t\t\t)\n\t\t);\n\t}\n\n\treturn value;\n}\n\n/** `<Text>` renders internationalized text.\n *\tIt attempts to look up translated values from a dictionary in context.\n *\n *\tTemplate strings can contain `{{field}}` placeholders,\n *\twhich injects values from the `fields` prop.\n *\n *\tWhen string lookup fails, renders its children as fallback text.\n *\n *\t@param {Object}       props               props\n *\t@param {String}       props.id            Key to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)\n *\t@param {ReactElement} [props.children]    Fallback text if no definition is found\n *\t@param {Object}       [props.fields={}]   Values to inject into template `{{fields}}`. Values in the `fields` object will be coerced to strings, with the exception of `<Text/>` nodes which will be resolved to their translated value\n *\t@param {Number}       [props.plural]      Integer \"count\", used to select plural forms\n *\n *\t@example\n *\t// If there is no dictionary in context..\n *\t<Text id=\"foo\">The Foo</Text>\n *\t// ..produces the text:\n *\t\"The Foo\"\n *\n *\t@example\n *\t// Given a dictionary and some fields..\n *\t<IntlProvider definition={{ foo:'Le Feux {{bar}}' }}>\n *\t\t<Text id=\"foo\" fields={{ bar: 'BEAR' }}>The Foo</Text>\n *\t</IntlProvider>\n *\t// ..produces the text:\n *\t\"Le Feux BEAR\"\n *\n *\t@example\n *\t// Within a scope, both `id` and the definition are namespaced..\n *\t<IntlProvider scope=\"weather\" definition={{ foo:'Le Feux' }}>\n *\t\t<Text id=\"foo\">The Foo</Text>\n *\t</IntlProvider>\n *\t// ..produces the text:\n *\t\"Le Feux\"\n */\nfunction Text(ref) {\n\tvar id = ref.id;\n\tvar fallback = ref.children;\n\tvar plural = ref.plural;\n\tvar fields = ref.fields;\n\n\tvar ref$1 = useContext(IntlContext);\n\tvar intl = ref$1.intl;\n\n\tvar value = translate(\n\t\tid,\n\t\tintl && intl.scope,\n\t\tintl && intl.dictionary,\n\t\tfields,\n\t\tplural,\n\t\tfallback\n\t);\n\n\treturn h( HighlightI18N, { id: id, value: value });\n}\n\n/** Translates the property values in an Object, returning a copy.\n *\t**Note:** By default, `String` keys will be treated as Intl ID's.\n *\tPass `true` to return an Object containing *only* translated\n *\tvalues where the prop is a <Text /> node.\n *\n *\t@private\n *\t@param {Object} props\tAn object with values to translate\n *\t@param {Object} intl\tAn intl context object (eg: `context.intl`)\n *\t@param {Boolean} [onlyTextNodes=false]\tOnly process `<Text />` values\n *\t@returns {Object} translatedProps\n */\nfunction translateMapping(props, intl, onlyTextNodes) {\n\tvar out = {};\n\tintl = intl || {};\n\tprops = select(props);\n\tfor (var name in props) {\n\t\tif (props.hasOwnProperty(name) && props[name]) {\n\t\t\tvar def = props[name];\n\n\t\t\t// if onlyTextNodes=true, skip any props that aren't <Text /> vnodes\n\t\t\tif (!onlyTextNodes && typeof def==='string') {\n\t\t\t\tout[name] = translate(def, intl.scope, intl.dictionary);\n\t\t\t}\n\t\t\telse if (def.type===Text) {\n\t\t\t\t// it's a <Text />, just grab its props:\n\t\t\t\tdef = assign({\n\t\t\t\t\t// use children as fallback content\n\t\t\t\t\tfallback: def.props.children\n\t\t\t\t}, def.props);\n\t\t\t\tout[name] = translate(def.id, intl.scope, intl.dictionary, def.fields, def.plural, def.fallback);\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n/** `<Localizer />` is a Compositional Component.\n *\tIt \"renders\" out any `<Text />` values in its child's props.\n *\n *\t@name Localizer\n *\t@param {Object} props\n *\t@param {Object} props.children\tChild components with props to localize.\n *\t@param {Object} context\n *\t@param {Object} context.intl\t\t[internal] dictionary and scope info\n *\t@example\n *\t<Localizer>\n *\t\t<input placeholder={<Text id=\"username.placeholder\" />} />\n *\t</Localizer>\n *\t// produces:\n *\t<input placeholder=\"foo\" />\n *\n *\t@example\n *\t<Localizer>\n *\t\t<abbr title={<Text id=\"oss-title\">Open Source Software</Text>}>\n *\t\t\t<Text id=\"oss\">OSS</Text>\n *\t\t</abbr>\n *\t</Localizer>\n *\t// produces:\n *\t<abbr title=\"Open Source Software\">OSS</abbr>\n */\nfunction Localizer(ref) {\n\tvar children = ref.children;\n\n\tvar ref$1 = useContext(IntlContext);\n\tvar intl = ref$1.intl;\n\n\treturn children && children.length\n\t\t? children.map(function (child) { return cloneElement(child, translateMapping(child.props, intl, true)); })\n\t\t: children && cloneElement(children, translateMapping(children.props, intl, true));\n}\n\nfunction objectWithoutProperties$1 (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\n/* eslint-disable react/no-danger */\n\n/** `<MarkupText>` is just like {@link Text} but it can also contain html markup in rendered strings.  It wraps its contents in a `<span>` tag.\n *\n *\t@param {Object} props\t\t\t\tprops\n *\t@param {String} props.id\t\t\tKey to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)\n *\t@param {Object} [props.fields={}]\tValues to inject into template `{{fields}}`.  Values in the `fields` object will be coerced to strings, with the exception of `<Text/>` nodes which will be resolved to their translated value\n *\t@param {Number} [props.plural]\t\tInteger \"count\", used to select plural forms\n *\n *\t@example\n *\t// If there is no dictionary in context..\n *\t<MarkupText id=\"foo\"><b>The Foo</b></MarkupText>\n *\t// ..produces the vnode:\n *\t<span><b>The Foo</b></span>\n *\n *\t@example\n *\t// Given a dictionary and some fields..\n *\t<IntlProvider definition={{ foo:'Le Feux <b>{{bar}}</b>' }}>\n *\t\t<MarkupText id=\"foo\" fields={{ bar: 'BEAR' }}>The Foo</MarkupText>\n *\t</IntlProvider>\n *\t// ..produces the vnode:\n *\t<span>Le Feux <b>BEAR</b></span>\n *\n *\t@example\n *\t// Within a scope, both `id` and the definition are namespaced..\n *\t<IntlProvider scope=\"weather\" definition={{ foo:'Le <a href=\"http://foo.com\">Feux</a>' }}>\n *\t\t<MarkupText id=\"foo\">The Foo</MarkupText>\n *\t</IntlProvider>\n *\t// ..produces the vnode:\n *\t<span>Le <a href=\"http://foo.com\">Feux</a></span>\n *\n *\t@example\n *\t// renders nothing if there is no key match and no fallback\n *\t<div><MarkupText /></div>\n *\t// ..produces the vnode:\n *\t<div/>\n */\nfunction MarkupText(ref) {\n\tvar id = ref.id;\n\tvar fields = ref.fields;\n\tvar plural = ref.plural;\n\tvar children = ref.children;\n\tvar rest = objectWithoutProperties$1( ref, [\"id\", \"fields\", \"plural\", \"children\"] );\n\tvar props = rest;\n\n\treturn (\n\t\th( Localizer, null,\n\t\t\th( Html, Object.assign({}, { html: h( Text, { id: id, fields: fields, plural: plural, children: children }), id: id }, props))\n\t\t)\n\t);\n}\n\nfunction Html(ref) {\n\tvar html = ref.html;\n\tvar id = ref.id;\n\tvar rest = objectWithoutProperties$1( ref, [\"html\", \"id\"] );\n\tvar props = rest;\n\n\treturn (\n\t\th( HighlightI18N, {\n\t\t\tid: id, value: !html ? html : typeof html === 'string' ? h( Markup, Object.assign({}, { type: \"html\", trim: false }, props, { markup: html })) : h( 'span', null, html ) })\n\t);\n}\n\n/** `@withText()` is a Higher Order Component, often used as a decorator.\n *\n *\tIt wraps a child component and passes it translations\n *\tbased on a mapping to the dictionary & scope in context.\n *\n *\t@param {Object|Function|String} mapping\t\tMaps prop names to intl keys (or `<Text>` nodes).\n *\n *\t@example @withText({\n *\t\tplaceholder: 'user.placeholder'\n *\t})\n *\tclass Foo {\n *\t\t// now the `placeholder` prop is our localized String:\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example @withText({\n *\t\tplaceholder: <Text id=\"user.placeholder\">fallback text</Text>\n *\t})\n *\tclass Foo {\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example @withText('user.placeholder')\n *\tclass Foo {\n *\t\t// for Strings/Arrays, the last path segment becomes the prop name:\n *\t\trender({ placeholder }) {\n *\t\t\treturn <input placeholder={placeholder} />\n *\t\t}\n *\t}\n *\n *\t@example <caption>Works with functional components, too</caption>\n *\tconst Foo = withText('user.placeholder')( props =>\n *\t\t<input placeholder={props.placeholder} />\n *\t)\n *\n * \t@example <caption>getWrappedComponent() returns wrapped child Component</caption>\n *\tconst Foo = () => <div/>;\n *\tconst WrappedFoo = withText('user.placeholer')(Foo);\n *\tWrappedFoo.getWrappedComponent() === Foo; // true\n */\nfunction withText(mapping) {\n\treturn function withTextWrapper(Child) {\n\t\tfunction WithTextWrapper(props, context) {\n\t\t\tvar ref = useContext(IntlContext);\n\t\t\tvar intl = ref.intl;\n\n\t\t\tvar map = typeof mapping==='function' ? mapping(props, { intl: intl }) : mapping;\n\t\t\tvar translations = translateMapping(map, intl);\n\t\t\treturn h(Child, assign(assign({}, props), translations));\n\t\t}\n\n\t\tWithTextWrapper.getWrappedComponent = Child && Child.getWrappedComponent || (function () { return Child; });\n\t\treturn WithTextWrapper;\n\t};\n}\n\n/** `useText` is the hook version of {@link withText}\n *\n *\t@param {Object|Function|String} mapping\t\tMaps prop names to intl keys (or `<Text>` nodes).\n *\n *\t@example function MyComponent() {\n *\t\tconst { placeholder } = useText({\n *\t\t\tplaceholder: 'user.placeholder'\n *\t\t});\n *\t\treturn <input placeholder={placeholder} />\n *\t}\n *\n *\t@example function MyComponent() {\n *\t\tconst { placeholder } = useText({\n *\t\t\tplaceholder: <Text id=\"user.placeholder\">fallback text</Text>\n *\t\t});\n *\t\treturn <input placeholder={placeholder} />\n *\t}\n *\n *\t@example function MyComponent() {\n *\t\t// for Strings/Arrays, the last path segment becomes the prop name:\n *\t\tconst { placeholder } = useText('user.placeholder');\n *\n *\t\treturn <input placeholder={placeholder} />\n *\t}\n */\nfunction useText(mapping) {\n\tvar ref = useContext(IntlContext);\n\tvar intl = ref.intl;\n\n\treturn translateMapping(\n\t\ttypeof mapping==='function' ? mapping({ intl: intl }) : mapping,\n\t\tintl\n\t);\n}\n\nintl.intl = intl;\nintl.IntlContext = IntlContext;\nintl.IntlProvider = IntlProvider;\nintl.Text = Text;\nintl.MarkupText = MarkupText;\nintl.Localizer = Localizer;\nintl.withText = withText;\nintl.useText = useText;\nintl.translate = translate;\n\nexport default intl;\nexport { IntlContext, IntlProvider, Localizer, MarkupText, Text, intl, translate, useText, withText };\n//# sourceMappingURL=preact-i18n.esm.js.map\n","/*\nADOBE CONFIDENTIAL\nCopyright 2023 Adobe\nAll Rights Reserved.\nNOTICE: All information contained herein is, and remains\nthe property of Adobe and its suppliers, if any. The intellectual\nand technical concepts contained herein are proprietary to Adobe\nand its suppliers and are protected by all applicable intellectual\nproperty laws, including trade secret and copyright laws.\nDissemination of this information or reproduction of this material\nis strictly forbidden unless prior written permission is obtained\nfrom Adobe.\n*/\n\nimport { VNode, ComponentChildren } from 'preact';\nimport { classes } from '.';\n\nexport type VComponentProps = {\n  node: VNode | VNode[];\n  children?: ComponentChildren;\n  [key: string]: any; // allow other unspecified props to be passed without any TS warning\n};\n\nexport function VComponent({ node, ...props }: VComponentProps) {\n  if (!node) return null;\n\n  if (Array.isArray(node)) {\n    return (\n      <>\n        {node.map((n, key) => (\n          <VComponent\n            key={key}\n            node={n}\n            className={props.className}\n            {...props}\n          />\n        ))}\n      </>\n    );\n  }\n\n  // @ts-ignore\n  props.className = classes([node.props.className, props.className]);\n\n  // @ts-ignore\n  return <node.type ref={node.ref} key={node.key} {...node.props} {...props} />;\n}\n"],"names":["classes","reduce","result","item","Array","isArray","className","isActive","trim","delve","t","e","l","r","o","n","p","s","u","a","i","Markup","c","m","v","f","d","h","y","w","C","g","x","b","IntlContext","createContext","defined","obj","assign","props","deepAssign","target","source","out","select","properties","selected","val","objectWithoutProperties","exclude","k","URL_FLAG","IntlProvider","ref","scope","mark","definition","rest","ref$1","useContext","parentIntl","intl","Child","options","IntlProviderWrapper","EMPTY","template","fields","dictionary","replacer","currentFields","field","parts","Text","translate","id","plural","fallback","value","HighlightI18N","dictionaryKey","translateMapping","onlyTextNodes","name","def","Localizer","children","child","cloneElement","objectWithoutProperties$1","MarkupText","Html","html","withText","mapping","WithTextWrapper","context","map","translations","useText","VComponent","node","_jsx","_Fragment","key","type"],"mappings":"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","x_google_ignoreList":[1,2,3]}