{"version":3,"mappings":"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","names":["debounce","timeoutId","clearTimeout","setTimeout","fn","apply","BREAKPOINTS","medium","xlarge","xxlarge","resolveImageUrl","_opts","base","split","URLSearchParams","keyMapping","getImageParamsKeyMap","opts","Object","keys","length","entries","reduce","acc","newKey","auto","quality","crop","fit","forEach","value","params","set","key","String","toString","generateSrcset","imageURL","options","locale","replace","useSlot","callback","elementRef","useRef","loadedRef","methodsRef","useState","children","render","_state","setState","useMemo","get","state","intl","useContext","context","dictionary","_setProps","_registerMethod","useCallback","current","push","warn","_htmlElementToVNode","_jsx","tagName","toLowerCase","ref","refElem","appendChild","elem","getSlotElement","element","document","querySelector","prependChild","insertBefore","firstChild","appendSibling","parent","parentNode","nextSibling","prependSibling","onChange","replaceWith","next","vnode","prev","useEffect","console","error","name","method","JSON","stringify","Slot","slot","slotProps","props","window","DROPINS","showSlots","sessionStorage","setItem","body","classList","toggle","getItem","SvgAdd","React","Add","SvgChevronDown","SvgClose"],"ignoreList":[],"sources":["../../../ElsieSDK/packages/elsie/src/lib/debounce.ts","../../../ElsieSDK/packages/elsie/src/lib/resolve-image.ts","../../../ElsieSDK/packages/elsie/src/lib/i18n.ts","../../../ElsieSDK/packages/elsie/src/lib/slot.tsx","../../../ElsieSDK/packages/elsie/src/icons/Add.svg","../../../ElsieSDK/packages/elsie/src/icons/ChevronDown.svg","../../../ElsieSDK/packages/elsie/src/icons/Close.svg"],"sourcesContent":["export const debounce = (fn: Function, ms: number) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return function (this: any, ...args: any[]) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n","import { getImageParamsKeyMap } from '@adobe/elsie/lib/';\n\nconst BREAKPOINTS = {\n  medium: 768,\n  large: 1024,\n  xlarge: 1366,\n  xxlarge: 1920,\n};\n\nexport interface ResolveImageUrlOptions {\n  width: number;\n  height?: number;\n  auto?: string;\n  quality?: number;\n  crop?: boolean;\n  fit?: string;\n}\n\nconst resolveImageUrl = (url: string, _opts?: ResolveImageUrlOptions) => {\n  const [base, query] = url.split('?');\n  const params = new URLSearchParams(query);\n\n  const keyMapping = getImageParamsKeyMap();\n\n  let opts = {};\n\n  if (keyMapping && Object.keys(keyMapping).length > 0 && _opts) {\n    opts = Object.entries(_opts).reduce((acc, [key, value]) => {\n      const newKey = keyMapping[key];\n      if (newKey) {\n        acc[newKey] = value;\n      }\n      return acc;\n    }, {} as { [key: string]: any });\n  } else {\n    opts = {\n      auto: 'webp',\n      quality: 80,\n      crop: false,\n      fit: 'cover',\n      ..._opts,\n    };\n  }\n  // Append image optimization parameters\n  Object.entries(opts).forEach(([key, value]) => {\n    if (value !== undefined && value !== null) {\n      params.set(key, String(value));\n    }\n  });\n\n  return `${base}?${params.toString()}`;\n};\n\nexport const generateSrcset = (\n  imageURL: string,\n  options: ResolveImageUrlOptions\n) => {\n  if (!imageURL || !options?.width) return;\n\n  const generateSrcsetUrl = (options: ResolveImageUrlOptions) => {\n    return resolveImageUrl(imageURL, {\n      ...options,\n    });\n  };\n\n  return Object.entries(BREAKPOINTS)\n    .map(([, value]) => {\n      // calculate breakpoints width\n      const relativeWidth = (options.width * value) / BREAKPOINTS.xxlarge;\n\n      return `${generateSrcsetUrl({\n        ...options,\n        width: relativeWidth,\n      })} ${value}w`;\n    })\n    .join(',\\n');\n};\n","/**\n * Convert locale from Magento standard to react-intl BCP 47 language tag\n *\n * @param {string} locale - A locale (e.g. `fr_FR`).\n * @returns {string} A BCP 47 language tag (e.g. `fr-FR`).\n */\nexport const toLanguageTag = (locale: string) => {\n  return locale.replace('_', '-');\n};\n","import { RefObject, VNode } from 'preact';\nimport {\n  StateUpdater,\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'preact/hooks';\nimport { IntlContext, Lang } from '@adobe/elsie/i18n';\nimport { HTMLAttributes } from 'preact/compat';\n\ntype MutateElement = (elem: HTMLElement) => void;\n\ninterface State {\n  get: (key: string) => void;\n  set: (key: string, value: any) => void;\n}\n\ninterface SlotElement {\n  appendChild: MutateElement;\n  prependChild: MutateElement;\n  appendSibling: MutateElement;\n  prependSibling: MutateElement;\n}\n\ninterface PrivateContext<T> {\n  _setProps: StateUpdater<{}>;\n  _registerMethod: (\n    cb: (next: T & DefaultSlotContext<T>, state: State) => void\n  ) => void;\n  _htmlElementToVNode: (element: HTMLElement) => VNode;\n}\n\ninterface DefaultSlotContext<T> extends PrivateContext<T> {\n  dictionary: Lang;\n  getSlotElement: (key: string) => SlotElement;\n  replaceWith: MutateElement;\n  appendChild: MutateElement;\n  prependChild: MutateElement;\n  appendSibling: MutateElement;\n  prependSibling: MutateElement;\n  onChange: (cb: (next: T & DefaultSlotContext<T>) => void) => void;\n}\n\ntype Context<T> = T & ThisType<DefaultSlotContext<T>>; // NOSONAR\n\nexport type SlotProps<T = any> = (\n  ctx: T & DefaultSlotContext<T>,\n  element: HTMLDivElement | null\n) => void;\n\nexport type SlotMethod<P = any> = (\n  callback: (next: unknown, state: State) => P\n) => void;\n\n// Slot Hook\nexport function useSlot<K, V extends HTMLDivElement>(\n  // @ts-ignore\n  context: Context<K> = {},\n  callback?: SlotProps<K>,\n  render?: Function\n): [RefObject<V>, Record<string, any>] {\n  // HTML Element\n  const elementRef = useRef<V>(null);\n\n  const loadedRef = useRef(false);\n\n  // Methods\n  const methodsRef = useRef<any>([]);\n\n  // Children VNodes\n  const [props, _setProps] = useState<Record<string, any>>({\n    children: [render?.({})],\n  });\n\n  // Attributes\n  const [_state, setState] = useState<any>({});\n\n  const state = useMemo(\n    () => ({\n      get: (key: string) => _state[key],\n      set: (key: string, value: any) => {\n        setState({ ...state, [key]: value });\n      },\n    }),\n    [_state]\n  );\n\n  /** Internationalization */\n  const { intl }: any = useContext(IntlContext);\n\n  // @ts-ignore\n  context.dictionary = intl.dictionary;\n\n  /** Privates */\n  // @ts-ignore\n  context._setProps = _setProps;\n\n  const _registerMethod = useCallback((callback: Function) => {\n    if (typeof callback === 'function') {\n      methodsRef.current.push(callback);\n    } else {\n      console.warn('Skipped: Invalid _registerMethod', callback);\n    }\n  }, []);\n\n  // @ts-ignore\n  context._registerMethod = _registerMethod;\n\n  const _htmlElementToVNode = useCallback((elem: HTMLElement) => {\n    return (\n      <div\n        data-slot-html-element={elem.tagName.toLowerCase()}\n        ref={(refElem) => {\n          refElem?.appendChild(elem);\n        }}\n      />\n    );\n  }, []);\n\n  // @ts-ignore\n  context._htmlElementToVNode = _htmlElementToVNode;\n\n  /** Prebuilt Methods */\n  // @ts-ignore\n  context.getSlotElement = useCallback((key: string) => {\n    const element = document.querySelector(`[data-slot-key=\"${key}\"]`);\n\n    if (!element) return;\n\n    return {\n      appendChild: (elem: HTMLElement) => {\n        element.appendChild(elem);\n      },\n\n      prependChild: (elem: HTMLElement) => {\n        element.insertBefore(elem, element.firstChild);\n      },\n\n      appendSibling: (elem: HTMLElement) => {\n        const parent = element.parentNode;\n        parent?.insertBefore(elem, element.nextSibling);\n      },\n\n      prependSibling: (elem: HTMLElement) => {\n        const parent = element.parentNode;\n        parent?.insertBefore(elem, element);\n      },\n    };\n  }, []);\n\n  // @ts-ignore\n  context.onChange = useCallback((callback: Function) => {\n    methodsRef.current.push(callback);\n  }, []);\n\n  // @ts-ignore\n  context.replaceWith = useCallback(\n    (elem: HTMLElement) => {\n      // @ts-ignore\n      _registerMethod((next) => {\n        // @ts-ignore\n        const children = _htmlElementToVNode(elem);\n\n        next._setProps({ children: [children] });\n      });\n    },\n    [_htmlElementToVNode, _registerMethod]\n  );\n\n  // @ts-ignore\n  context.appendChild = useCallback(\n    (elem: HTMLElement) => {\n      // @ts-ignore\n      _registerMethod((next) => {\n        // @ts-ignore\n        const vnode = _htmlElementToVNode(elem);\n\n        next._setProps((prev: any) => {\n          return {\n            ...prev,\n            children: [...prev.children, vnode],\n          };\n        });\n      });\n    },\n    [_htmlElementToVNode, _registerMethod]\n  );\n\n  // @ts-ignore\n  context.prependChild = useCallback(\n    (elem: HTMLElement) => {\n      // @ts-ignore\n      _registerMethod((next) => {\n        // @ts-ignore\n        const vnode = _htmlElementToVNode(elem);\n\n        next._setProps((prev: any) => {\n          return {\n            ...prev,\n            children: [vnode, ...prev.children],\n          };\n        });\n      });\n    },\n    [_htmlElementToVNode, _registerMethod]\n  );\n\n  // @ts-ignore\n  context.appendSibling = useCallback(\n    (elem: HTMLElement) => {\n      // @ts-ignore\n      _registerMethod(() => {\n        const parent = elementRef.current?.parentNode;\n\n        parent?.insertBefore(elem, elementRef.current?.nextSibling ?? null);\n      });\n    },\n    [_registerMethod]\n  );\n\n  // @ts-ignore\n  context.prependSibling = useCallback(\n    (elem: HTMLElement) => {\n      // @ts-ignore\n      _registerMethod(() => {\n        const parent = elementRef.current?.parentNode;\n\n        parent?.insertBefore(elem, elementRef.current);\n      });\n    },\n    [_registerMethod]\n  );\n\n  // Initialization\n  useEffect(() => {\n    const element = elementRef.current;\n\n    if (!callback || !element) return;\n\n    // Run callback\n    try {\n      callback(context as K & DefaultSlotContext<K>, element);\n    } catch (error) {\n      console.error(`Error in \"${callback.name}\" Slot callback`, error);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Lifecycles\n  useEffect(() => {\n    // Reset\n    _setProps({ children: [render?.(props)] });\n\n    // Run all registered methods\n    methodsRef.current.forEach((method: any) => {\n      method(context, state);\n    });\n\n    // Required to trigger re-render of render method\n    if (render?.name === 'render' && loadedRef.current === false) {\n      loadedRef.current = true;\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(context), JSON.stringify(_state), loadedRef.current]);\n\n  return [elementRef, props];\n}\n\n// Slot Component\ninterface SlotPropsComponent<T>\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'slot'> {\n  name: string;\n  slot?: SlotProps<T>;\n  context?: Context<T>;\n  render?: (props: Record<string, any>) => VNode | VNode[];\n}\n\nexport function Slot<T>({\n  name,\n  slot,\n  context,\n  children,\n  render,\n  ...props\n}: Readonly<SlotPropsComponent<T>>) {\n  const [elementRef, slotProps] = useSlot<T, HTMLDivElement>(\n    context,\n    slot,\n    render ?? (() => children)\n  );\n\n  useEffect(() => {\n    if (!name) console.warn('Slot \"name\" is required');\n  }, [name]);\n\n  return (\n    <div {...props} ref={elementRef} data-slot={name}>\n      {slotProps.children}\n    </div>\n  );\n}\n\n// Debugger\n\n// @ts-ignore\nwindow.DROPINS = window.DROPINS || {};\n\n// @ts-ignore\nwindow.DROPINS.showSlots = async (state) => {\n  // cache state in session storage\n  window.sessionStorage.setItem(\n    'dropin-debugger--show-slots',\n    state.toString()\n  );\n\n  document.body.classList.toggle('dropin-debugger--show-slots', state);\n\n  if (state) {\n    try {\n      await import('@adobe/elsie/components/UIProvider/debugger.css');\n    } catch (error) {}\n  }\n};\n\n// @ts-ignore\nwindow.DROPINS.showSlots(\n  window.sessionStorage.getItem('dropin-debugger--show-slots') === 'true'\n);\n","import * as React from \"react\";\nconst SvgAdd = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Icon_Add_Base\", \"data-name\": \"Icon \\\\u2013 Add \\\\u2013 Base\", xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Large\" }, /* @__PURE__ */ React.createElement(\"rect\", { id: \"Placement_area\", \"data-name\": \"Placement area\", width: 24, height: 24, fill: \"#fff\", opacity: 0 }), /* @__PURE__ */ React.createElement(\"g\", { id: \"Add_icon\", \"data-name\": \"Add icon\", transform: \"translate(9.734 9.737)\" }, /* @__PURE__ */ React.createElement(\"line\", { vectorEffect: \"non-scaling-stroke\", id: \"Line_579\", \"data-name\": \"Line 579\", y2: 12.7, transform: \"translate(2.216 -4.087)\", fill: \"none\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"line\", { vectorEffect: \"non-scaling-stroke\", id: \"Line_580\", \"data-name\": \"Line 580\", x2: 12.7, transform: \"translate(-4.079 2.263)\", fill: \"none\", stroke: \"currentColor\" }))));\nexport default SvgAdd;\n","import * as React from \"react\";\nconst SvgChevronDown = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M7.74512 9.87701L12.0001 14.132L16.2551 9.87701\", stroke: \"currentColor\", strokeWidth: 1.5, strokeLinecap: \"square\", strokeLinejoin: \"round\" }));\nexport default SvgChevronDown;\n","import * as React from \"react\";\nconst SvgClose = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 5.64001L5.62988 18.37\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 18.37L5.62988 5.64001\", stroke: \"currentColor\" }));\nexport default SvgClose;\n"],"file":"containers/ProductDetails.js"}