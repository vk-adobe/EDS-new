{"version":3,"file":"getRefinedProduct.js","sources":["../src/api/fetch-graphql/fetch-graphql.ts","../src/data/transforms/product-transform.ts","../src/api/graphql/ProductOptionFragment.graphql.ts","../src/api/graphql/ProductFragment.graphql.ts","../src/api/getProductData/graphql/getProductData.graphql.ts","../src/api/getProductData/getProductData.ts","../src/api/getRefinedProduct/graphql/RefineProductQuery.graphql.ts","../src/api/getRefinedProduct/getRefinedProduct.ts"],"sourcesContent":["import { FetchGraphQL } from '@adobe/fetch-graphql';\n\nexport const {\n  setEndpoint,\n  setFetchGraphQlHeader,\n  removeFetchGraphQlHeader,\n  setFetchGraphQlHeaders,\n  fetchGraphQl,\n  getConfig,\n} = new FetchGraphQL().getMethods();\n","import { config } from '@/pdp/api';\nimport { ProductModel } from '@/pdp/data/models';\n\nexport function transformProductData(data: any): ProductModel | null {\n  const productData = data\n    ? ({\n        name: data.name,\n        sku: data.sku,\n        addToCartAllowed: data.addToCartAllowed,\n        inStock: data.inStock,\n        shortDescription: data.shortDescription,\n        metaDescription: data.metaDescription,\n        metaKeyword: data.metaKeyword,\n        metaTitle: data.metaTitle,\n        description: data.description,\n        images: transformImages(data),\n        prices: transformPrices(data),\n        attributes: transformAttributes(data),\n        options: transformOptions(data),\n        optionUIDs: data.optionUIDs,\n        url: data.url,\n        urlKey: data.urlKey,\n        externalId: data.externalId,\n        externalParentId: data.externalParentId,\n      } as ProductModel)\n    : null;\n\n  const transform = config.getConfig()?.models?.ProductDetails?.transform;\n  if (transform && productData) {\n    return transform(productData);\n  }\n\n  return productData;\n}\n\nfunction transformImages(data: any) {\n  return data.images?.map((image: any) => {\n    // Remove protocol from image URL\n    image.url = image.url.replace(/^https?:/, '');\n\n    return image;\n  });\n}\n\nfunction transformAttributes(data: any) {\n  return (\n    data.attributes\n      // only show attributes that are visible in PDP\n      ?.filter(({ roles }: any) => roles?.indexOf('visible_in_pdp') !== -1)\n      // transform attribute values\n      ?.map(({ label, value, name }: any) => {\n        return { id: name, label, value: value.toString().split(',').join(', ') };\n      })\n  );\n}\n\nfunction transformOptions(data: any) {\n  const { options, optionUIDs } = data;\n\n  return options?.map(({ id, title, required, multi, values }: any) => {\n    const typename = values?.[0]?.__typename;\n    let type: any = values?.[0].type;\n\n    const isBundle = values?.[0]?.__typename === 'ProductViewOptionValueProduct';\n\n    if (isBundle) {\n      type = undefined;\n    } else {\n      if (type) {\n        type = type\n          .replace('COLOR_HEX', 'color')\n          .replace('TEXT', 'text')\n          .replace('IMAGE', 'image');\n      } else {\n        type = 'dropdown';\n      }\n    }\n\n    return {\n      id,\n      type,\n      typename,\n      label: title,\n      required,\n      multiple: multi,\n      items: values?.map(({ id, title, inStock, value }: any) => {\n        return {\n          id,\n          label: title,\n          inStock,\n          value: type?.toLowerCase() === 'dropdown' ? id : value?.replace(/^https?:/, ''),\n          selected: optionUIDs?.indexOf(id) > -1,\n        };\n      }),\n    };\n  });\n}\n\nfunction transformPrices(data: any) {\n  const { price, priceRange, __typename: type } = data;\n\n  function getSimpleProductPrices() {\n    const regularPrice = price.regular.amount.value;\n    const finalPrice = price.final?.amount.value ?? price.regular.amount.value;\n\n    const currency = price.regular.amount.currency === 'NONE' //temporary fix if there is no currency\n      ? 'USD'\n      : price?.regular.amount.currency\n\n    return [regularPrice, finalPrice, finalPrice, currency];\n  }\n\n  function getComplexProductPrices() {\n    const finalMinimumPrice = priceRange?.minimum?.final.amount.value;\n    const finalMaximumPrice = priceRange?.maximum?.final.amount.value;\n    let regularPrice;\n\n    if (priceRange?.minimum?.regular?.amount.value === priceRange?.maximum?.regular?.amount.value) {\n      regularPrice = priceRange?.minimum?.regular?.amount.value;\n    }\n\n    const currency = priceRange?.minimum?.final?.amount.currency === 'NONE'\n        ? 'USD'\n        : priceRange?.minimum?.final?.amount.currency;\n\n    return [regularPrice, finalMinimumPrice, finalMaximumPrice, currency];\n  }\n\n  const [regularPrice, finalMinimumPrice, finalMaximumPrice, currency] = type === 'SimpleProductView'\n    ? getSimpleProductPrices() : getComplexProductPrices();\n\n  const visible =\n    type === 'SimpleProductView'\n      ? price?.roles?.includes('visible')\n      : priceRange?.maximum?.roles?.includes('visible') &&\n      priceRange?.minimum?.roles?.includes('visible');\n\n  if (finalMaximumPrice && finalMinimumPrice === finalMaximumPrice) {\n    const hasDiscount = regularPrice && finalMinimumPrice !== regularPrice;\n\n    return {\n      regular: {\n        amount: regularPrice,\n        currency,\n        variant: hasDiscount ? 'strikethrough' : 'default',\n      },\n      final: {\n        amount: finalMaximumPrice,\n        currency,\n        variant: 'default',\n      },\n      visible\n    }\n  }\n\n  return {\n    final: {\n      minimumAmount: finalMinimumPrice,\n      maximumAmount: finalMaximumPrice,\n      currency\n    },\n    visible\n  }\n}\n","export const ProductOptionFragment = `\nfragment ProductOptionFragment on ProductViewOption {\n    id\n    title\n    required\n    multi\n    values {\n      id\n      title\n      inStock\n      __typename\n      ... on ProductViewOptionValueProduct {\n        title\n        quantity\n        isDefault\n        product {\n          sku\n          shortDescription\n          metaDescription\n          metaKeyword\n          metaTitle\n          name\n          price {\n            final {\n              amount {\n                value\n                currency\n              }\n            }\n            regular {\n              amount {\n                value\n                currency\n              }\n            }\n            roles\n          }\n        }\n      }\n      ... on ProductViewOptionValueSwatch {\n        id\n        title\n        type\n        value\n        inStock\n      }\n    }\n  }\n`;\n","import { ProductOptionFragment } from '@/pdp/api/graphql/ProductOptionFragment.graphql';\n\nexport const ProductFragment = `\nfragment ProductFragment on ProductView {\n  __typename\n  id\n  sku\n  name\n  shortDescription\n  metaDescription\n  metaKeyword\n  metaTitle\n  description\n  inStock\n  addToCartAllowed\n  url\n  urlKey\n  externalId\n\n  images(roles: []) {\n    url\n    label\n    roles\n  }\n\n  attributes(roles: []) {\n    name\n    label\n    value\n    roles\n  }\n\n... on SimpleProductView {\n    price {\n        roles\n\n        regular {\n            amount {\n                value\n                currency\n            }\n        }\n\n        final {\n            amount {\n                value\n                currency\n            }\n        }\n    }\n}\n\n\n  ... on ComplexProductView {\n    options {\n      ...ProductOptionFragment\n    }\n\n    priceRange {\n      maximum {\n        final {\n          amount {\n            value\n            currency\n          }\n        }\n        regular {\n          amount {\n            value\n            currency\n          }\n        }\n        roles\n      }\n      minimum {\n        final {\n          amount {\n            value\n            currency\n          }\n        }\n        regular {\n          amount {\n            value\n            currency\n          }\n        }\n        roles\n      }\n    }\n  }\n}\n\n${ProductOptionFragment}\n`;\n","import { ProductFragment } from '@/pdp/api/graphql/ProductFragment.graphql';\n\nexport const GET_PRODUCT_DATA = `\nquery GET_PRODUCT_DATA($skus: [String]) {\n    products(skus: $skus) {\n        ...ProductFragment\n    }\n}\n\n${ProductFragment}\n`;\n","import { config, fetchGraphQl } from '@/pdp/api';\nimport { ProductModel } from '@/pdp/data/models';\nimport { transformProductData } from '@/pdp/data/transforms';\nimport { GET_PRODUCT_DATA } from './graphql/getProductData.graphql';\n\nexport const getProductData = async (\n  sku: string\n): Promise<ProductModel | null> => {\n\n  const initialData = config?.getConfig()?.models?.ProductDetails?.initialData;\n\n  if (initialData) {\n    return transformProductData(initialData);\n  }\n\n  const { data } = await fetchGraphQl(GET_PRODUCT_DATA, {\n    method: 'GET',\n    variables: { skus: [sku] },\n  });\n\n  const product = data?.products?.[0];\n\n  return transformProductData(product);\n};\n","import { ProductFragment } from '@/pdp/api/graphql/ProductFragment.graphql';\n\nexport const REFINE_PRODUCT_QUERY = `\nquery REFINE_PRODUCT_QUERY(\n    $optionIds: [String!]!\n    $sku: String!\n) {\n    # Refined Product\n    refineProduct(\n        optionIds: $optionIds \n        sku: $sku\n    ) {\n        ...ProductFragment\n    }\n\n    # Parent Product\n    products(skus: [$sku]) {\n        ...ProductFragment\n    }\n\n    # %extendedPlaceholder%\n}\n\n${ProductFragment}\n`;\n","import { fetchGraphQl, config } from '@/pdp/api';\nimport { ProductModel } from '@/pdp/data/models';\nimport { transformProductData } from '@/pdp/data/transforms';\nimport { REFINE_PRODUCT_QUERY } from './graphql/RefineProductQuery.graphql';\n\nasync function getProductData(sku: string, optionUIDs: string[]): Promise<any> {\n  const optionPairCombinations = getPairCombination(optionUIDs);\n  const optionQueries = getProductOptionQuery(optionPairCombinations, sku);\n\n  const mergedQueries = REFINE_PRODUCT_QUERY.replace(\n    '# %extendedPlaceholder%',\n    optionQueries\n  );\n\n  const { data } = await fetchGraphQl(mergedQueries, {\n    method: 'GET',\n    variables: { optionIds: optionUIDs, sku },\n  });\n  return data;\n}\n\nexport const getRefinedProduct = async (\n  sku: string,\n  optionUIDs: string[],\n  anchorOptions?: string[]\n): Promise<ProductModel | null> => {\n\n  const data = await getProductData(sku, optionUIDs);\n\n  if (!data) return null;\n  let { products, refineProduct, ...refinedOptions } = data;\n\n  const parent = products?.[0];\n\n  const options = mergeRefinedOptions(\n    Object.values(refinedOptions),\n    parent.options, anchorOptions\n  );\n\n  // needed when anchor options exist\n  if (anchorOptions?.length && refineProduct === null) {\n    optionUIDs = updateSelections(options, optionUIDs, anchorOptions);\n    const updatedRefinedData = await getProductData(sku, optionUIDs);\n    refineProduct = updatedRefinedData?.refineProduct;\n  }\n\n  const refinedData = transformProductData({\n    ...(refineProduct || parent),\n    sku: parent.sku,\n    name: parent.name,\n    externalParentId: parent?.externalId,\n    options,\n    optionUIDs,\n  });\n\n  const fallback = config?.getConfig()?.models?.ProductDetails?.fallbackData;\n\n  if (fallback) {\n    return fallback(parent, refinedData!);\n  }\n\n  return refinedData;\n};\n\nfunction getPairCombination(arr: string[]): string[][] {\n  if (arr.length < 2) {\n    return [arr];\n  }\n\n  const result: string[][] = [];\n\n  arr.forEach((item) => {\n    const temp: string[] = [];\n\n    arr.forEach((item2) => {\n      if (item !== item2) {\n        temp.push(item2);\n      }\n    });\n\n    result.push(temp);\n  });\n\n  return result;\n}\n\nfunction getProductOptionQuery(optionUIDs: string[][], sku: string): string {\n  return optionUIDs\n    .map((ids: string[], i: number) => {\n      return `\n          ProductOption${i}: refineProduct(\n            optionIds: [\n              ${ids.map((id) => `\"${id}\"`).join(', ')}\n            ]\n            sku: \"${sku}\"\n          ) {\n            ... on ComplexProductView {\n              options {\n                ...ProductOptionFragment\n              }\n            }\n          }\n        `;\n    })\n    .join('');\n}\n\nfunction mergeRefinedOptions(options: {}, parent: [], anchorOptions?: string[]) {\n  // flat _refined[].options[] to _refinedOptions[]\n  const refinedOptions: any = Object.values(options)\n    .filter((x) => !!x)\n    .reduce((acc: any, curr: any) => {\n      if (!curr.options) return [...acc];\n\n      return [...acc, ...curr.options];\n    }, []);\n\n  // Create a map to store items by their id from original\n  const map = new Map(parent.map((item: any) => [item.id, item]));\n\n  // Iterate through refinedOptions and merge items\n  refinedOptions.forEach((current: any) => {\n\n  // anchor options should display all values, so no merge is performed\n  if (anchorOptions?.includes(current.id)) {\n    return;\n  }\n\n    map.set(current.id, current);\n  });\n\n  return [...map.values()];\n}\n\nfunction updateSelections(options: any[], optionsUIDs: string[], anchorOptions: string[]): string[] {\n  const updatedOptionsUIDs: string[] = [];\n\n  let optionValue: string;\n  options.forEach((option: any) => {\n    if (anchorOptions.includes(option.id)) {\n      optionValue = option.values?.find((value: any) => optionsUIDs.includes(value?.id))?.id || option.values[0]?.id;\n    } else {\n      optionValue = option.values[0]?.id; // TODO check if we should use default value instead\n    }\n    updatedOptionsUIDs.push(optionValue);\n  });\n  return updatedOptionsUIDs;\n}\n"],"names":["setEndpoint","setFetchGraphQlHeader","removeFetchGraphQlHeader","setFetchGraphQlHeaders","fetchGraphQl","getConfig","FetchGraphQL","getMethods","transformProductData","data","productData","name","sku","addToCartAllowed","inStock","shortDescription","metaDescription","metaKeyword","metaTitle","description","images","transformImages","prices","transformPrices","attributes","transformAttributes","options","transformOptions","optionUIDs","url","urlKey","externalId","externalParentId","transform","config","models","ProductDetails","map","image","replace","filter","roles","indexOf","label","value","id","toString","split","join","title","required","multi","values","typename","__typename","type","undefined","multiple","items","toLowerCase","selected","price","priceRange","getSimpleProductPrices","regularPrice","regular","amount","finalPrice","final","currency","getComplexProductPrices","finalMinimumPrice","minimum","finalMaximumPrice","maximum","visible","includes","variant","minimumAmount","maximumAmount","ProductOptionFragment","ProductFragment","GET_PRODUCT_DATA","getProductData","initialData","method","variables","skus","product","products","REFINE_PRODUCT_QUERY","optionPairCombinations","getPairCombination","optionQueries","getProductOptionQuery","mergedQueries","optionIds","getRefinedProduct","anchorOptions","refineProduct","refinedOptions","parent","mergeRefinedOptions","Object","length","updateSelections","updatedRefinedData","refinedData","fallback","fallbackData","arr","result","forEach","item","temp","item2","push","ids","i","x","reduce","acc","curr","Map","current","set","optionsUIDs","updatedOptionsUIDs","optionValue","option","find"],"mappings":"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"}