{"version":3,"file":"BillingForm.js","sources":["../src/containers/BillingForm/BillingForm.tsx"],"sourcesContent":["import { prepareAddress, setBillingAddress } from '@/checkout/api';\nimport AddressForm, {\n  AddressFormHandle,\n  SaveAddressCommand,\n} from '@/checkout/components/AddressForm';\nimport { compareAddresses } from '@/checkout/containers/BillToShippingAddress';\nimport { BILLING_FORM_NAME } from '@/checkout/containers/BillingForm';\nimport { useAddressFormFields } from '@/checkout/context/address-form-fields';\nimport { AddressFormTypes } from '@/checkout/data/models';\nimport { cartSignal, isBillToShippingSignal } from '@/checkout/signals';\nimport { Container } from '@adobe/elsie/lib';\nimport { HTMLAttributes, useCallback, useEffect, useRef } from 'preact/compat';\n\nexport interface BillingFormProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const BillingForm: Container<BillingFormProps> = (props) => {\n  const { fields } = useAddressFormFields();\n\n  const addressFormRef = useRef<AddressFormHandle>(null);\n\n  const { data: cartData } = cartSignal.value;\n  const cartId = cartData?.id || '';\n  const { checked, setByUser } = isBillToShippingSignal.value;\n  const isVisible = !checked;\n\n  const saveAddressHandler = useCallback(\n    (command: SaveAddressCommand) => {\n      return setBillingAddress({\n        signal: command.signal,\n        cartId,\n        input: {\n          address: checked ? undefined : prepareAddress(command.address),\n          same_as_shipping: checked,\n        },\n      });\n    },\n    [cartId, checked]\n  );\n\n  const shouldAutoFillFormHandler = useCallback(() => {\n    const cartData = cartSignal.value.data;\n    return !compareAddresses(\n      fields!,\n      cartData?.billingAddress,\n      cartData?.shippingAddresses?.[0]\n    );\n  }, [fields]);\n\n  useEffect(() => {\n    if (!setByUser) return;\n\n    const controller = new AbortController();\n\n    if (!checked) {\n      addressFormRef.current!.triggerSaveAddress(controller.signal);\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [checked, setByUser]);\n\n  return (\n    <AddressForm\n      {...props}\n      addressType={AddressFormTypes.BILLING}\n      data-testid=\"billing-form\"\n      headingId=\"Checkout.BillingAddress.title\"\n      name={BILLING_FORM_NAME}\n      ref={addressFormRef}\n      saveAddressHandler={saveAddressHandler}\n      shouldAutoFillForm={shouldAutoFillFormHandler}\n      style={{ display: isVisible ? 'block' : 'none' }}\n    />\n  );\n};\n"],"names":["BillingForm","props","fields","useAddressFormFields","addressFormRef","useRef","data","cartData","cartSignal","value","cartId","id","checked","setByUser","isBillToShippingSignal","isVisible","saveAddressHandler","useCallback","command","setBillingAddress","signal","input","address","undefined","prepareAddress","same_as_shipping","shouldAutoFillFormHandler","compareAddresses","billingAddress","shippingAddresses","useEffect","controller","AbortController","current","triggerSaveAddress","abort","_jsx","AddressForm","addressType","AddressFormTypes","BILLING","headingId","name","BILLING_FORM_NAME","ref","shouldAutoFillForm","style","display"],"mappings":"+mBAeO,MAAMA,EAAsDC,GAAA,CAC3D,KAAA,CAAEC,OAAAA,GAAWC,EAAqB,EAElCC,EAAiBC,EAA0B,IAAI,EAE/C,CAAEC,KAAMC,CAAAA,EAAaC,EAAWC,MAChCC,GAASH,GAAAA,YAAAA,EAAUI,KAAM,GACzB,CAAEC,QAAAA,EAASC,UAAAA,CAAAA,EAAcC,EAAuBL,MAChDM,EAAY,CAACH,EAEbI,EAAqBC,EACxBC,GACQC,EAAkB,CACvBC,OAAQF,EAAQE,OAChBV,OAAAA,EACAW,MAAO,CACLC,QAASV,EAAUW,OAAYC,EAAeN,EAAQI,OAAO,EAC7DG,iBAAkBb,CACpB,CAAA,CACD,EAEH,CAACF,EAAQE,CAAO,CAClB,EAEMc,EAA4BT,EAAY,IAAM,OAC5CV,MAAAA,EAAWC,EAAWC,MAAMH,KAC3B,MAAA,CAACqB,EACNzB,EACAK,GAAAA,YAAAA,EAAUqB,gBACVrB,EAAAA,GAAAA,YAAAA,EAAUsB,oBAAVtB,YAAAA,EAA8B,EAChC,CAAA,EACC,CAACL,CAAM,CAAC,EAEX4B,OAAAA,EAAU,IAAM,CACd,GAAI,CAACjB,EAAW,OAEVkB,MAAAA,EAAa,IAAIC,gBAEvB,OAAKpB,GACYqB,EAAAA,QAASC,mBAAmBH,EAAWX,MAAM,EAGvD,IAAM,CACXW,EAAWI,MAAM,CAAA,CACnB,EACC,CAACvB,EAASC,CAAS,CAAC,EAGrBuB,EAACC,EAAW,CAAA,GACNpC,EACJqC,YAAaC,EAAiBC,QAC9B,cAAY,eACZC,UAAU,gCACVC,KAAMC,EACNC,IAAKxC,EACLY,mBAAAA,EACA6B,mBAAoBnB,EACpBoB,MAAO,CAAEC,QAAShC,EAAY,QAAU,MAAO,CAAA,CAChD,CAEL"}