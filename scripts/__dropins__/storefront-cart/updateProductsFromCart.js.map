{"version":3,"file":"updateProductsFromCart.js","sources":["../src/data/transforms/acdl-context.ts","../src/lib/acdl.ts","../src/api/updateProductsFromCart/graphql/UpdateProductsMutation.ts","../src/api/updateProductsFromCart/updateProductsFromCart.ts"],"sourcesContent":["import { ShoppingCartContext, ShoppingCartItem } from '../models/acdl-models';\nimport { CartModel, Item } from '../models/cart-model';\n\ntype TransformShoppingCartParams = {\n  cart: CartModel;\n  locale?: string;\n};\n\nexport function transformShoppingCart(\n  params: TransformShoppingCartParams\n): ShoppingCartContext {\n  const { cart, locale = 'en-US' } = params;\n\n  return {\n    id: cart.id,\n    items: transformItems(cart.items, locale),\n    prices: {\n      subtotalExcludingTax: cart.subtotal.excludingTax,\n      subtotalIncludingTax: cart.subtotal.includingTax,\n    },\n    totalQuantity: cart.totalQuantity,\n    possibleOnepageCheckout: undefined,\n    giftMessageSelected: undefined,\n    giftWrappingSelected: undefined,\n    source: undefined,\n  };\n}\n\nexport function transformItems(items: Item[], locale: string): ShoppingCartItem[] {\n  return items.map((item: any) => ({\n    canApplyMsrp: false,\n    formattedPrice: formatCurrency(\n      locale,\n      item.price.currency,\n      item.price.value\n    ),\n    id: item.uid,\n    prices: {\n      price: item.price,\n    },\n    product: {\n      productId: item.uid,\n      name: item.name,\n      sku: item.sku,\n      topLevelSku: undefined,\n      specialToDate: undefined,\n      specialFromDate: undefined,\n      newToDate: undefined,\n      newFromDate: undefined,\n      createdAt: undefined,\n      updatedAt: undefined,\n      manufacturer: undefined,\n      countryOfManufacture: undefined,\n      categories: item.url.categories,\n      productType: undefined,\n      pricing: {\n        regularPrice: item.regularPrice.value,\n        minimalPrice: undefined,\n        maximalPrice: undefined,\n        specialPrice: item.discount?.value,\n        tierPricing: undefined,\n        currencyCode: item.regularPrice.currency,\n      },\n      canonicalUrl: item.url.urlKey,\n      mainImageUrl: item.image.src,\n      image: {\n        src: item.image.src,\n        alt: item.image.alt,\n      },\n    },\n    configurableOptions: undefined,\n    quantity: item.quantity,\n  }));\n}\n\nfunction formatCurrency(\n  locale: string,\n  currency: string,\n  value: number\n): string {\n  const formattedLocale = locale.replace('_', '-');\n\n  return new Intl.NumberFormat(formattedLocale, {\n    style: 'currency',\n    currency,\n  }).format(value);\n}\n","/* Publish functions for the Adobe Client Data Layer (ACDL) */\n\nimport { CartModel, Item } from '@/cart/data/models/cart-model';\nimport {\n  transformItems,\n  transformShoppingCart,\n} from '@/cart/data/transforms/acdl-context';\nimport {\n  ShoppingCartContext,\n  ShoppingCartItem,\n} from '../data/models/acdl-models';\n\n/**\n * See: https://github.com/adobe/commerce-events/blob/main/packages/storefront-events-sdk/src/contexts.ts\n */\nexport const contexts = {\n  SHOPPING_CART_CONTEXT: 'shoppingCartContext',\n  PRODUCT_CONTEXT: 'productContext',\n  CHANGED_PRODUCTS_CONTEXT: 'changedProductsContext',\n};\n\n/**\n * See: https://github.com/adobe/commerce-events/blob/main/packages/storefront-events-sdk/src/events.ts\n */\nexport const events = {\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/open-cart.md\n  OPEN_CART: 'open-cart',\n  // See: ??? (not documented in the commerce-events repo)\n  //UPDATE_CART: 'update-cart',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/add-to-cart.md\n  ADD_TO_CART: 'add-to-cart',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/remove-from-cart.md\n  REMOVE_FROM_CART: 'remove-from-cart',\n  // See: https://github.com/adobe/commerce-events/blob/main/examples/events/shopping-cart-view.md\n  SHOPPING_CART_VIEW: 'shopping-cart-view',\n};\n\nexport function getAdobeDataLayer() {\n  // @ts-ignore\n  window.adobeDataLayer = window.adobeDataLayer || [];\n  // @ts-ignore\n  return window.adobeDataLayer;\n}\n\n/**\n * Sets a context in the Adobe Client Data Layer (ACDL)\n * Logic based on: https://github.com/adobe/commerce-events/blob/main/packages/storefront-events-sdk/src/Base.ts#L6\n */\nfunction setContext(name: string, data: any) {\n  const adobeDataLayer = getAdobeDataLayer();\n\n  // Clear existing context\n  adobeDataLayer.push({\n    [name]: null,\n  });\n\n  // Set new context\n  adobeDataLayer.push({\n    [name]: data,\n  });\n}\n\n/**\n * Pushes an event to the Adobe Client Data Layer (ACDL)\n * Logic based on: https://github.com/adobe/commerce-events/blob/1973d0ce28471ef190fa06dad6359ffa0ab51db6/packages/storefront-events-sdk/src/Base.ts#L34\n */\nfunction pushEvent(event: string, additionalContext?: any) {\n  const adobeDataLayer = getAdobeDataLayer();\n\n  adobeDataLayer.push((acdl: any) => {\n    const state = acdl.getState ? acdl.getState() : {};\n\n    acdl.push({\n      event,\n      eventInfo: {\n        ...state,\n        ...additionalContext,\n      },\n    });\n  });\n}\n\n// Triggered when a new cart is created, which is when a product is added to an empty cart.\nexport function publishOpenCartEvent(\n  cart: CartModel,\n  addedItems: Item[],\n  locale: string\n) {\n  const shoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  // Set context and push open cart event\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  pushEvent(events.OPEN_CART);\n\n  // Set context and push add to cart event for each updated item\n  const shoppingCartItems = transformItems(addedItems, locale);\n\n  shoppingCartItems.forEach((item) => {\n    setContext(contexts.PRODUCT_CONTEXT, item.product);\n    publishItemsUpdatedEvent(shoppingCartContext, [item], events.ADD_TO_CART);\n  });\n}\n\n// Triggered when any cart page loads.\nexport function publishShoppingCartViewEvent(cart: CartModel, locale: string) {\n  const shoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  pushEvent(events.SHOPPING_CART_VIEW);\n}\n\n// A re-usable function to publish events when items are added to, or removed from the cart.\nfunction publishItemsUpdatedEvent(\n  shoppingCartContext: ShoppingCartContext,\n  updatedItems: ShoppingCartItem[],\n  event: string\n) {\n  const changedProductsContext = {\n    items: updatedItems,\n  };\n\n  setContext(contexts.SHOPPING_CART_CONTEXT, {\n    ...shoppingCartContext,\n  });\n\n  setContext(contexts.CHANGED_PRODUCTS_CONTEXT, {\n    ...changedProductsContext,\n  });\n\n  pushEvent(event);\n}\n\nexport function publishCartUpdateEvents(\n  cart: CartModel,\n  updatedItems: {\n    uid: string;\n  }[],\n  locale: string\n) {\n  const newShoppingCartContext = transformShoppingCart({\n    cart,\n    locale,\n  });\n\n  const currentItems = newShoppingCartContext.items;\n\n  const adobeDataLayer = getAdobeDataLayer();\n\n  const currentState = adobeDataLayer.getState ? adobeDataLayer.getState() : {};\n\n  const { shoppingCartContext: { items: previousItems = [] } = {} } =\n    currentState;\n\n  updatedItems.forEach((updatedItem) => {\n    const previousItem = previousItems.find(\n      (item: ShoppingCartItem) => item.id === updatedItem.uid\n    );\n\n    const currentItem = currentItems!.find(\n      (item: ShoppingCartItem) => item.id === updatedItem.uid\n    );\n\n    if (!currentItem && !previousItem) {\n      // Not enough data available to publish an event\n      // Adobe Data Layer possibly not initialized yet\n      return;\n    }\n\n    if (!previousItem && currentItem) {\n      // Publish add to cart event for the item added\n      setContext(contexts.PRODUCT_CONTEXT, currentItem.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [currentItem],\n        events.ADD_TO_CART\n      );\n    } else if (previousItem && !currentItem) {\n      // Publish remove from cart event for the item removed\n      setContext(contexts.PRODUCT_CONTEXT, previousItem.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [previousItem],\n        events.REMOVE_FROM_CART\n      );\n    } else if (currentItem!.quantity > previousItem.quantity) {\n      // Publish add to cart event for the item increased\n      setContext(contexts.PRODUCT_CONTEXT, currentItem!.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [currentItem!],\n        events.ADD_TO_CART\n      );\n    } else {\n      // Publish remove from cart event for the item decreased\n      setContext(contexts.PRODUCT_CONTEXT, currentItem!.product);\n      publishItemsUpdatedEvent(\n        newShoppingCartContext,\n        [currentItem!],\n        events.REMOVE_FROM_CART\n      );\n    }\n  });\n}\n","import { CART_FRAGMENT, CART_ITEMS_PAGINATION_ARGUMENTS } from '../../graphql/CartFragment';\n\nexport const UPDATE_PRODUCTS_FROM_CART_MUTATION = `\n  mutation UPDATE_PRODUCTS_FROM_CART_MUTATION(\n      $cartId: String!, \n      $cartItems: [CartItemUpdateInput!]!,\n      ${CART_ITEMS_PAGINATION_ARGUMENTS}\n    ) {\n    updateCartItems(\n      input: {\n        cart_id: $cartId\n        cart_items: $cartItems  \n      }\n    ) {\n      cart {\n        ...CartFragment\n      }\n\n    }\n  }\n  ${CART_FRAGMENT}\n`;\n","import { state } from '@/cart/lib/state';\nimport { fetchGraphQl } from '@/cart/api';\nimport { handleFetchError } from '@/cart/lib/fetch-error';\nimport { CartModel } from '@/cart/data/models';\nimport { transformCart } from '@/cart/data/transforms';\nimport { events } from '@adobe/event-bus';\n\nimport { UPDATE_PRODUCTS_FROM_CART_MUTATION } from './graphql/UpdateProductsMutation';\nimport { publishCartUpdateEvents } from '@/cart/lib/acdl';\n\ntype UpdateProductsFromCart = Array<{\n  uid: string;\n  quantity: number;\n}>;\n\nexport const updateProductsFromCart = async (\n  items: UpdateProductsFromCart\n): Promise<CartModel | null> => {\n  const cartId = state.cartId;\n\n  if (!cartId) {\n    throw Error('Cart ID is not set');\n  }\n\n  return fetchGraphQl(UPDATE_PRODUCTS_FROM_CART_MUTATION, {\n    variables: {\n      cartId,\n      cartItems: items.map(({ uid, quantity }) => ({\n        cart_item_uid: uid,\n        quantity,\n      })),\n    },\n  }).then(({ errors, data }) => {\n    if (errors) return handleFetchError(errors);\n\n    const payload = transformCart(data.updateCartItems.cart);\n\n    events.emit('cart/updated', payload);\n    events.emit('cart/data', payload);\n\n    if (payload) {\n      // Publish cart update events\n      publishCartUpdateEvents(payload, items, state.locale || 'en-US');\n    }\n\n    return payload;\n  });\n};\n"],"names":["transformShoppingCart","params","cart","locale","id","items","transformItems","prices","subtotalExcludingTax","subtotal","excludingTax","subtotalIncludingTax","includingTax","totalQuantity","possibleOnepageCheckout","undefined","giftMessageSelected","giftWrappingSelected","source","map","item","canApplyMsrp","formattedPrice","formatCurrency","price","currency","value","uid","product","productId","name","sku","topLevelSku","specialToDate","specialFromDate","newToDate","newFromDate","createdAt","updatedAt","manufacturer","countryOfManufacture","categories","url","productType","pricing","regularPrice","minimalPrice","maximalPrice","specialPrice","discount","tierPricing","currencyCode","canonicalUrl","urlKey","mainImageUrl","image","src","alt","configurableOptions","quantity","formattedLocale","replace","Intl","NumberFormat","style","format","contexts","SHOPPING_CART_CONTEXT","PRODUCT_CONTEXT","CHANGED_PRODUCTS_CONTEXT","events","OPEN_CART","ADD_TO_CART","REMOVE_FROM_CART","SHOPPING_CART_VIEW","getAdobeDataLayer","adobeDataLayer","window","setContext","data","push","pushEvent","event","additionalContext","acdl","state","getState","eventInfo","publishOpenCartEvent","addedItems","shoppingCartContext","forEach","publishItemsUpdatedEvent","publishShoppingCartViewEvent","updatedItems","changedProductsContext","publishCartUpdateEvents","newShoppingCartContext","currentItems","currentState","previousItems","updatedItem","previousItem","find","currentItem","UPDATE_PRODUCTS_FROM_CART_MUTATION","CART_ITEMS_PAGINATION_ARGUMENTS","CART_FRAGMENT","updateProductsFromCart","cartId","Error","fetchGraphQl","variables","cartItems","cart_item_uid","then","errors","handleFetchError","payload","transformCart","updateCartItems","emit"],"mappings":"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"}