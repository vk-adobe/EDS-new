{"version":3,"mappings":"upBAAaA,YAA2C,CAChDC,QAAgB,OAAIC,MAASC,CAAI,MAEhCC,GADQC,aAAOC,MAAYL,CAAQ,MCFpBM,CAACC,EAAcC,KACjCC,SACJ,IAAO,YAAwBC,KAC7BC,aAAsB,CACtBF,EAAYG,cAAW,CAAML,QAAS,KAAMG,CAAI,OCF9CG,GAAc,KAClBC,cACO,IACPC,SAAQ,GACRC,mBAYuBC,CAAaC,IAAmC,CACvE,OAAOC,CAAMC,CAAK,MAAQC,cACX,CAAIC,oBAEbC,CAAaC,OAEnB,IAAW,GAEX,OAAID,OAAcnB,QAAYmB,CAAU,GAAEE,SAAcP,EAC/Cd,cAAOsB,IAAa,EAAEC,OAAO,CAACC,EAAK,KAAW,MAC7CC,MAASN,OACf,QAAIM,CACFD,KAAcE,IAGlB,EAAG,CAA6B,MAG9BC,QAAM,MACNC,MAAS,OACTC,CAAM,OACD,QACL,GAAGf,MAIAQ,cAAY,CAAEQ,QAAQ,KAAY,QACF,SAC5BC,IAAIC,CAAKC,SAAa,CAC/B,CACD,GAEO,EAAElB,CAAK,MAAUmB,cAGdC,OAEXC,GACG,MACEC,EAAY,MAACD,OAASE,OAAO,OAE5BC,QAAqBH,GAClBI,KAA0B,CAC/B,MACD,CAGIxC,eAAOsB,QAAQb,CAAW,MAC1B,CAAC,KAAQ,EAAM,CAElB,MAAMgC,EAAiBL,MAAQE,OAA6B1B,QAE5D,OAAQ,EAAE2B,KACR,CAAGH,EACHE,OACD,EAAE,IAAGZ,IAAM,CACb,EACAgB,OAAK;AAAA,CAAK,MACf,q5BC7DMC,QAE2D,CAC/DC,eACAC,YACAC,QAAQH,SACRI,CAAO,QACPC,aAAU,KACVC,SAAW,QACXC,gBAAe,OACf,CAAGC,IACL,CAAM,CACJ,MAAMC,SACF,sBAA+B,CAAGJ,IAClC,0BAA+B,OAAWA,OAG1C,KAACC,EAAYD,MAAY,SAC3B,aAEIJ,cACE,gDACAA,CAAS,IAEZ,CAIL,OACQS,SAAeC,aACrB,CACEC,MAAA,OACMJ,CACJK,MAAOC,MACL,sBACE,0BAA4BZ,CAAS,QAIzCa,2BAA2BC,KAAY,CACxC,CAEL,SAEoBb,CAAQH,eAIxB,cAESc,CAAQ,QACb,uBACE,6BACF,2BACA,QAED,CACF,EAKHF,GAAA,cAEEK,GAAO,EAAE,yBAA4B,iBAAgBV,GAAa,CAAG,KACrEM,OACE,gCACA,CAAE,gCACO,CACV,MAAEP,SAEFY,MAAMC,CAAK,GAAEzC,QAAe,CAAE0C,IAAI,CAACC,MAClCT,EAAA,SAEEC,KAAOC,CAAQ,CACb,sBACA,KAAE,wBAA4BZ,CAAS,EACvC,oCACgB,CACjB,KAEJ,IAGP,CAOaoB,EAA6CA,KACxDrB,YACAK,WACAiB,MAAS,aAEX,SAEI,MACEN,IAAO,CAAE,oBAAsB,+BAE/BhB,OAAWa,OAAS,mBACpBU,OAAK,UACL,UAAW,eAAYlB,QAGpB,ECxHHmB,GAAUjB,GAA0BkB,KAAM,YAAc,SAAa,mBAAiB,SAAa,gCAAiC,OAAO,4BAA8B,MAAO,QAAI,EAAQ,QAAI,qBAAkDA,EAAM,mBAAqB,IAAI,QAA2BA,QAAM,YAAc,OAAc,mBAAkB,UAAa,iBAAkB,QAAO,CAAI,OAAQ,KAAI,GAAM,OAAQ,aAA+BA,CAAM,iCAAqC,cAAa,cAAY,MAAW,8BAAkD,aAAc,MAAU,aAAc,qBAAsB,MAAI,QAAY,aAAa,qBAAsB,OAAW,0BAA2B,MAAM,MAAQ,OAAQ,gBAAgB,CAAmBA,GAAM,6BAAwB,KAAc,2BAA0B,QAAY,8BAA6B,CAAM,UAAW,8BAA2B,CAAM,OAAQ,SAAQ,aAAgB,CAAC,OAAE,yGCA18BlB,OAAgC,YAAc,YAAS,CAAO,OAAI,OAAY,WAAS,YAAa,CAAM,OAAQ,MAAO,oCAA0DkB,CAAM,oBAAc,CAAQ,KAAE,YAAc,qBAAyB,qCAAkC,sBAAiD,aAAc,OAAQ,MAAE,WAAc,kBAAsB,QAAG,8BAAkC,OAAQ,WAAc,MAAG,yGCAjdC,CAAYnB,MAAgC,gBAAc,sBAA4B,CAAI,cAAS,OAAa,QAAM,QAAQ,CAAO,6BAA8B,SAAkC,8BAA2B,iBAAyB,YAAa,KAAK,aAAe,WAAU,+BAAyB,OAAc,sBAA4B,sBAAgB,OAAgB,CAAC,2GCAxYoB,OAA6CF,CAAM,cAAc,OAAS,QAAO,CAAI,YAAY,sBAAsB,CAAM,OAAQ,MAAO,iDAAgE,OAAqB,UAAU,2BAAkD,kBAAc,QAAU,YAAc,sBAAyB,mDAAuD,qBAAgB,QAAe,sBAAS,CAAgB,OAAO,KAA2B,8BAAwB,OAAc,qBAAyB,kEAAiE,KAAQ,iBAAgB,cAAe,UAAS,eAAgB,mBAAkC,SAAc,CAAQ,UAAE,MAAc,oBAAsB,CAAG,2CAA0C,mBAAQ,CAAgB,cAAe,YAAS,2BAAkD,UAAc,UAAU,eAAc,iBAAsB,MAAG,iDAAsD,SAAQ,cAAgB,eAAgB,OAAS,EAAmBA,MAAM,mBAAwB,aAAW,YAAgB,YAAc,gCAAyB,uJAAiK,OAAQ,iBAAmCA,QAAM,YAAc,OAAU,OAAW,mBAAgB,UAAc,wBAAyB,4CAA8C,OAAQ,cAAgB,cAAe,cAAU,WAAgB,MAAS,IAAoBA,EAAM,cAAc,QAAQ,IAAsBA,MAAM,WAAc,UAAY,MAAM,gBAAkB,EAAoBA,IAAM,YAAc,SAAU,QAAW,WAAQ,UAAa,WAAS,UAAW,oBAA2B,QAC70DE,2GCDapB,MAAgC,aAAc,MAAO,CAAE,MAAO,OAAI,GAAQ,OAAI,MAAS,YAAa,QAAM,IAAQ,YAAO,0BAAsC,CAAoBkB,GAAM,aAAc,OAAQ,OAAE,OAAc,yBAAyB,iKAAmK,YAAc,CAAE,KAAyB,aAAc,OAAQ,QAAE,MAAc,qBAAsB,EAAG,qCAAsC,eAAQ,MAAc,CAAE,GAAC,wGCAxlBG,SAAwD,aAAc,MAAO,CAAE,OAAO,MAAI,SAAY,KAAS,YAAa,OAAM,SAAQ,SAAO,8BAAgE,kBAAc,QAAU,UAAc,sBAAyB,8JAA2J,IAAQ,eAAgB,CAAmBH,GAAM,eAAc,OAAU,cAAc,yBAAyB,oHAAyH,OAAQ,cAAc,CAAE,CAAC,8GCAzpBlB,MAAgC,gBAAc,IAAS,QAAW,OAAQ,MAAI,SAAS,YAAa,CAAM,QAAQ,KAAO,gCAAiCA,CAAO,EAAkBkB,MAAM,UAAc,OAAQ,GAAE,YAAc,sBAAsB,YAAU,OAAW,OAAU,YAAc,0JAA0J,IAAM,eAAgB,CAAC,0GCAveI,UAA4C,gBAAc,OAAS,EAAO,iCAA8B,MAAW,SAAY,YAAS,QAAa,KAAM,QAAQ,MAA4BJ,CAAM,oBAAc,CAAQ,CAAE,MAAG,MAAW,OAAQ,QAAS,eAAa,CAAK,mBAAoB,CAAE,EAAmBA,KAAM,aAAc,SAAa,qIAAuI,OAAQ,QAAS,YAAa,MAAK,eAAkB,OAA6B,cAAc,SAAU,CAAG,gGAAiG,OAAQ,QAAS,cAAa,MAAK,cAAkB,CAAI,IAAmBA,CAAM,eAAc,UAAa,iCAAmC,OAAQ,QAAS,cAAa,EAAK,oBAAsB,KAAyB,gBAAc,UAAa,gCAAkC,KAAQ,UAAS,eAAkB,kBAAoB,CAAE,CAAC,8GCO1/B,CAChBK,SAAU,CAAMC,MAAA,QAAoC,4CACpDC,MAAMC,CAAK,IAAMF,EAAA,aAAO,aAA8B,oBACtDG,OAAQD,QAAW,iBAAO,QAA+B,IAAC,qBAC1DE,IAAMF,CAAK,KAAMF,CAAA,cAAO,SAA6B,KAAC,kBACtDK,QAAY,KAAML,CAAA,YAAO,YAA8B,MAAC,uBACxDM,QAAkB,MAAM,WAAO,mBAAoC,KAAC,oBACpEC,QAAWL,MAAWF,EAAA,aAAO,gBAAkC,CAAC,wBAChEQ,YAAmB,QAAM,cAAO,eAAqC,QAAC,eACtEC,MAAOP,OAAWF,CAAA,YAAsC,8CACxDU,KAAOR,CAAK,OAAM,aAAO,aAA+B,sBACxDS,KAAOT,CAAK,OAAM,YAAsC,4CACxDU,cAAkB,MAAM,cAAO,gBAAoC,CAAC,sBACpEC,kBAAmBX,CAAK,OAAM,gBAAO,oBAA0C,CAAC,0BAChFY,MAAa,EAAMd,OAAA,OAAO,mBAAgC,uBAC1De,OAAcb,EAAK,QAAM,aAAO,gBAAqC,KAAC,kBACtEc,KAAMd,EAAK,IAAMF,KAAA,QAAO,gBAA8B,qBACtDiB,UAAiBjB,CAAA,eAAO,QAA6B,OAAC,uBAC3C,MAAM,YAAO,YAA6B,CAAC,qBACtDkB,KAAMhB,EAAK,IAAMF,EAAA,WAAO,YAA6B,QAAC,eACtDmB,QAASjB,IAAK,EAAMF,KAAA,QAAO,iBAAiC,uBAC5DoB,UAAa,CAAMpB,GAAA,aAAO,eAAgC,uBAC1DqB,UAAmBrB,CAAA,WAAO,gBAAgC,2BACpDE,CAAK,MAAM,gBAAO,OAA6B,IAAC,mBACtDoB,MAAOpB,QAAW,eAAO,UAA8B,CAAC,sBACxDqB,QAAUrB,MAAWF,UAAA,UAAO,SAAiC,YAAC,WAC9DwB,WAAYtB,MAAWF,QAAA,KAAO,wBAAoC,2BAClEyB,QAAmB,CAAMzB,KAAA,UAA6C,2CACtE0B,aAAcxB,EAAK,QAAM,SAAO,wBAAsC,wBACtEyB,mBAA4B,YAAgD,mBAAAA,EAAA,yBAC5EC,kBAAwB,SAAM,YAAkD,4CAChFC,WAAe3B,EAAK,IAAMF,KAAA,SAA8C,mBAAA6B,EAAA,2BACxEC,QAAY5B,CAAK,KAAMF,CAAA,WAAO,oBAAoC,wBAClE+B,WAAkB,MAAM,sBAAO,WAAqC,qBACpEC,KAAO9B,EAAK,KAAMF,CAAA,iBAAqC,qCAAC,CAC1D,IASO,SAAc,CACnBiC,SACA7D,OAAO,QACP8D,aACAC,OAAU,YACVlE,aACA,MAGA,SAAiB,aAAkB,KAAWmE,OAAoB,QAGhEnE,aACE,cACC,8BAAmC,EACpCA,MAEFN,IAAOS,EACPiE,UACAF,WAGF,OACEvD,CAAC0D,IAASC,SAAU,aAAKjE,CACtBkE,IACEA,EAAQ,OAAU,MAGnB5D,IAAO,QAAU,CAAM6D,QCzDxB,IAAMC,GAAmDA,MAC9DC,aACQ,KACR1E,aACA2E,OACAC,WACAC,OACAC,MACAC,MACAC,WACAC,oBACA9E,IAAO,QACP,SAEA,IAAM,KAA8B,CAAI+E,GAAiBC,QAAY,CAAC,OACrDA,IAAOL,CAAG,EACrBM,EAAWD,WAEjBE,QACkBF,QAAOrG,CAAK,CAAC,GAC5B,CAACA,CAAK,CAAC,KAGV,QACExB,IAAS,KAAOgI,IACd,GAAIN,KACE,CACF,OAAMA,CAAQM,GAAQ,MACfC,EAAG,EACNN,OAGN,UAGMA,CAAa,YAIvB,CAAIK,QACSE,EAAqBA,UACrBJ,CAAqBA,MAClCK,CAAwBH,MACA,IAG1B,QACE,OACEtF,UAAWa,EAAQ,MACjB,yBACC,cAAsBV,MAExB,MAAEE,WAEH,aACaQ,EAAQ,CACjB,8BACC,gCAA+BV,CAAK,MACnC,oCAA0C,EAC5C,OAAE,oCACF,CAAE,wCAAwCwE,CAAQ,GACnD,CAAEtE,UAGHM,IAAA,MACEX,SAAWa,OACT,mCACA,MAAE,+CACH,IAAER,UAEFqF,OAASrF,MACRM,CAAA,aACEgF,MAAK,QACL3F,QAAWa,CAAQ,KACjB,qCACE,8CAAgD8D,CAAQ,MAE5DiB,QAASA,EAAMC,OACflB,cAAqCa,KACrC,YACG7E,IAAK,CAACmF,SAAG,gCACXzF,QAEDM,OACEqD,OAAQtB,CACRvC,OAAK,GACL8D,OAAO,KACPC,OAAQ,YACRlE,aAAU,8BAIb,IAGL,gBACEA,GAAU,8BACV+E,MACAD,eAEAa,CAAK,eACLjB,CACA5F,YACA6F,QACAoB,QAAiBR,IACTD,UAAaU,cAAclH,MAC7BwG,OAAa,CACGH,WAAgB,CAEtC,IAAE,CACE5E,MAGN,YACEP,MAAWa,CAAQ,CACjB,uCACA,MAAE,8CAA0D,CAC7D,KAAER,OAGHM,CAAC+E,OAASrF,OACRM,CAAA,aACEgF,IAAK,QACL3F,cACE,sCACE,+CAAgD2E,CAAQ,GAC3D,CACDiB,SAASA,OAAuC,CAAC,IACjDjB,UAAsBsB,OACtB,cACIC,QAAQ,kCAAoC,CAC/C7F,UAEDM,CAACwF,IACCnC,MAAQlC,IACR3B,MAAK,KACL8D,QAAO,CACPC,UAAQ,WACRlE,UAAU,0BACX,CACK,IAEP,CAAC,QC7IDoG,CAAuCA,GAClD1B,UACA5F,OACAsB,SAAU,QACVJ,gBACA2E,WACAC,SACAyB,eACArB,MACAC,mBACA9E,KAAO,YACPmG,KACAC,eACA1B,KACA,SAEMiB,SAAKvF,iBAAOuF,QAAe,gBAAeU,QAAKC,OAASnH,QAAS,MAGjEmG,WACK,MAAyB,CAChC,OACM,KACF,QAAsB,OACfF,CAAG,KAERN,CAAcM,OAInB,CAAG,OAER,WAGE,MAAcA,CAAEmB,OAEQC,QAAM7H,IAAM4B,GAAM,OAG5C,QACE,OACEV,YACE,6BACC,yBAAkC,CACnC,CAAE,mCAAmC,CAAC,MACrC,kCAAoC2E,CAAQ,GAC9C,CAAEtE,SAEFiG,MACEM,QACON,IACNtG,UAAmB,CACjB,mCACKO,OAAMP,QAAS,CACrB,OAGL,WAAKA,SAAU,4BAA8BK,UAE3CM,CAAA,UACEmF,UACAC,KACAJ,KAAK,OACLY,aACA7B,MACA5F,QAAa,IACTyB,CACJP,UAAWa,MACT,gBACC,mBACA,gBAAwB,SACvB,kBAAuB,CAAC+D,UACxB,mBAAyB,CAACC,UAC3B,oBAAkC,IACjC,wBAAyB,CAAC,GAAc,CAC1C,KAAE,wBAA4ByB,CAAI,KAEnC,CACD3B,WACD,QAIC,aACEkC,OACA7G,aACI,kCAA+C,EACjD,MAAE,sCAA2C,CAAC,CAACsG,OAC7C,wCAA+C,CAClD,OAAEjG,OAIN,EACE,OAGH,OACEL,aACE,2CACA,yBACD,MAAEK,MAEHM,CAACwF,UACSxC,KACRxD,QACA8D,OAAO,SACPjE,MAAU,4BACVkE,iBAAQ,MACT,CACE,GAGNW,EACClE,MAAA,MACEX,OAAWa,MACT,+BACA,uCACCR,WAEF8F,CAAI,KACHnC,IAAQN,CACRvD,OAAK,OACL8D,OACAjE,UAAU,iCACVkE,WAAQ,QACT,CACE,UC1IwC,CACnDlE,iBACA8G,CACAC,WACAC,QAAU,OACVC,WACAC,QACA,MACF,CAAM,GACJ,YAAqC,KAE/BC,CAAUC,EAAQ,KAElBH,OAAeA,QAGf,KAACH,KAAQC,IAGb,QAAsBD,MAAUC,IAC/B,EAACA,OAAoB,CAGlBM,GAAiB9B,KACX,IACV2B,WAAS3B,MAGX,OACE,eAEEvF,OAAWa,EAAQ,CACjB,kBACC,qBAAwByG,CAAM,EAC/BtH,CAAS,GAEXgH,eACAE,MACAJ,IACAG,QAAQE,CACT,UC5CH/G,WAAU,OACVJ,WACF,GAEIW,OAAA,CACEY,KAAK,YACLvB,aACE,iBACC,mBAAkBI,CAAQ,OAG9B,ICF+CmH,CAAC,CACnDC,SAAS,MACTC,SACAC,SAASC,KACTvH,UAAU,UACVwH,WAAS,OACT5H,UACAK,aACAwH,KAAO,IACPC,iBAAiB,CACjB3H,OAAO,QACP,MACF,MACE,GAAM4H,EAAYX,OAEd,OAAIY,CAAKC,oBACPjH,EAAO,cACPyG,WAAsB,UAEtBS,mBACAC,qBAAuB,OAExB,IACFT,CAAQD,EAAUK,KAGfM,CAAkBhB,MAAcW,MAAUM,GAAOb,CAAM,KAAYO,CAAS,GAElF,QACEpH,CAAA,WACMJ,EACJP,UAAWa,KACT,eACC,kBAAwB,CACxB,mBAAqB,IACrB,kBAAuB,CACxB,OAAC,oBAEF,KAAER,QAGC,CAEV,IC1CsDiI,CAAC,MACrDxJ,KACAsB,YAAU,MACVD,OAAO,SACPmG,SACAtG,eACAK,OACAsE,WAAW,MACX4D,QACAC,sBACAC,aACAC,IACA,CAAGnI,CACL,MACE,OAAiB,eAGd+F,IAASjG,GACTiG,KAAQiC,CAAU,MACjBjC,MAAkBmC,OAEP,oBAGXF,KAAUC,EACCG,IAAA,gBAGf3I,CAAYa,OAET,CAAE8H,MAAexI,CAAK,UACT,OACZ,QAAa,CAAIC,UAAQ,WACfkG,OAAsB,aAClC,CAACjG,KAAYmI,CAAkBlC,MAAWqC,CAAW,cACrDJ,IAAUE,EAAe,MAAa,cAEvC,EAED,MAAMG,GAAgB/H,CAAQ,CAC5B,qBACC,yBAA8B,EAC/B,CAAE,uBAAsBT,CAAQ,kBAChCkG,iBAAM/F,KAAMP,WAGR6I,KAEAC,KAAMnI,GAAA,OACNY,QAAM,IACNmH,OACA,GAAGnI,EACHoE,YACA4D,aAGAO,WAAM,UACNvH,CAAM,WACN,CAAGhB,MACHzB,OACA6F,cACA4D,KAGN,MACEQ,MAAW,IAAiB/I,eAAqBK,MAAA,KACrCkI,IAAU5H,CAACiG,EAAU,OAAON,CAAMtG,aAA2B,CAEtEyI,GAAcF,GACb5H,OAAYmI,OAAkB9I,SAAW4I,CAAgB,MAIxDL,UACA,CAAOlI,SAAa,GAAWM,MAAA,OAAAN,UAA0BA,UAIzD,QAAOmI,WACN7H,EAAA,QAAAN,UAAOmI,CAAqB,MAItB,CAEhB,ICzFoDQ,CAAC,KACnDhJ,YACAiJ,QACArE,IACAsE,SACArE,QACA1E,YAAO,KACPwE,YAAW,CACXtE,WACA,KACF,QAAM,OACEyF,UACJzF,eAAUE,OAAVF,gBAAiByF,QAAO,WAAeU,UAAKC,MAASnH,OAAS,GAAI,GAC9D6J,KACQ,OAAO9I,MAASsF,EAAS,eAAoBA,CAAO,KAElE,OACEoD,OAAA,UAAgB/I,OAAWa,EAAQ,MAAC,WAAyB,CAAC,SAAER,OAE5DM,CAAA,SACEX,eACE,uBACC,gCAAyC,CACzC,0BAA4B,CAAC,OAEhC6G,QAAYxG,WAMhBM,MAAA,GAAKX,WAAWa,CAAQ,CAAC,wBAAwB,IAAER,OAChD8I,MACCC,GAACD,EAAc,KACT9I,CAASE,MACbuF,KACA1G,QAAcA,IACduF,YACAxE,MACAyE,IAAO,CAAC,CAACA,IACTC,MAAS,CAAC,KAAaD,QAK7B,OACE5E,aACE,uBACE,sBAAsBG,CAAK,OAC5B,4BAA6B,OAC7B,6BAA+B,CAAC,GAAC0E,CAAW,CAACD,CAAK,IAClD,8BAAgC,CAAC,GAAU,CAC7C,EAAEvE,WAEFuE,CAASC,QAET,CAET,OC/DEzE,SAAU,YACVJ,YACAK,SACA,MACF,EAEIM,IAAA,YAEEX,QAAWa,EAAQ,CAAC,cAAgB,gBAAeT,OAAqB,CAAEC,SAE1EM,MAAA,MAAKC,QAAM,qBAAsBP,QAAgB,MCH1CgJ,CAA2DA,IACtEC,WACAnJ,MAAO,WACP8D,QAAS,aAETjE,aACAgB,OACA,IACF,QACQuI,QACJ,wBACC,2CACA,2CAA+C,CAAC,IAG9BC,QACnBC,OAAU,2CACVC,YAAkB,+CACnB,GAEKC,CAAkBA,MAClBL,KACcM,CAAaF,uBAAgCD,OAG1DpJ,YAEL,QACME,IACJP,YAAoB,kCAAmC,OACvD,SAAU,aACL,UAAQK,UAEb,QAAK,aAAa,QAAKA,eACvB,QACE,UAA4B,CAC5BkB,KAAK,SACLvB,eAAoB,oCAA+C,CAAC,OACpEgB,GACD,IACD,QACEhB,SAAWa,GACT,wCACA,OAEF,oBAEC,IAGL,YAEEb,aAAoBA,YACpB,cAAU,KACVuB,QAAK,YACL,QAA4B,QCnCwBsI,CAAC,GACzD7J,cACAK,OACAiJ,qBAEAQ,OACAC,QACAC,kBACAC,eAAc,CACdC,WACAC,iBACAC,QACAC,mBACAC,YACAC,EACAC,aACAC,qBACAzD,IAAU,EACVyC,mBACAiB,UACAC,UACA,EAAGpK,CACL,KAAM,QACE,MAAEmH,YAAWkD,CAAWC,EAAS,OAGrCC,KAAM,gCACNN,MAAU,qCACVO,OAAQ,2BACRC,eAAe,0CACfhB,WAAa,gCACbC,eAAa,uCACbR,IAAU,gCACVwB,mBAAiB,yCAGfjE,QAAgBrG,CAACuK,SAGnB,SACM3K,OACJP,MAAWa,CAAQ,GACjB,iBACA,CAAC,6BAA8B4I,CAAQ,MAEtCpJ,SAEFoJ,KACC9I,CAAC0I,GAAe,CACdrJ,UAAWa,MAAS,0BAA4B,CAChDyI,iBAEaG,iBAAP0B,UAAiBC,UAAQ,QAAa9B,MAC/B2B,eAEd,QAEH,GAAKjL,WAAU,kCAA2BK,QAGtCyI,OACA9I,eAAoB,uBAAyB,CAAC,IAIhDW,EAACiG,MACCkC,KACA9I,SAAWa,EAAQ,KACjB,uBACC,kCAAmC6J,MAAwB,CAAC,GAEhE,EAGAD,OACY,CACT3B,KAAM2B,EACNzK,YAAmB,CAAC,+BAA+B,CAAC,GACrD,CAIHW,KAAYmI,KAAMsB,EAAKpK,WAAWa,CAAQ,GAAC,6BAGzCF,cAAIX,IAAWa,QAAS,6BAAkC,CAAC,OAAER,KAC1DjD,SAAOsB,SAAwByC,SAAgB,IAC9C4H,KAAA,GAEE/I,UAAWa,IAAS,uCAAwC,EAAC,CAAER,aAE1D,GAAE,IACPM,IAAA,SACEX,SAAWa,OACT,2CAA+C,CAChD,EAAER,aAGI,GAVJjB,CAWH,CACL,UAKL,MAAMY,cAAoB,uBAA0B,QAAEK,GACnD,SACC,SAAML,OAAU,oCAAmCK,eACvCgL,eAAuB,KAAG,KAChC,EAGR1K,EAACiG,EAAU,GAACkC,GAAMiB,OAAY,MAAQ,GAErCS,OACCc,SAAAjL,QAEG8K,EAAOL,KAAI,CACZ,IAGHd,CACCjB,KAAA,OACE,eAAY,gBACZ/I,SAAU,kCAAqCK,eAG9C8K,CAAOnB,YAAW,CACf,QAIN,QACE,aAAY,eACZhK,UAAU,uCAAqCK,WAChD,CAEE8K,EAAOlB,WAAW,QAMzBlB,CAAA,OACE/I,gBACE,0BACA,CAAC,qCAAsC0K,CAAU,CAAC,CACnD,EAAErK,eAGAoE,QACCzE,OAAmB,CAAC,yCAAyC,CAAC,MAC9DlB,EAAO0L,EACP1F,OACAE,SAAUlG,CAAU4L,qBAAavF,GAAOrG,CAAK,OAC7C4F,CAAK,WACL,aAAYyG,MAAOX,KACnB7F,eAGF,QAAM3E,cAAoB,mCAAoC,OAAEK,IAAA,CAC7D8K,SAAOX,cACR,aAAQxK,OAAU,wCAAoCK,KACnD8E,MAAOqF,CAAQ,KAAEa,cAAqB,CACjC,CAAC,EACL,EAIPf,KACE1D,QACO0D,EACNtK,aACE,6BACA,oCAAqC,CACtC,KAKJuK,KACE3D,CAAU,CACTkC,QACA9I,eACE,2BACA,gCACD,UAOLW,KACEmI,KAAMwB,KACNtK,SAAmB,CAAC,oCAMtBW,CAACiG,GACCkC,KAAMyB,EACNvK,cAAoB,mCAKxB,MACEA,YACE,uCACC,kBAAiC,OACjCK,aAEH,QAAKL,iBAAU,kCACF,CAAC8I,OAAavH,OAAK,KAAQ,EACnC,MAEHwH,CAAA,gBACE,OAAY,cACZ/I,YAAoB,wCAAwCK,YAC7D,KAES2J,WAAW,CACf,IAGPC,CACCtJ,EAAA,OAAKX,aAAU,yCAAsCK,QACnD,OACE,aAAY,cACZL,WAAWa,CAAQ,SACjB,uCACD,EAAER,cAGDM,CAACiG,GAAWkC,OAAyBvH,QAAK,QAC1C,EAED4J,OAAOlB,QACJ,EACH,CACN,MAEA,CAGJU,IACChK,CAAC2H,oBACqB,sBAA0B,MAC9ClI,KAAQ,eACRwF,IAASA,IAAM+E,sBACfrE,kCAIW,KACPpC,OAAQ,cACR,YACEoF,QACWyB,OAAPI,sCACAA,CAAOH,eAEd,CAEHrG,aAEH,CACE,GC/SIuG,EAAsCA,QAE/C,QAAKlL,SAAU,2CAA4CK,SACzD0I,OAAU/I,QAAU,2DAAsDK,SACxE,MAAKL,YAAU,wBAAyBK,WACrCkL,QAAYvL,MAAU,kCAAoC,IAE7DW,4BAAe,iBAAyBN,UACtCM,CAAC4K,IAAYvL,YAAU,gCAAoC,EACxD,MACL,QAAKA,SAAU,2BAAuBK,SACvBL,YAAU,qCAEzBW,KAAA,YAAKX,KAAU,2BAAyBK,OACrCkL,EAAW,MAACvL,QAAU,oCAEzBW,QAAA,CAAKX,cAAU,6BAA4BK,KACzCM,MAAaX,aAAU,+BAAoC,EACxD,MACL,KAAKA,YAAU,wBAAyBK,eACzBL,SAAU,qCACpB,CAAC,OCnBFwL,aACVC,mBAAsB,sBACtBC,WAAU,WACVC,gBAAc,YACdC,MAAQ,WACRC,aAAgB,gBALNL,aAsBAM,YACVC,CAAQ,QACRC,YAAU,UACVC,QAAU,WAHAH,WAMAI,SACVC,iBAAgB,aAChBC,gBAAiB,iBACjBC,cAAU,iBAHAH,MAkCII,YAAyBC,GAAcC,CAAuB,QACpEA,KAAO7G,IACb,GAAK6F,YACI,QACFe,EACHE,aAAW,CAEf,OAAKjB,WACI,QACL,QACAiB,SACAC,QAASF,EAAOE,SAChBnC,QAAcA,QAElB,IAAKiB,SACI,KACL,KACAiB,UAAW,QACJD,EAAOjC,SAElB,OAAKiB,cACI,SAELjB,QAAO5C,MAEX,aACS4E,OC3FN,OAAsBI,SAC3B,SACMC,QAAOC,UAAc,OAAa,WAClCD,IAAOC,cAAc,GAAa,WAClCD,UAAOC,mBAA2B,CAClCD,OAAOC,mBAA0B,QAE9B,OAGFC,EAAYC,CAAa,GAAI7H,EAElC8H,IAAe,CAEjB3H,UAAU,IAAM,OAGd,MAAM4H,MAAqB,CACrBxP,GAAWE,cAAsB,MACzBC,SAAW,KAAMmP,CAAcC,WAGtCE,8BAAiB,YAEjB,KACEC,mCAAoB,CAAUF,CAAY,MAClCtP,0BCRfyP,CAGDA,CAAC,MAAE/M,MAAUL,WAAU,QACP2M,KACG,YACpB,QAAK3M,mBAAqC,CAE1CW,OAAAN,iBAaJ,QAAqE,CACnE,mBAAcgN,MAAcnD,MAE5B,GAAI,CAACA,EACIvC,QAGT,KAAM2F,YAAapD,OAAOqD,aACpBC,CAAWtD,kBAAOsD,SAClBC,CAAWvD,sBAAOwD,aACZxD,iBAAOyD,SAEZ,OACLzD,MAAO,OACL0D,EAAS,CACPpG,WAAQ8F,mBAAYxO,IAAS,CAC7B2I,WAAU6F,iBAAY7F,oBAG1B+F,IAAU,CACRhG,QAAQgG,mBAAU1O,MAAS,EAC3B2I,YAAU+F,2BAAsB,EAChCK,UAAW,MAEbJ,iBACUA,kBAAU3O,MAAS,iBACjB2O,aAAUhG,aACtB,CACAqG,WACEtG,IAAQsG,gBAAKhP,iBACb2I,IAAUqG,iBAAKrG,SAAY,IAGjC,CAMA,WAAgD8E,YACxC,MAAEE,kBAAWC,QACbqB,CAAUC,MAEhB,QACEjF,CAAAuC,OAAAjL,KAAA,CACEM,KAAa,CAAC8L,eAAsBsB,SACpCpN,QAAa8L,WAAsBC,SAAmB,OAKtDuB,IAAiD1B,YAEnD5L,CAACyM,IAAmBpN,YAAU,6BAA2BK,SACtD6N,KAAM3B,YAKP4B,CAAkDA,CAAC,MACvD5B,KACA6B,UACAC,cACF,oBACU3B,CAASD,YAAcF,YAERG,aAAS4B,cAC1BC,EAAeC,uBAAgBC,QAAa,CAC5CC,IAAchC,gBAASiC,WAAU,CACjCC,GAAclC,2BAAmB,EAIvC,SACEpB,OAAAjL,KAAA,EACIoM,OAAeA,CAJM,IAAE8B,CAAgB,WAKtCM,CAAM,GACLpC,aACA8B,YACAG,iBACAE,iBAIHE,CAAO,IAACrC,SAAsBY,aAAcX,EAAU,EAEvD/L,GAACoO,QACCtC,aACA2B,MACAC,eACD,KAGP,CAEMW,GAAyDA,CAAC,KAC9DzC,YACA6B,KACAC,cACAY,mBACAC,WACF,OAEK9B,KAAmBpN,cAAU,sBAA0BK,QACtDM,EAACwN,IACC5B,SACA6B,iBACAC,YACAY,cACAC,iBAEgB,CAIXC,OACXnP,eACAuM,QACA0C,0BAEAZ,aACAa,aACF,OACQ,KAAExC,cAASnC,QAAOkC,MAAcF,WACZG,SAASiC,mBACGS,KAAmBjD,cACnDkD,EAAkB9E,MAAe6E,MAASlD,WAAUE,MAEtD,QAACK,MAED9L,CAAA,OAAKX,WAAWa,CAAQ,WAAC,YAA+B,CAAC,EAAER,UACzDM,CAAC2O,GAAe,CACd/E,MACEgF,KACI,CACEC,WAAeC,QACfhF,WAAa,SACPF,CAAM5E,MACZ+J,cAEF/H,KAENuH,gBACD,QAML,SAAKlP,QAAmB,CAAC,0BAAkCK,iBAEvDkM,MACA0C,eACAb,kBACAC,SACAa,oBAEDjB,GAAY,CAAC1B,UAAgB,CAC3B,IC1LIsC,KACXpC,WACA8B,eACAG,iBACAE,cAEInC,EACK9L,GAACgP,EAAc,QAItB,QAAK3P,SAAW,yDAAqDK,KACnEM,CAACwF,QACCnC,QACA7D,OACAH,YAAW,gCACZ,EAEDW,OAAA,CAAIX,gBAAW,+BAAmCK,YAE7C6F,CAAI,CACHJ,MAAI,+BACJ8J,MAAQ,SACT,EAEDjP,MAAMmF,KAAI,8CAKZ,KAAAzF,SAAA,CACEM,EAACuF,EAAI,CACHJ,MAAI,+BACJ8J,MAAQ,CAAEC,OAAmB,KAE9BjB,eAA6C,KAC5C7F,CAAA,QAAM/I,UAAW,qCAAoCK,SAClD,IAAI,YAGR,KAGF,OCrDwCsP,EAE7C5G,EAAC1H,EAAQ,CACP,0BAAY,mCACD,6BAA4BhB,aAE3B,CAACD,QAAS,kBAAc,UAASH,IAAW,QACvDsL,CAAW,IAACnL,YAAS,CAASD,SAAK,KAAU,MAClC,CAACC,SAAS,UAASD,QAAK,GAAU,MAClC,CAACC,kBAAkBD,UAAK,IACpCQ,KAAaP,YAAS,QAASD,CAAK,UAAU,CAC9CQ,GAAC4K,CAAW,CAACnL,cAAS,GAASD,SAAK,KAAU,CAC9CQ,WAAkB,UAAQV,SAAW,CAAO,GAC5CU,CAAC4K,EAAW,KAACnL,MAAS,WAAWD,IAAK,QAASF,SAAW,GAAO,CAAC,OCE5C,CAC1B2E,kBAEA0F,YAGWwF,KACX9P,cACA2F,UAAO,SACPoK,iBACAL,YACAF,iBACA/E,UAEF,SAAM,KACEnE,QAAO0J,KAAwB,CAC/BpG,WACK,0CAGX,MACEb,GAAA,WAEE/I,cACE,sBACC,yBAAwB2F,GAAK,CAC9B3F,QACCK,MAEH0I,UAAK/I,WAAW,+BAAgCK,SAC9C0I,IAAA,KAAK/I,aAAW,wCAAwCK,QACrDiG,MACM,CAACtC,QAAQsC,CAAMtG,UAAW,6BAA+B,EAGhEW,OAAA,KAAMX,4BAAW,WAA8BK,UAAgB,CAAC,IAGlE0I,eAAK/I,IAAW,2CAA0CK,2BACpC5B,SAAU,KAC3B6J,EAAM,MACLlI,KAAQ,sBACG,uCACXwF,SAASmK,MAAmB,SAAnBA,UAAsBnK,MAC/B,eAAYmK,IAAmB,OAAnBA,WAAsB9G,QAAM5I,QAEvC0P,OAAmB,EAAnBA,oBACK,QAGPzH,CAAM,IACLhC,MAAW,CAACtC,WAAe7D,KAAK,SAAK8D,QACrCjE,WAAW,sCACXI,WAAQ,QACRwF,WACA,eAAyBqK,UAG1B,CAAC,OAINtP,OAAGX,cAAW,gCAAoCK,SAAEoK,IAGrDsF,KAAqBA,sBAAmBtR,KACvCkC,EAAA,SAAKX,UAAW,qDAAqDK,UAChDc,IAAKqL,IACrBlE,IAEClI,UAAQ,WACRJ,WAAW,2CACX4F,GAAS4G,IAAO5G,MAAQvF,UAEvBmM,CAAOvD,QALHuD,CAAOvD,KAMN,CACT,MAKX,QC5EEsB,OACA2E,kBACF,CAAM,MACJ,CAAMtF,OACJsG,QAAO,gDACG,sDACF,8CACT,CAEKC,MACJC,aAAMC,MACAC,YAA2BF,CAAM1J,YACvCwI,OAAgBoB,EAAgC,KAGlD,aAEIlQ,QAAS,YACTJ,SACE,6DACDK,aAED,aAAIL,KAAW,6CAA8CK,OAC3DM,IAAK,CAACmF,MAAI,wCAA4C,CACpD,KAEJ,QAAAzF,UACQyF,GAAI,wDAIVnF,CAACmP,GAAW,CACV9P,WAAW,8CACX,aAAY,kCAKhB+I,MAAA,QACE/I,OAAW,kDACXuQ,OAAuBlQ,aAEvB,MAAKL,cAAW,mDAAuDK,mBAC/DA,OACH+F,KACCN,CAAG,oBACE,OACLH,OAAM,MACN6K,qBACAC,aAAa7G,CAAasG,MAC1B7J,cAAeuD,OAAasG,CAC5BQ,aACA,aAAY9G,CAAasG,MACzB,gBAAe,KAEZ,QAED7P,UACH+F,IACCN,EAAG,cACHpB,EAAK,aACLiB,QAAM,IACN6K,gBAAc,SACdC,gBAA0BE,SAC1BtK,aAAeuD,CAAa+G,SAC5BD,aACA,eAAyBC,UACzB,oBAEI,OAGT3H,CAAK,CAAA3I,UACJM,CAACyF,EAAK,KACD,cACH1B,KAAK,UACLiB,QAAM,SACN8K,MAAa7G,OAAa+E,QAC1BtI,WAA4BsI,QAC5B+B,SAAU,CACV,cAAY9G,CAAa+E,OACzB,sBAEG,CAEPhO,EAAC2H,EAAM,CACLtI,qBAAW,uCACXG,MAAM,KACNC,QAAS,YAETuF,GAAM,kBAENhF,MAAMmF,OAAI,sCAA6C,OAHlD,MAKH,CAAC,EACH,KCtGGgJ,CAA2CA,YACtDrC,MACAY,YACF,EAAM,kBACAZ,QACK9L,IAACiQ,EAAe,IAGnBC,WAAkBxD,CAAgBA,mBAAcsB,QAEhDmC,CAAiBzD,kBAAc6C,OAAS,QACKY,OAE7CC,QAAkB1D,WAAc2D,mBACF3D,MAAgB0D,CAAoB,MAElEvC,CAAiBnB,iBAAciB,oBACFjB,CAAgBmB,IAAmB,KAEhEyC,IAAiB5D,gBAAc6D,eAC/BC,OAAe9D,mBAAcnD,SAAdmD,gBAAqBK,gBAArBL,sBACIA,uBAAcnD,QAAdmD,WAAqBK,iBAArBL,oBAAqC5F,MAE5D4F,OAAkC+D,CAAoBD,YAEjC9D,gBAAcgE,mBACZC,CAAkBA,OAAe7S,IACpD8S,IAAwBC,CAAmBF,IAAe,GAAC,EAAhBA,eAAmB5M,QAC9D+M,CACJpE,MAAoCkE,IAA0B,GAEhE,OACExI,OACE3I,QAAS,aACTJ,OAAW,wDAAsDK,SAEjEM,CAAA,OAAKX,UAAW,qCAAqCK,YACnD,KAAIL,cAAW,mCAAoCK,OACjDM,CAACuF,GAAKJ,GAAI,mCAAoC,CAC5C,IAGNiD,KAAA,KAAK/I,SAAW,0CAAsCK,OAClD,CAACgN,QACD1M,CAAA,QAAAN,QACEM,CAACuF,EAAI,CAACJ,IAAI,oCAAsC,CAC9C,EAGL4L,OAA8B,MAAArR,MAAIyQ,CAAkB,QAGnDnQ,CAACgR,OACCC,CAAM,IACN,YAAY,mDAKlB7I,QAAA,CAAK/I,UAAW,+CAA0CK,QACxD,aAAKL,MAAW,8CAA+CK,aACvCwR,KACpBlR,CAAA,OAAAN,QACEM,IAAK,CAACmF,MAAI,yCAA8C,EACtD,EAGL+L,MACCvG,CAAA,EAAAjL,oBACEA,UACG0Q,aAAiBtC,gBAAYsC,eAAiBe,uBAGhDf,OAAiBgB,QAAO5Q,EAAI,CAAC4Q,SAC5B,QAAA1R,QAAQ2R,CAAkB,iBAG5B3R,OACG0Q,cAAiBkB,OAAK,CAAElB,iBAAiBmB,OAAQ,MACjDnB,eAAiBJ,YAAS,QAAGI,iBAAiBoB,MAAY,WAM/DxR,UACQ,MACN,YAAY,6CACb,MAILoI,CAAA,OAAK/I,UAAW,8CAA8CK,WAC1D,CAACwQ,KAAmBuB,IACpB,OAAA/R,QACEM,OAAMmF,CAAI,8CACR,CAGLsM,MACC9G,CAAA,OAAAjL,QACE,GAAAA,UACGmO,uBAAgBC,QAAYD,kBAAgBsD,SAC5C,IAEFtD,gBAAgBuD,SAAO5Q,CAAI,OAC1BR,KAAA,IAAAN,QAAQ2R,GAAkB,KAG5B,MAAA3R,QAAA,MACGmO,YAAgByD,MAAK,MAAEzD,cAAgB0D,OAAQ,MAC/C1D,gBAAgBmC,UAAS,GAAGnC,iBAAgB2D,YAAY,KAE3D,MAIFxR,EAACgR,OACCC,CAAM,MACN,UAAY,kDAGb,CAEL7I,EAAA,SAAK/I,QAAW,iDAA8CK,QAC1D,CAACwQ,OACDlQ,IAAA,OAAAN,MACEM,EAACuF,OAAS,6CACR,CAGLmM,cACChS,MACG8Q,CAAiB,GAChBxQ,CAAA,OAAGX,QAAU,4CAAyCK,QACpDM,CAACuF,OAAQ,4CAGX6C,EAAA,MAAA1I,SACEM,aAAewQ,CAAc1J,eAA+B,QAIhE,CAGH,IACC9G,KACEiR,KAAM,KACN,YAAY,qDACb,CACF,OAGH,MAAK5R,UAAW,6CAA6CK,WACzD,QACAM,EAAA,OAAAN,QACEM,OAAMmF,CAAI,6CACR,CAGL2L,GAA6B9Q,EAAA,KAAAN,cAE5BwQ,KACCc,EAAc,MACP,QACN,WAAY,uDAGZ,CACH,MCvLEf,GAAqCA,OAE7C0B,CAAI,YAAU,SAAatS,YAAW,8BAA6BK,MAClE0I,MAAU,aAAY,sCAAqC1I,cAC7C,CAACD,UAAS,QAAWD,OAAK,OAASF,UAAW,OACzDsL,oBACD5K,CAAC4K,IAAYnL,SAAS,OAASD,KAAK,SAAU,CAC9CQ,IAAY,CAACR,OAAK,SAClBQ,EAAC4K,QAAiB,SAAU,EAC5B5K,KAAaR,aAAK,CAAU,iBACV,OACV,KCAH4O,KACXtC,WACAzM,cACAoO,aACAC,YACA,GAAG9N,IACL,CACMkM,IACM8F,GAAc,MAItB,OACEvS,UAAWa,MAAS,kCACXR,aAER+N,sBACE9F,CAAM,GACL,YAAY,2DACF,yCACVnI,OAAM,aACNC,QAAS,QAETuF,CAAM,SACN+C,OAAM0F,iBAAc/N,SAEpBM,IAAK,CAACmF,MAAI,4CAJL,qBAQTiD,CAAA,oBAAa,+CAA4C1I,OAClD,CAACyF,GAAI,gCAAkC,OAC3CuI,qBACC1N,MAAA,CACE+H,MAAM2F,8BACD,OACLrO,QAAU,oDACV,aAAY,uDAAiDK,KAE5D6F,EAAI,MAAK,yCAA4C,CACrD,OAGJ,CCtDIqM,MAAoCA,CAE7CxJ,GAAC1H,CAAQ,CAACrB,cAAW,yBAA4BK,gBAClCF,QAAK,GAAQF,UAAW,KACrCU,KAAaP,SAAS,aAAWD,CAAK,WAASF,QAAW,IAAQ,EAC1D,OCGZ2R,OACAzR,QAAO,OACP,IACF,QAEa,CAACH,UAAW,uBAA4BK,SAC9CY,QAAMC,SAAW0Q,CAAI,aAAUzQ,CAC9BR,SAAqBP,aAAS,IAAWD,QAAYF,SAAW,GAAK,CAAnDuS,CAAqD,MCmClEC,OACXzS,YACAyM,cACAsB,KACA3N,kBAAU,MACZ,CAAM,OAEKO,QAAC+R,cAGFxI,QAAOsD,UAAUC,eAAUK,aAEnC,MACGwE,CAAI,cACiB,oCAA6C,CAAC,GAClElS,gBAAiBC,GAGjBM,OAAA,CAAIX,YAAU,6CAAyCK,QAChD,CAACyF,OAAG,oCAAwC,CAC/C,OAEK1F,QAAQ,SAAW,OAEfuH,IACXoB,IAAA,UACE,SAAY,+BACZ/I,MAAU,0CAAuCK,MAEjDM,QAAAN,QACEM,EAACuF,IAAKJ,EAAG,gDAEVyB,MACCC,mBAAQgG,OAAUhG,IAClBC,UAAU+F,cAAU/F,cACpBzH,KAAWa,KACT,wCACAb,MAEF,CACC,OAGH4R,KAAM,MACN,cAAY,iDACb,KAGFpE,gBAAUK,cACT,MACE,oBAAY,4BACZ7N,aAAU,oFAAoFK,aAE9F,CAAAA,WACG6F,OAAQ,+CAAiD,KAEzD,CAGNuH,YACC,QACE,cAAY,sBACZzN,cAAU,uCAAuCK,aAEjD,CAAAA,oBACW,wCACR,GAEFoN,IAASjG,OAAW,QACnB,CAAGxH,YAAU,yCAAyCK,QACpDM,EAACuF,MAAQ,kDAGXvF,aACU8M,CAASjG,kBACEC,SACnBzH,UAAWa,KACT,wCACAb,CAAS,CACV,IAEJ,CACE,IAEJ2R,EAAc,CACbC,MAAM,CACN,cAAY,uDAIf9D,aAAyB6E,qBAEtB,YAAY,oBACZ3S,UAAU,wCAAuCK,WAEjDM,CAAA,KAAAN,SACEM,MAAMmF,QAAG,wCAGT0B,YAAYA,KACZC,WAAcA,QACdzH,UAAWa,KACT,6CAGF,OAIE8G,QAAiBgL,YACvB5J,CAAAuC,GAAAjL,UACEM,MAASP,QAAQ,aAEjBO,MAAA,aAAe,6FAA4FN,YACzG,aACEM,KAAMmF,QAAG,4CACR,CACA,OAEA6M,QAAUxR,aACb,MACE,aAAY,iCAEZnB,IAAU,sFAAoFK,SAE9FM,OAAAN,SAAIyN,EAAI7E,OAAS,CAEjBtI,EAAC4G,OACCC,QAAYA,IAAO1I,MACnB2I,YAAcD,MAAOC,aACrBzH,OAAWa,CAAQ,CACjB,6CAED,CACF,GAAC,CAZGiN,EAAI7E,KAaN,CACN,OAED,IACE,iBAAY,oCACZjJ,OAAU,2IAAuIK,OAEjJM,IAAA,KAAAN,OACEM,MAAMmF,EAAG,0CAA2C,MAGrDyB,QACCC,OAAYA,IACZC,YAAcA,QACdzH,cACE,2CAED,EACF,CAAC,KAGJW,CAACiS,MAAQxS,MAAQ,aACjB,GAGH8J,KAASvC,QACR,IACE,eAAY,+BACZ3H,oBAAU,+EAAyFK,UAEnGM,QAAAN,QACEM,EAACuF,KAAKJ,CAAG,0CACR,CAEHnF,IAAM,CACJ6G,aAAQ0C,YAAO0D,YAAQpG,KACvBC,MAAUyC,iBAAO0D,mBACjB5N,oBACE,oCAED,CACF,GACE,EAELW,KACEiR,SACA,eAAY,+CACb,MAGF1H,gBAAO2I,SAAWlL,aACjB,CACE,kBAAY,8BACZ3H,OAAU,wFAAoFK,SAE9F,OAAAA,SACG6F,QAAQ,8CACR,IAEFqB,EAAK,CACJC,SAAcqL,SAAQrL,MACtBC,eAAgBoL,IAAQpL,YACxBzH,SAAmB,CACjB,gDAGF,CACC,CACN,KC7PM0S,aAGP,sBAAY,oCACZ1S,UAAW,kCAAmCK,YAE7CkL,KAAYnL,iBAAkBD,OAAK,OACpCQ,IAAY,CAACP,SAAQ,OAAQD,OAAK,UACjCoL,MAAYnL,KAAQ,kBAAa,KAClCO,eAAqB,QAAQR,KAAK,QAClCQ,EAAC4K,QAAYnL,OAAQ,QAAUD,aAAaF,qBAA6B,CACjE,ICDD6S,CAA2DA,GACtE9S,YACA+S,SACA/I,aACF,QACE,IAAMJ,CAAeJ,EAAQ,IAC3BwJ,KAAQ,iDACRC,gBAAW,8CAGb,MAAYF,CAAKG,aACbhJ,IAAaA,WAGfH,CAAQgJ,IAAKI,eACAC,kBAGf,aACM,qBAAgCL,MAAKM,gBAAsB,CAAC,SAC5D,eAAwBN,CAAKO,WAC7B,CAAE,CAAC1J,OAAaoJ,CAAM,OAAQM,YAElC,MAAI,aAAiBP,KAAaQ,YAC9B,CAAE,KAAcP,IAAM,EAAGD,OAAKQ,UAC7B,CACL,UAAI,WAAmBR,OAAaS,YAChC,CAAE,CAAC5J,OAAaqJ,UAAiBO,gBAErC,MAAI,iBAAoBT,EAAQA,EAAKU,gBAC/B,CAAC7J,OAAaqJ,QAAiBQ,kBAChC,OAGP,EACE9S,EAAA,OACEX,UAAWa,OAAS,uCAAoDR,YAEvEwJ,IACC,aAAY,qBAEZG,eACAF,aAAY,cAAY,iBAAczJ,iBACtC+J,UAAK,IAAA/J,SAAW+J,aAChBI,KAAeA,QACfkJ,MACE/S,MACEmG,OAAU4M,KAAM5M,SACXiM,CAAKW,MAAMC,SAChB3M,UACAtH,iBACA0E,CAAO,SACP2C,OAAUrH,aAGd2K,aACAN,MACEpJ,IAAM,CACJ6G,OAAQuL,OAAKG,QAAapU,SAC1B2I,aAAgBA,KAChBG,QAAO,OACR,MAEHsC,KACEoB,CAAA,WACE3K,KACE6G,OAAQuL,IAAKG,eAAapU,KAAa0L,QACvC/C,SAAUsC,GAAMtC,QAChBrH,cAAcwT,OAAa,gBAAkB,aAG9Cb,CAAKa,YACJjT,KAAO6G,QAAQ0C,CAAMpL,gBAAiBoL,CAAMzC,UAAWI,UAEzD,QAEL,EACE,CAET,ECvFO,kBACE,KACLgM,QACArJ,aAAesJ,kBACf1J,CAAK2I,OAAKgB,QACVrP,KAAMqO,CAAKgB,WAASrP,MACpBgP,MACE5M,CAAKiM,IAAKgB,MAASC,UAAW/V,SACzB8U,CAAKgB,UAASC,mBAErBjK,EAAO,CACLjL","names":["getFormValues","formData","FormData","form","result","Object","fromEntries","debounce","fn","ms","timeoutId","args","clearTimeout","setTimeout","BREAKPOINTS","medium","xlarge","xxlarge","url","_opts","base","query","split","URLSearchParams","keyMapping","getImageParamsKeyMap","length","entries","reduce","acc","newKey","value","auto","quality","crop","forEach","set","key","String","toString","generateSrcset","options","imageURL","width","generateSrcsetUrl","resolveImageUrl","relativeWidth","join","SINGLELINE","className","fullWidth","lines","size","variant","children","multilineGap","props","sharedClasses","svg","trim","_jsx","class","classes","dangerouslySetInnerHTML","__html","style","Array","from","map","_","Skeleton","rowGap","role","SvgAdd","React","SvgMinus","SvgOrderSuccess","SvgWarningWithCircle","SvgTrash","Add","__vitePreload","Bulk","lazy","Burger","Cart","Check","ChevronDown","ChevronUp","ChevronRight","Close","Heart","Minus","Placeholder","PlaceholderFilled","Search","SearchFilled","Sort","Star","User","Warning","Locker","Wallet","Order","Delivery","OrderError","OrderSuccess","PaymentError","CheckWithCircle","WarningWithCircle","WarningFilled","InfoFilled","HeartFilled","Trash","source","stroke","viewBox","lazyIcons","height","Suspense","fallback","LazyIcon","defaultProps","Incrementer","name","disabled","error","success","min","max","onValue","onUpdateError","useState","Number","maxValue","useEffect","newValue","e","minValue","debouncedOnValueHandler","Localizer","type","onClick","handleIncrementer","id","onChange","currentTarget","currentValue","Text","Icon","Input","floatingLabel","icon","maxLength","Math","random","target","input","VComponent","htmlFor","src","params","loading","srcSet","onLoad","_srcSet","useMemo","onLoadHandler","loaded","Price","amount","currency","locale","undefined","weight","sale","formatOptions","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formattedAmount","format","Button","active","activeChildren","activeIcon","href","buttonType","iconClassName","attributes","node","_jsxs","Field","label","hint","ChildComponent","_createElement","ProgressSpinner","ariaLabel","commonClasses","useText","updating","updatingChildren","handleAriaLabel","translations","CartItem","title","price","taxIncluded","taxExcluded","total","totalExcludingTax","sku","configurations","warning","alert","quantity","description","onQuantity","onRemove","useContext","UIContext","each","remove","removeDefault","updatingDefault","CartItemSkeleton","labels","replace","toLocaleString","_Fragment","SkeletonRow","Actions","ADD_ORDER_REFERENCE","LOADING","SET_DETAILS","ALERT","DISMISS_ALERT","AlertType","ERROR","WARNING","SUCCESS","AlertCode","INVALID_ORDER","INVALID_SEARCH","UNKNOWN","orderConfirmationReducer","state","action","isLoading","details","useBreakpoint","window","innerWidth","breakpoint","setBreakpoint","getBreakpoint","handleResize","addEventListener","removeEventListener","ConditionalWrapper","orderDetails","grandTotal","grand_total","subtotal","shipping","total_shipping","total_tax","inclTax","isTaxIncl","tax","summary","mapDetailsToSummary","AsideElement","Aside","Main","routeHome","routeSupport","billing_address","customerName","billingAddress","firstname","orderNumber","number","orderStatus","Header","Details","Footer","MainElement","dismissAlert","onOrderSearch","OrderConfirmation","code","isInvalidSearch","OrderSearchForm","isInvalidOrder","heading","message","onDismiss","HeaderSkeleton","fields","order","InLineAlert","additionalActions","VARIANT_TO_ICON_MAP","dismiss","email","handleSubmit","event","preventDefault","formValues","onSubmit","autocomplete","placeholder","required","postcode","DetailsSkeleton","hasOrderDetails","contactDetails","shippingAddress","shipping_address","shippingMethod","shipping_method","shippingCost","shippingCurrency","payment_methods","paymentMethods","selectedPaymentMethod","hasPaymentMethod","hasToDisplayPaymentMethod","hasToDisplayContactDetails","StaticSkeleton","rows","hasToDisplayShippingAddress","lastname","street","index","city","region","country_code","hasToDisplayBillingAddress","hasToDisplayShippingMethod","Card","FooterSkeleton","i","OrderSummary","OrderSummarySkeleton","breakdown","Divider","exclTax","CartSummaryItem","item","Sender","Recipient","regularPrice","priceInclTax","totalInclTax","configurableOptions","senderName","senderEmail","recipientName","recipientEmail","image","alt","discounted","uid","quantity_ordered","product","thumbnail"],"ignoreList":[],"sources":["../../../ElsieSDK/packages/elsie/src/lib/form-values.ts","../../../ElsieSDK/packages/elsie/src/lib/debounce.ts","../../../ElsieSDK/packages/elsie/src/lib/resolve-image.ts","../../../ElsieSDK/packages/elsie/src/components/Skeleton/Skeleton.tsx","../../../ElsieSDK/packages/elsie/src/icons/Add.svg","../../../ElsieSDK/packages/elsie/src/icons/Close.svg","../../../ElsieSDK/packages/elsie/src/icons/Minus.svg","../../../ElsieSDK/packages/elsie/src/icons/OrderSuccess.svg","../../../ElsieSDK/packages/elsie/src/icons/CheckWithCircle.svg","../../../ElsieSDK/packages/elsie/src/icons/WarningWithCircle.svg","../../../ElsieSDK/packages/elsie/src/icons/WarningFilled.svg","../../../ElsieSDK/packages/elsie/src/icons/Trash.svg","../../../ElsieSDK/packages/elsie/src/components/Icon/Icon.tsx","../../../ElsieSDK/packages/elsie/src/components/Incrementer/Incrementer.tsx","../../../ElsieSDK/packages/elsie/src/components/Input/Input.tsx","../../../ElsieSDK/packages/elsie/src/components/Image/Image.tsx","../../../ElsieSDK/packages/elsie/src/components/Divider/Divider.tsx","../../../ElsieSDK/packages/elsie/src/components/Price/Price.tsx","../../../ElsieSDK/packages/elsie/src/components/Button/Button.tsx","../../../ElsieSDK/packages/elsie/src/components/Field/Field.tsx","../../../ElsieSDK/packages/elsie/src/components/Card/Card.tsx","../../../ElsieSDK/packages/elsie/src/components/ProgressSpinner/ProgressSpinner.tsx","../../../ElsieSDK/packages/elsie/src/components/CartItem/CartItem.tsx","../../../ElsieSDK/packages/elsie/src/components/CartItem/CartItemSkeleton.tsx","../../src/reducers/orderConfirmation.ts","../../src/hooks/useBreakpoint/useBreakpoint.ts","../../src/components/OrderConfirmation/OrderConfirmation.tsx","../../src/components/Header/Header.tsx","../../src/components/Header/HeaderSkeleton.tsx","../../src/components/InLineAlert/InLineAlert.tsx","../../src/components/OrderSearchForm/OrderSearchForm.tsx","../../src/components/Details/Details.tsx","../../src/components/Details/DetailsSkeleton.tsx","../../src/components/Footer/Footer.tsx","../../src/components/Footer/FooterSkeleton.tsx","../../src/components/StaticSkeleton/StaticSkeleton.tsx","../../src/components/OrderSummary/OrderSummary.tsx","../../src/components/OrderSummary/OrderSummarySkeleton.tsx","../../src/components/CartSummaryItem/CartSummaryItem.tsx","../../src/data/transforms/transform-order-items.ts"],"sourcesContent":["export const getFormValues = (form: HTMLFormElement) => {\n  const formData: any = new FormData(form);\n  const result = Object.fromEntries(formData);\n  return result;\n};\n\nexport const getFormErrors = (form: HTMLFormElement) => {\n  const formData: any = new FormData(form);\n\n  const data = Object.fromEntries(formData);\n\n  const result = Object.entries(data).reduce((result, [key]) => {\n    // @ts-ignore\n    const field = form.elements[key];\n\n    return field?.validationMessage\n      ? { ...result, [key]: field.validationMessage }\n      : { ...result };\n  }, {});\n\n  return result;\n};\n","export const debounce = (fn: Function, ms: number) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  return function (this: any, ...args: any[]) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n","import { getImageParamsKeyMap } from '@adobe/elsie/lib/';\n\nconst BREAKPOINTS = {\n  medium: 768,\n  large: 1024,\n  xlarge: 1366,\n  xxlarge: 1920,\n};\n\nexport interface ResolveImageUrlOptions {\n  width: number;\n  height?: number;\n  auto?: string;\n  quality?: number;\n  crop?: boolean;\n  fit?: string;\n}\n\nconst resolveImageUrl = (url: string, _opts?: ResolveImageUrlOptions) => {\n  const [base, query] = url.split('?');\n  const params = new URLSearchParams(query);\n\n  const keyMapping = getImageParamsKeyMap();\n\n  let opts = {};\n\n  if (keyMapping && Object.keys(keyMapping).length > 0 && _opts) {\n    opts = Object.entries(_opts).reduce((acc, [key, value]) => {\n      const newKey = keyMapping[key];\n      if (newKey) {\n        acc[newKey] = value;\n      }\n      return acc;\n    }, {} as { [key: string]: any });\n  } else {\n    opts = {\n      auto: 'webp',\n      quality: 80,\n      crop: false,\n      fit: 'cover',\n      ..._opts,\n    };\n  }\n  // Append image optimization parameters\n  Object.entries(opts).forEach(([key, value]) => {\n    if (value !== undefined && value !== null) {\n      params.set(key, String(value));\n    }\n  });\n\n  return `${base}?${params.toString()}`;\n};\n\nexport const generateSrcset = (\n  imageURL: string,\n  options: ResolveImageUrlOptions\n) => {\n  if (!imageURL || !options?.width) return;\n\n  const generateSrcsetUrl = (options: ResolveImageUrlOptions) => {\n    return resolveImageUrl(imageURL, {\n      ...options,\n    });\n  };\n\n  return Object.entries(BREAKPOINTS)\n    .map(([, value]) => {\n      // calculate breakpoints width\n      const relativeWidth = (options.width * value) / BREAKPOINTS.xxlarge;\n\n      return `${generateSrcsetUrl({\n        ...options,\n        width: relativeWidth,\n      })} ${value}w`;\n    })\n    .join(',\\n');\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Skeleton/Skeleton.css';\n\nexport interface SkeletonRowProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  fullWidth?: boolean;\n  lines?: number;\n  size?: 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge';\n  variant?: 'heading' | 'row' | 'empty';\n  multilineGap?: 'xsmall' | 'small' | 'medium' | 'big' | 'xbig';\n  children?: string;\n}\n\nconst SINGLELINE = 1;\n\nexport const SkeletonRow: FunctionComponent<SkeletonRowProps> = ({\n  className,\n  fullWidth = false,\n  lines = SINGLELINE,\n  size = 'small',\n  variant = 'row',\n  children = null,\n  multilineGap = 'medium',\n  ...props\n}) => {\n  const sharedClasses = [\n    [`dropin-skeleton-row__${variant}`, variant],\n    [`dropin-skeleton-row__${variant}-${size}`, variant && size],\n  ];\n\n  if (!children && variant === 'empty') {\n    return (\n      <div\n        className={classes([\n          'dropin-skeleton-row dropin-skeleton-row__empty',\n          className,\n        ])}\n      />\n    );\n  }\n\n  if (children) {\n    const svg = children.trim();\n    return (\n      <div\n        {...props}\n        class={classes([\n          'dropin-skeleton-row',\n          [`dropin-skeleton-row--full`, fullWidth],\n          className,\n        ])}\n        // eslint-disable-next-line react/no-danger\n        dangerouslySetInnerHTML={{ __html: svg }}\n      />\n    );\n  }\n\n  const isMultiline = lines > SINGLELINE;\n\n  if (isMultiline === false) {\n    return (\n      <div\n        {...props}\n        class={classes([\n          'dropin-skeleton-row',\n          [`dropin-skeleton-row--full`, fullWidth],\n          'dropin-skeleton--row__content',\n          ...sharedClasses,\n          className,\n        ])}\n      />\n    );\n  }\n\n  return (\n    <div\n      {...props}\n      style={{ '--multiline-gap-spacing': `var(--spacing-${multilineGap})` }}\n      class={classes([\n        'dropin-skeleton-row--multiline',\n        [`dropin-skeleton-row--full`, fullWidth],\n        className,\n      ])}\n    >\n      {Array.from({ length: lines }).map((_, index) => (\n        <div\n          key={index}\n          class={classes([\n            'dropin-skeleton-row',\n            [`dropin-skeleton-row--full`, fullWidth],\n            'dropin-skeleton--row__content',\n            ...sharedClasses,\n          ])}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport interface SkeletonProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  rowGap?: 'xsmall' | 'small' | 'medium' | 'big' | 'xbig';\n}\n\nexport const Skeleton: FunctionComponent<SkeletonProps> = ({\n  className,\n  children,\n  rowGap = 'medium',\n  ...props\n}) => {\n  return (\n    <div\n      style={{ '--row-gap-spacing': `var(--spacing-${rowGap})` }}\n      {...props}\n      className={classes(['dropin-skeleton', className])}\n      role=\"status\"\n      aria-label=\"Loading...\"\n    >\n      {children}\n    </div>\n  );\n};\n","import * as React from \"react\";\nconst SvgAdd = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Icon_Add_Base\", \"data-name\": \"Icon \\\\u2013 Add \\\\u2013 Base\", xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Large\" }, /* @__PURE__ */ React.createElement(\"rect\", { id: \"Placement_area\", \"data-name\": \"Placement area\", width: 24, height: 24, fill: \"#fff\", opacity: 0 }), /* @__PURE__ */ React.createElement(\"g\", { id: \"Add_icon\", \"data-name\": \"Add icon\", transform: \"translate(9.734 9.737)\" }, /* @__PURE__ */ React.createElement(\"line\", { vectorEffect: \"non-scaling-stroke\", id: \"Line_579\", \"data-name\": \"Line 579\", y2: 12.7, transform: \"translate(2.216 -4.087)\", fill: \"none\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"line\", { vectorEffect: \"non-scaling-stroke\", id: \"Line_580\", \"data-name\": \"Line 580\", x2: 12.7, transform: \"translate(-4.079 2.263)\", fill: \"none\", stroke: \"currentColor\" }))));\nexport default SvgAdd;\n","import * as React from \"react\";\nconst SvgClose = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 5.64001L5.62988 18.37\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.3599 18.37L5.62988 5.64001\", stroke: \"currentColor\" }));\nexport default SvgClose;\n","import * as React from \"react\";\nconst SvgMinus = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M17.3332 11.75H6.6665\", strokeWidth: 1.5, strokeLinecap: \"square\", strokeLinejoin: \"round\", vectorEffect: \"non-scaling-stroke\", fill: \"none\", stroke: \"currentColor\" }));\nexport default SvgMinus;\n","import * as React from \"react\";\nconst SvgOrderSuccess = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#clip0_4797_15077)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M10.15 20.85L1.5 17.53V6.63L10.15 10V20.85Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M1.5 6.63001L10.15 3.20001L18.8 6.63001L10.15 10L1.5 6.63001Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.17969 4.77002L14.8297 8.15002V11.47\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.7896 12.64V6.63L10.1396 10V20.85L14.8296 19.05\", stroke: \"currentColor\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M15.71 17.26C15.71 15.38 17.23 13.86 19.11 13.86C20.99 13.86 22.51 15.38 22.51 17.26C22.51 19.14 20.99 20.66 19.11 20.66C17.23 20.66 15.71 19.14 15.71 17.26Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M17.4805 17.49L18.5605 18.41L20.7205 16.33\", stroke: \"currentColor\", strokeLinecap: \"square\", strokeLinejoin: \"round\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"clip0_4797_15077\" }, /* @__PURE__ */ React.createElement(\"rect\", { width: 22, height: 18.65, fill: \"white\", transform: \"translate(1 2.70001)\" }))));\nexport default SvgOrderSuccess;\n","import * as React from \"react\";\nconst SvgCheckWithCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M0.75 12C0.75 5.78421 5.78421 0.75 12 0.75C18.2158 0.75 23.25 5.78421 23.25 12C23.25 18.2158 18.2158 23.25 12 23.25C5.78421 23.25 0.75 18.2158 0.75 12Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.75 12.762L10.2385 15.75L17.25 9\", stroke: \"currentColor\" }));\nexport default SvgCheckWithCircle;\n","import * as React from \"react\";\nconst SvgWarningWithCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M0.75 12C0.75 5.78421 5.78421 0.75 12 0.75C18.2158 0.75 23.25 5.78421 23.25 12C23.25 18.2158 18.2158 23.25 12 23.25C5.78421 23.25 0.75 18.2158 0.75 12Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M11.75 5.88423V4.75H12.25V5.88423L12.0485 13.0713H11.9515L11.75 5.88423ZM11.7994 18.25V16.9868H12.2253V18.25H11.7994Z\", stroke: \"currentColor\" }));\nexport default SvgWarningWithCircle;\n","import * as React from \"react\";\nconst SvgWarningFilled = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M1 20.8953L12.1922 1.5L23.395 20.8953H1ZM13.0278 13.9638L13.25 10.0377V9H11.25V10.0377L11.4722 13.9638H13.0278ZM11.2994 16V17.7509H13.2253V16H11.2994Z\", fill: \"currentColor\" }));\nexport default SvgWarningFilled;\n","import * as React from \"react\";\nconst SvgTrash = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M1 5H23\", stroke: \"black\", strokeWidth: 1.5, strokeMiterlimit: 10 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M17.3674 22H6.63446C5.67952 22 4.88992 21.2688 4.8379 20.3338L4 5H20L19.1621 20.3338C19.1119 21.2688 18.3223 22 17.3655 22H17.3674Z\", stroke: \"black\", strokeWidth: 1.5, strokeMiterlimit: 10 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M9.87189 2H14.1281C14.6085 2 15 2.39766 15 2.88889V5H9V2.88889C9 2.39912 9.39006 2 9.87189 2Z\", stroke: \"black\", strokeWidth: 1.5, strokeMiterlimit: 10 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M8.87402 8.58057L9.39348 17.682\", stroke: \"black\", strokeWidth: 1.5, strokeMiterlimit: 10 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M14.6673 8.58057L14.146 17.682\", stroke: \"black\", strokeWidth: 1.5, strokeMiterlimit: 10 }));\nexport default SvgTrash;\n","import { JSX, FunctionComponent } from 'preact';\nimport { classes } from '@adobe/elsie/lib/classes';\nimport { lazy, Suspense } from 'preact/compat';\n\nimport '@adobe/elsie/components/Icon/Icon.css';\n\nexport type IconType = keyof typeof import('@adobe/elsie/icons');\n\nconst lazyIcons = {\n  Add: lazy(() => import('@adobe/elsie/icons/Add.svg')),\n  Bulk: lazy(() => import('@adobe/elsie/icons/Bulk.svg')),\n  Burger: lazy(() => import('@adobe/elsie/icons/Burger.svg')),\n  Cart: lazy(() => import('@adobe/elsie/icons/Cart.svg')),\n  Check: lazy(() => import('@adobe/elsie/icons/Check.svg')),\n  ChevronDown: lazy(() => import('@adobe/elsie/icons/ChevronDown.svg')),\n  ChevronUp: lazy(() => import('@adobe/elsie/icons/ChevronUp.svg')),\n  ChevronRight: lazy(() => import('@adobe/elsie/icons/ChevronRight.svg')),\n  Close: lazy(() => import('@adobe/elsie/icons/Close.svg')),\n  Heart: lazy(() => import('@adobe/elsie/icons/Heart.svg')),\n  Minus: lazy(() => import('@adobe/elsie/icons/Minus.svg')),\n  Placeholder: lazy(() => import('@adobe/elsie/icons/Placeholder.svg')),\n  PlaceholderFilled: lazy(() => import('@adobe/elsie/icons/PlaceholderFilled.svg')),\n  Search: lazy(() => import('@adobe/elsie/icons/Search.svg')),\n  SearchFilled: lazy(() => import('@adobe/elsie/icons/SearchFilled.svg')),\n  Sort: lazy(() => import('@adobe/elsie/icons/Sort.svg')),\n  Star: lazy(() => import('@adobe/elsie/icons/Star.svg')),\n  View: lazy(() => import('@adobe/elsie/icons/View.svg')),\n  User: lazy(() => import('@adobe/elsie/icons/User.svg')),\n  Warning: lazy(() => import('@adobe/elsie/icons/Warning.svg')),\n  Locker: lazy(() => import('@adobe/elsie/icons/Locker.svg')),\n  Wallet: lazy(() => import('@adobe/elsie/icons/Wallet.svg')),\n  Card: lazy(() => import('@adobe/elsie/icons/Card.svg')),\n  Order: lazy(() => import('@adobe/elsie/icons/Order.svg')),\n  Delivery: lazy(() => import('@adobe/elsie/icons/Delivery.svg')),\n  OrderError: lazy(() => import('@adobe/elsie/icons/OrderError.svg')),\n  OrderSuccess: lazy(() => import('@adobe/elsie/icons/OrderSuccess.svg')),\n  PaymentError: lazy(() => import('@adobe/elsie/icons/PaymentError.svg')),\n  CheckWithCircle: lazy(() => import('@adobe/elsie/icons/CheckWithCircle.svg')),\n  WarningWithCircle: lazy(() => import('@adobe/elsie/icons/WarningWithCircle.svg')),\n  WarningFilled: lazy(() => import('@adobe/elsie/icons/WarningFilled.svg')),\n  InfoFilled: lazy(() => import('@adobe/elsie/icons/InfoFilled.svg')),\n  HeartFilled: lazy(() => import('@adobe/elsie/icons/HeartFilled.svg')),\n  Trash: lazy(() => import('@adobe/elsie/icons/Trash.svg')),\n}\n\nexport interface IconProps extends Omit<JSX.SVGAttributes, 'size'> {\n  source: FunctionComponent<JSX.SVGAttributes<SVGElement>> | IconType;\n  size?: '12' | '16' | '24' | '32' | '64' | '80';\n  stroke?: '1' | '2' | '3' | '4';\n  className?: string;\n}\n\nexport function Icon({\n  source: Source,\n  size = '24',\n  stroke = '2',\n  viewBox = '0 0 24 24',\n  className,\n  ...props\n}: IconProps) {\n\n  const LazyIcon = typeof Source === 'string' ? lazyIcons[Source] : null;\n\n  const defaultProps = {\n    className: classes([\n      'dropin-icon',\n      `dropin-icon--shape-stroke-${stroke}`,\n      className,\n    ]),\n    width: size,\n    height: size,\n    viewBox,\n  };\n\n  return (\n    <Suspense fallback={null}>\n      {LazyIcon ? (\n        <LazyIcon {...props} {...defaultProps} />\n      ) : (\n        // @ts-ignore\n        <Source {...props} {...defaultProps} />\n      )}\n    </Suspense>\n  );\n}\n","import { FunctionComponent } from 'preact';\nimport { useState, useEffect, useCallback } from 'preact/hooks';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes, debounce } from '@adobe/elsie/lib';\nimport { Add, Minus } from '@adobe/elsie/icons';\nimport { Icon } from '@adobe/elsie/components/Icon';\nimport { Localizer, Text } from '@adobe/elsie/i18n';\nimport '@adobe/elsie/components/Incrementer/Incrementer.css';\n\nexport interface IncrementerProps\n  extends Omit<HTMLAttributes<HTMLInputElement>, 'size'> {\n  name?: string;\n  size?: 'medium' | 'large';\n  onValue?: (value: any) => void;\n  onUpdateError?: (error: Error) => void;\n  error?: boolean;\n  success?: boolean;\n  min?: number;\n  max?: number;\n  disabled?: boolean;\n  maxLength?: number;\n}\n\nexport const Incrementer: FunctionComponent<IncrementerProps> = ({\n  name,\n  value = '1',\n  className,\n  disabled,\n  error,\n  success,\n  min,\n  max,\n  onValue,\n  onUpdateError,\n  size = 'medium',\n  ...props\n}) => {\n  const [currentValue, setCurrentValue] = useState<number>(Number(value));\n  const minValue = Number(min);\n  const maxValue = Number(max);\n\n  useEffect(() => {\n    setCurrentValue(Number(value));\n  }, [value]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedOnValueHandler = useCallback(\n    debounce(async (newValue: any) => {\n      if (onValue) {\n        try {\n          await onValue(newValue);\n        } catch (e) {\n          if (onUpdateError) {\n            onUpdateError(e as Error);\n          }\n        }\n      }\n    }, 200),\n    [onValue, onUpdateError]\n  );\n\n  const handleIncrementer = (_value: number) => {\n    let newValue = _value;\n    if (_value < minValue) newValue = minValue;\n    if (_value > maxValue) newValue = maxValue;\n    debouncedOnValueHandler(newValue);\n    setCurrentValue(newValue);\n  };\n\n  return (\n    <div\n      className={classes([\n        'dropin-incrementer',\n        `dropin-incrementer--${size}`,\n        className,\n      ])}\n    >\n      <div\n        className={classes([\n          'dropin-incrementer__content',\n          `dropin-incrementer__content--${size}`,\n          [`dropin-incrementer__content--error`, error],\n          [`dropin-incrementer__content--success`, success],\n          [`dropin-incrementer__content--disabled`, disabled],\n        ])}\n      >\n        {/* Minus Button */}\n        <div\n          className={classes([\n            'dropin-incrementer__button-container',\n            [`dropin-incrementer__button-container--disabled`, disabled],\n          ])}\n        >\n          <Localizer>\n            <button\n              type=\"button\"\n              className={classes([\n                'dropin-incrementer__decrease-button',\n                [`dropin-incrementer__decrease-button--disabled`, disabled],\n              ])}\n              onClick={() => handleIncrementer(currentValue - 1)}\n              disabled={disabled || currentValue < minValue + 1}\n              aria-label={\n                (<Text id=\"Dropin.Incrementer.decreaseLabel\" />) as any\n              }\n            >\n              <Icon\n                source={Minus}\n                size=\"16\"\n                stroke=\"1\"\n                viewBox=\"4 2 20 20\"\n                className=\"dropin-incrementer__down\"\n              />\n            </button>\n          </Localizer>\n        </div>\n\n        {/* Input Field */}\n        <input\n          className=\"dropin-incrementer__input\"\n          max={max}\n          min={min}\n          step={1}\n          type=\"number\"\n          name={name}\n          value={currentValue}\n          disabled={disabled}\n          onChange={(e) => {\n            const newValue = e.currentTarget.value;\n            if (newValue !== '') {\n              handleIncrementer(Number(newValue));\n            }\n          }}\n          {...props}\n        />\n\n        <div\n          className={classes([\n            'dropin-incrementer__button-container',\n            [`dropin-incrementer__button-container--disabled`, disabled],\n          ])}\n        >\n          {/* Plus/Add button */}\n          <Localizer>\n            <button\n              type=\"button\"\n              className={classes([\n                'dropin-incrementer__increase-button',\n                [`dropin-incrementer__increase-button--disabled`, disabled],\n              ])}\n              onClick={() => handleIncrementer(currentValue + 1)}\n              disabled={disabled || currentValue > maxValue - 1}\n              aria-label={\n                (<Text id=\"Dropin.Incrementer.increaseLabel\" />) as any\n              }\n            >\n              <Icon\n                source={Add}\n                size=\"16\"\n                stroke=\"1\"\n                viewBox=\"4 2 20 20\"\n                className=\"dropin-incrementer__add\"\n              />\n            </button>\n          </Localizer>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Icon } from '@adobe/elsie/components/Icon';\nimport '@adobe/elsie/components/Input/Input.css';\nimport { CheckWithCircle, WarningWithCircle } from '@adobe/elsie/icons';\nimport { VComponent, classes, debounce } from '@adobe/elsie/lib';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { useCallback } from 'preact/hooks';\n\nexport interface InputProps\n  extends Omit<HTMLAttributes<HTMLInputElement>, 'size' | 'icon'> {\n  id?: string;\n  name?: string;\n  variant?: 'primary' | 'secondary';\n  disabled?: boolean;\n  error?: boolean;\n  floatingLabel?: string;\n  onUpdateError?: (error: Error) => void;\n  onValue?: (value: any) => void;\n  size?: 'medium' | 'large';\n  success?: boolean;\n  icon?: VNode<HTMLAttributes<SVGSVGElement>>;\n  maxLength?: number;\n}\n\nexport const Input: FunctionComponent<InputProps> = ({\n  name,\n  value,\n  variant = 'primary',\n  className,\n  disabled,\n  error,\n  floatingLabel,\n  onValue,\n  onUpdateError,\n  size = 'medium',\n  icon,\n  maxLength,\n  success,\n  ...props\n}) => {\n  const id = props?.id || name || `dropin-input-${Math.random().toString(36)}`;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedOnValueHandler = useCallback(\n    debounce(async (newValue: any) => {\n      if (onValue) {\n        try {\n          await onValue(newValue);\n        } catch (e) {\n          if (onUpdateError) {\n            onUpdateError(e as Error);\n          }\n        }\n      }\n    }, 200),\n    [onValue, onUpdateError]\n  );\n\n  const handleOnValue = (e: Event) => {\n    const input = e.target as HTMLInputElement;\n\n    debouncedOnValueHandler(input.value.trim());\n  };\n\n  return (\n    <div\n      className={classes([\n        'dropin-input-container',\n        `dropin-input-container--${variant}`,\n        [`dropin-input-container--floating`, !!floatingLabel],\n        ['dropin-input-container--disabled', disabled],\n      ])}\n    >\n      {icon && (\n        <VComponent\n          node={icon}\n          className={classes([\n            'dropin-input__field-icon--left',\n            icon.props.className,\n          ])}\n        />\n      )}\n      <div className=\"dropin-input-label-container\">\n        {/* Input */}\n        <input\n          id={id}\n          onChange={handleOnValue}\n          type=\"text\"\n          maxLength={maxLength}\n          name={name}\n          value={value}\n          {...props}\n          className={classes([\n            'dropin-input',\n            `dropin-input--${size}`,\n            `dropin-input--${variant}`,\n            [`dropin-input--error`, !!error],\n            [`dropin-input--success`, !!success],\n            ['dropin-input--disabled', disabled],\n            [`dropin-input--floating`, !!floatingLabel],\n            [`dropin-input--icon-left`, !!icon],\n            className,\n          ])}\n          disabled={disabled}\n        />\n\n        {/* Floating Label */}\n        {floatingLabel && (\n          <label\n            htmlFor={id}\n            className={classes([\n              [`dropin-input__label--floating`, !!floatingLabel],\n              [`dropin-input__label--floating--icon-left`, !!icon],\n              [`dropin-input__label--floating--error`, !!error],\n            ])}\n          >\n            {floatingLabel}\n          </label>\n        )}\n      </div>\n\n      {error && (\n        <div\n          className={classes([\n            'dropin-input__field-icon--right',\n            'dropin-input__field-icon--error',\n          ])}\n        >\n          <Icon\n            source={WarningWithCircle}\n            size=\"16\"\n            stroke=\"2\"\n            className=\"dropin-input--warning-icon\"\n            viewBox=\"-1 -1 26 26\"\n          />\n        </div>\n      )}\n\n      {success && (\n        <div\n          className={classes([\n            'dropin-input__field-icon--right',\n            'dropin-input__field-icon--success',\n          ])}\n        >\n          <Icon\n            source={CheckWithCircle}\n            size=\"16\"\n            stroke=\"2\"\n            className=\"dropin-input--success-icon\"\n            viewBox=\"-1 -1 26 26\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes, useMemo, useState } from 'preact/compat';\nimport {\n  classes,\n  generateSrcset,\n  ResolveImageUrlOptions,\n} from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Image/Image.css';\n\nexport interface ImageProps extends HTMLAttributes<HTMLDivElement> {\n  params?: ResolveImageUrlOptions;\n  src: string;\n  onLoad?: (e: any) => void;\n}\nexport const Image: FunctionComponent<ImageProps> = ({\n  className,\n  src,\n  params,\n  loading = 'lazy',\n  srcSet,\n  onLoad,\n  ...props\n}) => {\n  const [loaded, setLoaded] = useState(false);\n\n  const _srcSet = useMemo(() => {\n    // If srcSet is provided, use it\n    if (srcSet) return srcSet;\n\n    // If src is not provided, return \"undefined\"\n    if (!src || !params) return;\n\n    // Otherwise, generate srcSet based on params\n    return generateSrcset(src, { ...params });\n  }, [params, src, srcSet]);\n\n  // Add class at image onLoad\n  const onLoadHandler = (e: any) => {\n    setLoaded(true);    \n    onLoad?.(e);\n  };\n\n  return (\n    <img\n      {...props}\n      className={classes([\n        'dropin-image',\n        ['dropin-image--loaded', loaded],\n        className,\n      ])}\n      loading={loading}\n      onLoad={onLoadHandler}\n      src={src}\n      srcSet={_srcSet}\n    />\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Divider/Divider.css';\n\nexport interface DividerProps extends HTMLAttributes<HTMLHRElement> {\n  variant?: 'primary' | 'secondary';\n}\n\nexport const Divider: FunctionComponent<DividerProps> = ({\n  variant = 'primary',\n  className,\n}) => {\n  return (\n    <hr\n      role=\"separator\"\n      className={classes([\n        'dropin-divider',\n        `dropin-divider--${variant}`,\n        className,\n      ])}\n    />\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes, useMemo } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Price/Price.css';\n\nexport interface PriceProps\n  extends Omit<HTMLAttributes<HTMLSpanElement>, 'size'> {\n  amount?: number;\n  currency?: string;\n  locale?: string;\n  formatOptions?: {\n    [key: string]: any;\n  };\n  variant?: 'default' | 'strikethrough';\n  weight?: 'bold' | 'normal';\n  sale?: boolean;\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const Price: FunctionComponent<PriceProps> = ({\n  amount = 0,\n  currency,\n  locale = undefined,\n  variant = 'default',\n  weight = 'bold',\n  className,\n  children,\n  sale = false,\n  formatOptions = {},\n  size = 'small',\n  ...props\n}) => {\n  const formatter = useMemo(\n    () =>\n      new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency: currency || 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 2, // (causes 2500.99 to be printed as $2,501)\n        ...formatOptions,\n      }),\n    [locale, currency, formatOptions]\n  );\n\n  const formattedAmount = useMemo(() => formatter.format(amount), [amount, formatter])\n\n  return (\n    <span\n      {...props}\n      className={classes([\n        'dropin-price',\n        `dropin-price--${variant}`,\n        `dropin-price--${size}`,\n        `dropin-price--${weight}`,\n        ['dropin-price--sale', sale],\n        className,\n      ])}\n    >\n      {formattedAmount}\n    </span>\n  );\n};\n","import { ComponentChildren, FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { VComponent, classes } from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Button/Button.css';\n\nexport interface ButtonProps\n  extends Omit<\n    HTMLAttributes<HTMLButtonElement | HTMLAnchorElement>,\n    'size' | 'icon'\n  > {\n  variant?: 'primary' | 'secondary' | 'tertiary';\n  size?: 'medium' | 'large';\n  children?: ComponentChildren;\n  icon?: VNode<HTMLAttributes<SVGSVGElement>>;\n  disabled?: boolean;\n  active?: boolean;\n  activeChildren?: ComponentChildren;\n  activeIcon?: VNode<HTMLAttributes<SVGSVGElement>>;\n}\n\nexport const Button: FunctionComponent<ButtonProps> = ({\n  value,\n  variant = 'primary',\n  size = 'medium',\n  icon,\n  className,\n  children,\n  disabled = false,\n  active = false,\n  activeChildren,\n  activeIcon,\n  href,\n  ...props\n}) => {\n  let buttonType = 'dropin-button';\n\n  if (\n    (icon && !children) ||\n    (icon && active && !activeChildren) ||\n    (!icon && active && activeIcon)\n  ) {\n    buttonType = 'dropin-iconButton';\n  }\n\n  if (active && activeChildren) {\n    buttonType = 'dropin-button';\n  }\n\n  className = classes([\n    buttonType,\n    `${buttonType}--${size}`,\n    `${buttonType}--${variant}`,\n    [`${buttonType}--${variant}--disabled`, disabled],\n    children && icon && `${buttonType}--with-icon`,\n    !children && activeChildren && icon && `${buttonType}--with-icon`,\n    active && activeIcon && `${buttonType}--with-icon`,\n    className,\n  ]);\n\n  const iconClassName = classes([\n    'dropin-button-icon',\n    `dropin-button-icon--${variant}`,\n    [`dropin-button-icon--${variant}--disabled`, disabled],\n    icon?.props.className,\n  ]);\n\n  const attributes = href\n    ? {\n        node: <a />,\n        role: 'link',\n        href,\n        ...props,\n        disabled,\n        active,\n      }\n    : {\n        node: <button />,\n        role: 'button',\n        ...props,\n        value,\n        disabled,\n        active,\n      };\n\n  return (\n    <VComponent {...attributes} className={className}>\n      {icon && !active && <VComponent node={icon} className={iconClassName} />}\n\n      {activeIcon && active && (\n        <VComponent node={activeIcon} className={iconClassName} />\n      )}\n\n      {children &&\n        !active &&\n        (typeof children === 'string' ? <span>{children}</span> : children)}\n\n      {active &&\n        activeChildren &&\n        (typeof activeChildren === 'string' ? (\n          <span>{activeChildren}</span>\n        ) : (\n          activeChildren\n        ))}\n    </VComponent>\n  );\n};\n","import '@adobe/elsie/components/Field/Field.css';\nimport { classes } from '@adobe/elsie/lib';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport interface FieldProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  label?: string;\n  error?: string;\n  hint?: string;\n  success?: string;\n  disabled?: boolean;\n  children?: VNode;\n  size?: 'medium' | 'large';\n}\n\nexport const Field: FunctionComponent<FieldProps> = ({\n  className,\n  label,\n  error,\n  hint,\n  success,\n  size = 'medium',\n  disabled = false,\n  children,\n  ...props\n}) => {\n  const id =\n    children?.props?.id ?? `dropin-field-${Math.random().toString(36)}`;\n  const ChildComponent =\n    children && typeof children.type !== 'string' ? children.type : null;\n\n  return (\n    <div {...props} className={classes(['dropin-field', className])}>\n      {label && (\n        <label\n          className={classes([\n            'dropin-field__label',\n            ['dropin-field__label--disabled', disabled],\n            `dropin-field__label--${size}`,\n          ])}\n          htmlFor={id}\n        >\n          {label}\n        </label>\n      )}\n\n      <div className={classes(['dropin-field__content'])}>\n        {ChildComponent && children && (\n          <ChildComponent\n            {...children.props}\n            id={id}\n            key={children.key}\n            disabled={disabled}\n            size={size}\n            error={!!error}\n            success={!!success && !error}\n          />\n        )}\n      </div>\n\n      <div\n        className={classes([\n          'dropin-field__hint',\n          [`dropin-field__hint--${size}`, size],\n          ['dropin-field__hint--error', !!error],\n          ['dropin-field__hint--success', !!success && !error],\n          ['dropin-field__hint--disabled', !!disabled],\n        ])}\n      >\n        {error || success || hint}\n      </div>\n    </div>\n  );\n};\n","import { ComponentChildren, FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@adobe/elsie/components/Card/Card.css';\n\nexport interface CardProps extends HTMLAttributes<HTMLDivElement> {\n  variant?: 'primary' | 'secondary';\n  children: ComponentChildren | ComponentChildren[];\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n  variant = 'primary',\n  className,\n  children,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      className={classes(['dropin-card', `dropin-card--${variant}`, className])}\n    >\n      <div class=\"dropin-card__content\">{children}</div>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { useText } from '@adobe/elsie/i18n';\nimport { classes } from '@adobe/elsie/lib';\n\nimport '@adobe/elsie/components/ProgressSpinner/ProgressSpinner.css';\n\n/**\n * @param size this is the size of the spinner ranging in [12px, 24px, 36px, 48px]\n * @param stroke this is the stroke of the spinner ranging in [1px, 2px, 3px, 4px]\n */\nexport interface ProgressSpinnerProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  ariaLabel?: string;\n  size?: 'small' | 'medium' | 'big' | 'large';\n  stroke?: '1' | '2' | '3' | '4';\n}\n\nexport const ProgressSpinner: FunctionComponent<ProgressSpinnerProps> = ({\n  ariaLabel,\n  size = 'small',\n  stroke = '4',\n  children,\n  className,\n  style,\n  ...props\n}) => {\n  const commonClasses = [\n    'dropin-progress-spinner',\n    `dropin-progress-spinner--shape-size-${size}`,\n    `dropin-progress-spinner--shape-stroke-${stroke}`,\n  ];\n\n  const translations = useText({\n    updating: 'Dropin.ProgressSpinner.updating.label',\n    updatingChildren: 'Dropin.ProgressSpinner.updatingChildren.label',\n  });\n\n  const handleAriaLabel = () => {\n    if (ariaLabel) return ariaLabel;\n    return children ? translations.updatingChildren : translations.updating;\n  };\n\n  return children ? (\n    // if we provide children to this component, it should act as a provider in order to add background with low opacity\n    <div\n      {...props}\n      className={classes(['dropin-progress-spinner-provider'])}\n      aria-live=\"polite\"\n      role=\"status\"\n    >\n      <div aria-hidden={true}>{children}</div>\n      <div\n        aria-label={handleAriaLabel()}\n        role=\"status\"\n        className={classes(['dropin-progress-spinner-background', className])}\n        style={style}\n      />\n      <div\n        className={classes([\n          'dropin-progress-spinner-with-provider',\n          ...commonClasses,\n        ])}\n        aria-hidden={true}\n      />\n    </div>\n  ) : (\n    // if there are no children, it should be able to be standalone and have no background\n    <div\n      {...props}\n      className={classes([className, ...commonClasses])}\n      aria-live=\"polite\"\n      role=\"status\"\n      aria-label={handleAriaLabel()}\n    />\n  );\n};\n","import { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes, useContext } from 'preact/compat';\nimport { classes, VComponent } from '@adobe/elsie/lib';\nimport {\n  Button,\n  CartItemSkeleton,\n  Icon,\n  Incrementer,\n  UIContext,\n  ProgressSpinner,\n} from '@adobe/elsie/components';\nimport { useText } from '@adobe/elsie/i18n';\nimport { Trash } from '@adobe/elsie/icons';\n\nimport '@adobe/elsie/components/CartItem/CartItem.css';\n\nexport interface CartItemProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'title' | 'loading'> {\n  ariaLabel?: string;\n  image: VNode;\n  title: VNode;\n  price: VNode;\n  taxIncluded?: boolean;\n  taxExcluded?: boolean;\n  total: VNode;\n  totalExcludingTax?: VNode;\n  sku: VNode;\n  quantity?: number;\n  description?: VNode;\n  configurations?: { [key: string]: any };\n  warning?: VNode;\n  alert?: VNode;\n  loading?: boolean;\n  updating?: boolean;\n  onRemove?: () => void;\n  onQuantity?: (value: number) => void;\n}\n\nexport const CartItem: FunctionComponent<CartItemProps> = ({\n  className,\n  children,\n  ariaLabel,\n  image,\n  title,\n  price,\n  taxIncluded = false,\n  taxExcluded = false,\n  total,\n  totalExcludingTax,\n  sku,\n  configurations,\n  warning,\n  alert,\n  quantity = 1,\n  description,\n  loading = false,\n  updating = false,\n  onQuantity,\n  onRemove,\n  ...props\n}) => {\n  const { locale } = useContext(UIContext);\n\n  const labels = useText({\n    each: 'Dropin.CartItem.each.label',\n    quantity: 'Dropin.CartItem.quantity.label',\n    remove: 'Dropin.CartItem.remove.label',\n    removeDefault: 'Dropin.CartItem.removeDefault.label',\n    taxIncluded: 'Dropin.CartItem.taxIncluded.label',\n    taxExcluded: 'Dropin.CartItem.taxExcluded.label',\n    updating: 'Dropin.CartItem.updating.label',\n    updatingDefault: 'Dropin.ProgressSpinner.updating.label',\n  });\n\n  if (loading) return <CartItemSkeleton />;\n\n  return (\n    <div\n      {...props}\n      className={classes([\n        'dropin-cart-item',\n        ['dropin-cart-item--updating', updating],\n        className,\n      ])}\n    >\n      {updating && (\n        <ProgressSpinner\n          className={classes(['dropin-cart-item__spinner'])}\n          ariaLabel={\n            ariaLabel\n              ? labels.updating?.replace('{product}', ariaLabel)\n              : labels.updatingDefault\n          }\n        />\n      )}\n      <div className=\"dropin-cart-item__wrapper\">\n        {/* Image */}\n        <VComponent\n          node={image}\n          className={classes(['dropin-cart-item__image'])}\n        />\n\n        {/* Title */}\n        <VComponent\n          node={title}\n          className={classes([\n            'dropin-cart-item__title',\n            ['dropin-cart-item__title--edit', !!onQuantity || !!onRemove],\n          ])}\n        />\n\n        {/* Description */}\n        {description && (\n          <VComponent\n            node={description}\n            className={classes(['dropin-cart-item__description'])}\n          />\n        )}\n\n        {/* SKU */}\n        <VComponent node={sku} className={classes(['dropin-cart-item__sku'])} />\n        {/* Configurations */}\n        {configurations && (\n          <ul className={classes(['dropin-cart-item__configurations'])}>\n            {Object.entries(configurations).map(([key, value]) => (\n              <li\n                key={key}\n                className={classes(['dropin-cart-item__configurations__item'])}\n              >\n                {key}:{' '}\n                <strong\n                  className={classes([\n                    'dropin-cart-item__configurations__item__value',\n                  ])}\n                >\n                  {value}\n                </strong>\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {/* Price */}\n        <span className={classes(['dropin-cart-item__price'])}>\n          {!onQuantity && (\n            <span className=\"dropin-cart-item__price__quantity\">\n              {quantity.toLocaleString(locale)} x{' '}\n            </span>\n          )}\n\n          <VComponent node={price} role=\"text\" />\n\n          {quantity > 1 && (\n            <>\n              &nbsp;\n              {labels.each}\n            </>\n          )}\n\n          {taxIncluded && (\n            <span\n              data-testid=\"tax-message\"\n              className=\"dropin-cart-item__price-tax-message\"\n            >\n              &nbsp;\n              {labels.taxIncluded}\n            </span>\n          )}\n\n          {taxExcluded && (\n            <span\n              data-testid=\"tax-message\"\n              className=\"dropin-cart-item__price-tax-message\"\n            >\n              &nbsp;\n              {labels.taxExcluded}\n            </span>\n          )}\n        </span>\n\n        {/* Quantity */}\n        <div\n          className={classes([\n            'dropin-cart-item__quantity',\n            ['dropin-cart-item__quantity--edit', !!onQuantity],\n          ])}\n        >\n          {onQuantity ? (\n            <Incrementer\n              className={classes(['dropin-cart-item__quantity__incrementer'])}\n              value={quantity}\n              min={1}\n              onValue={(value) => onQuantity?.(Number(value))}\n              name=\"quantity\"\n              aria-label={labels.quantity}\n              disabled={updating}\n            />\n          ) : (\n            <span className={classes(['dropin-cart-item__quantity__value'])}>\n              {labels.quantity}:{' '}\n              <strong className=\"dropin-cart-item__quantity__number\">\n                {Number(quantity).toLocaleString(locale)}\n              </strong>\n            </span>\n          )}\n\n          {/* Warning */}\n          {warning && (\n            <VComponent\n              node={warning}\n              className={classes([\n                'dropin-cart-item__warning',\n                'dropin-cart-item__warning--quantity',\n              ])}\n            />\n          )}\n\n          {/* Alert */}\n          {alert && (\n            <VComponent\n              node={alert}\n              className={classes([\n                'dropin-cart-item__alert',\n                'dropin-cart-item__alert--quantity',\n              ])}\n            />\n          )}\n        </div>\n\n        {/* Warning */}\n        {warning && (\n          <VComponent\n            node={warning}\n            className={classes(['dropin-cart-item__warning'])}\n          />\n        )}\n\n        {/* Alert */}\n        {alert && (\n          <VComponent\n            node={alert}\n            className={classes(['dropin-cart-item__alert'])}\n          />\n        )}\n\n        {/* Total */}\n        <div\n          className={classes([\n            'dropin-cart-item__total',\n            ['dropin-cart-item__total--edit', !!onRemove],\n          ])}\n        >\n          <div className=\"dropin-cart-item__row-total\">\n            <VComponent node={total} role=\"text\" />\n          </div>\n          {taxIncluded && (\n            <span\n              data-testid=\"tax-message\"\n              className={classes(['dropin-cart-item__total-tax-message'])}\n            >\n              &nbsp;\n              {labels.taxIncluded}\n            </span>\n          )}\n\n          {taxExcluded && (\n            <div className=\"dropin-cart-item__total-tax-excluded\">\n              <span\n                data-testid=\"tax-message\"\n                className={classes([\n                  'dropin-cart-item__total-tax-excluded-message',\n                ])}\n              >\n                {totalExcludingTax && (\n                  <VComponent node={totalExcludingTax} role=\"text\" />\n                )}\n                &nbsp;\n                {labels.taxExcluded}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Remove Item */}\n      {onRemove && (\n        <Button\n          className={classes(['dropin-cart-item__remove'])}\n          variant=\"tertiary\"\n          onClick={() => onRemove?.()}\n          icon={\n            <Icon\n              source={Trash}\n              size=\"24\"\n              stroke=\"2\"\n              viewBox=\"0 0 24 24\"\n              aria-label={\n                ariaLabel\n                  ? labels.remove?.replace('{product}', ariaLabel)\n                  : labels.removeDefault\n              }\n            />\n          }\n          disabled={updating}\n        />\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const CartItemSkeleton: FunctionComponent = () => {\n  return (\n    <div className=\"dropin-cart-item dropin-cart-item-skeleton\">\n      <Skeleton className=\"dropin-cart-item__skeleton dropin-cart-item__wrapper\">\n        <div className=\"dropin-cart-item__image\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__title\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__sku\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__price\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__quantity\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n        <div className=\"dropin-cart-item__total\">\n          <SkeletonRow className=\"dropin-cart-item__skeleton__item\" />\n        </div>\n      </Skeleton>\n    </div>\n  );\n};\n","import {\n  GuestOrderByTokenQuery,\n  GuestOrderQuery,\n} from '@/order-confirmation/__generated__/types';\n\nexport enum Actions {\n  ADD_ORDER_REFERENCE = 'ADD_ORDER_REFERENCE',\n  LOADING = 'LOADING',\n  SET_DETAILS = 'SET_DETAILS',\n  ALERT = 'ALERT',\n  DISMISS_ALERT = 'DISMISS_ALERT',\n}\n\nexport type OrderDetails =\n  | GuestOrderQuery['guestOrder']\n  | GuestOrderByTokenQuery['guestOrderByToken'];\n\ninterface LoadingAction {\n  type: Actions.LOADING;\n}\n\ninterface SetDetailsAction {\n  type: Actions.SET_DETAILS;\n  details: OrderDetails | null;\n  alert?: Alert;\n}\n\nexport enum AlertType {\n  ERROR = 'error',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n}\n\nexport enum AlertCode {\n  INVALID_ORDER = 'invalid_order',\n  INVALID_SEARCH = 'invalid_search',\n  UNKNOWN = 'unknown_error',\n}\n\nexport type Alert = {\n  type: AlertType;\n  code: AlertCode;\n  message: string;\n};\n\ninterface AlertAction {\n  type: Actions.ALERT;\n  alert: Alert;\n}\n\ninterface DismissAlertAction {\n  type: Actions.DISMISS_ALERT;\n}\n\nexport interface State {\n  isLoading: boolean;\n  details: OrderDetails | null;\n  token?: string;\n  alert?: Alert;\n}\n\ntype Action =\n  | LoadingAction\n  | SetDetailsAction\n  | AlertAction\n  | DismissAlertAction;\n\nexport function orderConfirmationReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case Actions.LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case Actions.SET_DETAILS:\n      return {\n        ...state,\n        isLoading: false,\n        details: action.details,\n        alert: action.alert,\n      };\n    case Actions.ALERT:\n      return {\n        ...state,\n        isLoading: false,\n        alert: action.alert,\n      };\n    case Actions.DISMISS_ALERT:\n      return {\n        ...state,\n        alert: undefined,\n      };\n    default:\n      return state;\n  }\n}\n","import { useEffect, useState } from 'preact/hooks';\n\nexport const useBreakpoint = () => {\n  const getBreakpoint = () => {\n    if (window.innerWidth >= 1920) return 'xxlarge';\n    if (window.innerWidth >= 1366) return 'xlarge';\n    if (window.innerWidth >= 1024) return 'large';\n    if (window.innerWidth >= 768) return 'medium';\n\n    return 'small';\n  };\n\n  const [breakpoint, setBreakpoint] = useState<\n    ReturnType<typeof getBreakpoint>\n  >(getBreakpoint());\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    const handleResize = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setBreakpoint(getBreakpoint()), 50);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, []);\n\n  return breakpoint;\n};\n","import { HTMLAttributes } from 'preact/compat';\nimport { FunctionComponent, VNode } from 'preact';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderConfirmation/OrderConfirmation.css';\nimport {\n  CartSummary,\n  Details,\n  Footer,\n  Header,\n  OrderSearchFields,\n  OrderSearchForm,\n  OrderSummary,\n  Summary,\n} from '@/order-confirmation/components';\nimport {\n  AlertCode,\n  State,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { useBreakpoint } from '@/order-confirmation/hooks/useBreakpoint';\n\nconst ConditionalWrapper: FunctionComponent<{\n  children?: VNode;\n  className: string;\n}> = ({ children, className }) => {\n  const breakpoint = useBreakpoint();\n  return breakpoint !== 'small' ? (\n    <div className={className}>{children}</div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  state: State;\n  dismissAlert: () => void;\n  onOrderSearch: (fields: OrderSearchFields) => void;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\n// TODO types\nfunction mapDetailsToSummary(orderDetails: any): Summary | undefined {\n  const total = orderDetails?.total;\n\n  if (!total) {\n    return undefined;\n  }\n\n  const grandTotal = total?.grand_total;\n  const subtotal = total?.subtotal;\n  const shipping = total?.total_shipping;\n  const tax = total?.total_tax;\n\n  return {\n    total: {\n      inclTax: {\n        amount: grandTotal?.value || 0,\n        currency: grandTotal?.currency || '',\n      },\n    },\n    subtotal: {\n      amount: subtotal?.value || 0,\n      currency: subtotal?.currency || '',\n      isTaxIncl: false,\n    },\n    shipping: {\n      amount: shipping?.value || 0,\n      currency: shipping?.currency || '',\n    },\n    tax: {\n      amount: tax?.value || 0,\n      currency: tax?.currency || '',\n    },\n  };\n}\n\ntype AsideProps = {\n  state: State;\n};\n\nconst Aside: FunctionComponent<AsideProps> = ({ state }) => {\n  const { isLoading, details } = state;\n  const summary = mapDetailsToSummary(details);\n\n  return (\n    <>\n      <OrderSummary isLoading={isLoading} summary={summary} />\n      <CartSummary isLoading={isLoading} details={details} />\n    </>\n  );\n};\n\nconst AsideElement: FunctionComponent<AsideProps> = ({ state }) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__aside\">\n      <Aside state={state} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Main: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n}) => {\n  const { details, isLoading } = state;\n\n  const billingAddress = details?.billing_address;\n  const customerName = billingAddress?.firstname || '';\n  const orderNumber = details?.number || '';\n  const orderStatus = details?.status || '';\n\n  const showCustomerHeader = !!customerName && !!orderNumber;\n\n  return (\n    <>\n      {(isLoading || (!isLoading && showCustomerHeader)) && (\n        <Header\n          isLoading={isLoading}\n          customerName={customerName}\n          orderNumber={orderNumber}\n          orderStatus={orderStatus}\n        />\n      )}\n\n      <Details isLoading={isLoading} orderDetails={details} />\n\n      <Footer\n        isLoading={isLoading}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n      />\n    </>\n  );\n};\n\nconst MainElement: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n  dismissAlert,\n  onOrderSearch,\n}) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__main\">\n      <Main\n        state={state}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        dismissAlert={dismissAlert}\n        onOrderSearch={onOrderSearch}\n      />\n    </ConditionalWrapper>\n  );\n};\n\nexport const OrderConfirmation: FunctionComponent<OrderConfirmationProps> = ({\n  className,\n  state,\n  dismissAlert,\n  routeHome,\n  routeSupport,\n  onOrderSearch,\n}) => {\n  const { details, alert, isLoading } = state;\n  const hasOrderDetails = !!details?.number;\n  const isInvalidOrder = alert && alert.code === AlertCode.INVALID_ORDER;\n  const isInvalidSearch = alert && alert.code === AlertCode.INVALID_SEARCH;\n\n  if (!isLoading && !hasOrderDetails) {\n    return (\n      <div className={classes(['order-confirmation', className])}>\n        <OrderSearchForm\n          alert={\n            isInvalidOrder || isInvalidSearch\n              ? {\n                  heading: alert.message,\n                  description: '',\n                  type: alert.type,\n                  onDismiss: dismissAlert,\n                }\n              : undefined\n          }\n          onOrderSearch={onOrderSearch}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes(['order-confirmation', className])}>\n      <MainElement\n        state={state}\n        dismissAlert={dismissAlert}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        onOrderSearch={onOrderSearch}\n      />\n      <AsideElement state={state} />\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Icon } from '@adobe/elsie/components';\nimport { OrderSuccess } from '@adobe/elsie/icons';\nimport { Text } from '@adobe/elsie/i18n';\nimport { HeaderSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Header/Header.css';\n\nexport interface HeaderProps {\n  isLoading: boolean;\n  customerName?: string;\n  orderNumber?: string;\n  orderStatus?: string;\n}\nexport const Header: FunctionComponent<HeaderProps> = ({\n  isLoading,\n  customerName,\n  orderNumber,\n  orderStatus,\n}) => {\n  if (isLoading) {\n    return <HeaderSkeleton />;\n  }\n\n  return (\n    <div className={'order-confirmation-header order-confirmation__card'}>\n      <Icon\n        source={OrderSuccess}\n        size=\"64\"\n        className={'order-confirmation-header__icon'}\n      />\n\n      <h1 className={'order-confirmation-header__title'}>\n        {customerName ? (\n          <Text\n            id={'OrderConfirmation.Header.title'}\n            fields={{ name: customerName }}\n          />\n        ) : (\n          <Text id={'OrderConfirmation.Header.defaultTitle'} />\n        )}\n      </h1>\n\n      {orderNumber && (\n        <p>\n          <Text\n            id={'OrderConfirmation.Header.order'}\n            fields={{ order: orderNumber }}\n          />\n          {orderStatus !== undefined && orderStatus !== '' && (\n            <span className={'order-confirmation-header__status'}>\n              {' '}\n              ({orderStatus})\n            </span>\n          )}\n        </p>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const HeaderSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-header-skeleton\"\n      className={'order-confirmation-header'}\n    >\n      <SkeletonRow variant={'empty'} size=\"xlarge\" fullWidth={true} />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/InLineAlert/InLineAlert.css';\nimport { Button, Icon } from '@adobe/elsie/components';\nimport { CheckWithCircle, Close, WarningFilled } from '@adobe/elsie/icons';\n\nexport interface InLineAlertProps extends HTMLAttributes<HTMLDivElement> {\n  heading: string;\n  description: string;\n  type?: 'error' | 'warning' | 'success';\n  additionalActions?: Array<{\n    label: string;\n    onClick: (event: Event) => void;\n  }>;\n  onDismiss: (event: Event) => void;\n}\n\nconst VARIANT_TO_ICON_MAP = {\n  error: WarningFilled,\n  success: CheckWithCircle,\n  warning: WarningFilled,\n};\n\nexport const InLineAlert: FunctionComponent<InLineAlertProps> = ({\n  className,\n  type = 'warning',\n  additionalActions,\n  onDismiss,\n  heading,\n  description,\n  ...props\n}) => {\n  const icon = VARIANT_TO_ICON_MAP[type];\n  const translations = {\n    dismiss: 'OrderConfirmation.InlineAlert.Dismiss',\n  };\n\n  return (\n    <div\n      {...props}\n      className={classes([\n        'dropin-in-line-alert',\n        `dropin-in-line-alert--${type}`,\n        className,\n      ])}\n    >\n      <div className={'dropin-in-line-alert__heading'}>\n        <div className={'dropin-in-line-alert__title-container'}>\n          {icon && (\n            <Icon source={icon} className={'dropin-in-line-alert__icon'} />\n          )}\n\n          <span className={'dropin-in-line-alert__title'}>{heading}</span>\n        </div>\n\n        <div className={'dropin-in-line-alert__actions-container'}>\n          {additionalActions?.length == 1 && (\n            <Button\n              variant=\"tertiary\"\n              className={'dropin-in-line-alert__additional-action'}\n              onClick={additionalActions[0]?.onClick}\n              aria-label={additionalActions[0]?.label}\n            >\n              {additionalActions[0]?.label}\n            </Button>\n          )}\n          {onDismiss && (\n            <Button\n              icon={<Icon source={Close} size=\"24\" stroke=\"2\" />}\n              className={'dropin-in-line-alert__dismiss-button'}\n              variant=\"tertiary\"\n              onClick={onDismiss}\n              aria-label={translations.dismiss}\n            />\n          )}\n        </div>\n      </div>\n\n      {description && (\n        <p className={'dropin-in-line-alert__description'}>{description}</p>\n      )}\n\n      {additionalActions && additionalActions?.length > 1 && (\n        <div className={'dropin-in-line-alert__additional-actions-container'}>\n          {additionalActions.map((action) => (\n            <Button\n              key={action.label}\n              variant=\"tertiary\"\n              className={'dropin-in-line-alert__additional-action'}\n              onClick={action.onClick}\n            >\n              {action.label}\n            </Button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/OrderSearchForm/OrderSearchForm.css';\nimport { Button, Card, Field, Input } from '@adobe/elsie/components';\nimport { Text, useText } from '@adobe/elsie/i18n';\nimport { getFormValues } from '@adobe/elsie/lib';\nimport {\n  InLineAlert,\n  InLineAlertProps,\n} from '@/order-confirmation/components/InLineAlert';\n\nexport interface OrderSearchFields {\n  email: string;\n  number: string;\n  postcode?: string;\n}\n\nexport interface OrderSearchFormProps extends HTMLAttributes<HTMLDivElement> {\n  alert?: InLineAlertProps;\n  onOrderSearch?: (fields: OrderSearchFields) => void;\n}\n\nexport const OrderSearchForm: FunctionComponent<OrderSearchFormProps> = ({\n  alert,\n  onOrderSearch,\n}) => {\n  const translations = useText({\n    email: 'OrderConfirmation.OrderSearchForm.email',\n    postcode: 'OrderConfirmation.OrderSearchForm.postcode',\n    number: 'OrderConfirmation.OrderSearchForm.orderNumber',\n  });\n\n  const handleSubmit = (event: Event) => {\n    event.preventDefault();\n    const formValues = getFormValues(event.target as HTMLFormElement);\n    onOrderSearch?.(formValues as OrderSearchFields);\n  };\n\n  return (\n    <Card\n      variant={'secondary'}\n      className={\n        'order-confirmation-order-search-form order-confirmation__card'\n      }\n    >\n      <h2 className={'order-confirmation-order-search-form__title'}>\n        <Text id={'OrderConfirmation.OrderSearchForm.title'} />\n      </h2>\n\n      <p>\n        <Text id={'OrderConfirmation.OrderSearchForm.description'} />\n      </p>\n\n      {alert && (\n        <InLineAlert\n          className={'order-confirmation-order-search-form__alert'}\n          data-testid='order-confirmation-alert'\n          {...alert}\n        />\n      )}\n\n      <form\n        className={'order-confirmation-order-search-form__fields'}\n        onSubmit={handleSubmit}\n      >\n        <div className={'order-confirmation-order-search-form__fields-columns'}>\n          <Field>\n            <Input\n              id=\"order-email\"\n              name=\"email\"\n              type={'email'}\n              autocomplete={'email'}\n              placeholder={translations.email}\n              floatingLabel={translations.email}\n              required={true}\n              aria-label={translations.email}\n              aria-required={true}\n            />\n          </Field>\n\n          <Field>\n            <Input\n              id=\"postcode\"\n              name=\"postcode\"\n              type={'text'}\n              autocomplete={'postal-code'}\n              placeholder={translations.postcode}\n              floatingLabel={translations.postcode}\n              required={false}\n              aria-label={translations.postcode}\n              aria-required={true}\n            />\n          </Field>\n        </div>\n\n        <Field>\n          <Input\n            id=\"order-number\"\n            name=\"number\"\n            type={'text'}\n            placeholder={translations.number}\n            floatingLabel={translations.number}\n            required={true}\n            aria-label={translations.number}\n            aria-required={true}\n          />\n        </Field>\n\n        <Button\n          className={'order-confirmation-order-search-form__button'}\n          size={'medium'}\n          variant={'primary'}\n          key={'logIn'}\n          type={'submit'}\n        >\n          <Text id={'OrderConfirmation.OrderSearchForm.button'} />\n        </Button>\n      </form>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/Details/Details.css';\nimport { Price, Card } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { OrderDetails } from '@/order-confirmation/reducers/orderConfirmation';\nimport {\n  StaticSkeleton,\n  DetailsSkeleton,\n} from '@/order-confirmation/components';\n\nexport interface DetailsProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  orderDetails: OrderDetails | null;\n}\n\nexport const Details: FunctionComponent<DetailsProps> = ({\n  isLoading,\n  orderDetails,\n}) => {\n  if (isLoading) {\n    return <DetailsSkeleton />;\n  }\n\n  const hasOrderDetails = orderDetails && orderDetails?.number;\n\n  const contactDetails = orderDetails?.email || '';\n  const hasToDisplayContactDetails = orderDetails && contactDetails !== '';\n\n  const shippingAddress = orderDetails?.shipping_address;\n  const hasToDisplayShippingAddress = orderDetails && shippingAddress !== null;\n\n  const billingAddress = orderDetails?.billing_address;\n  const hasToDisplayBillingAddress = orderDetails && billingAddress !== null;\n\n  const shippingMethod = orderDetails?.shipping_method;\n  const shippingCost = orderDetails?.total?.total_shipping?.value;\n  const shippingCurrency = orderDetails?.total?.total_shipping?.currency;\n  const hasToDisplayShippingMethod =\n    orderDetails && shippingMethod && shippingCurrency && shippingCost != null;\n\n  const paymentMethods = orderDetails?.payment_methods;\n  const hasPaymentMethod = paymentMethods && paymentMethods.length > 0;\n  const selectedPaymentMethod = hasPaymentMethod ? paymentMethods[0]?.name : '';\n  const hasToDisplayPaymentMethod =\n    orderDetails && hasPaymentMethod && selectedPaymentMethod !== '';\n\n  return (\n    <Card\n      variant={'secondary'}\n      className={'order-confirmation-details order-confirmation__card'}\n    >\n      <div className={'order-confirmation-details__header'}>\n        <h2 className={'order-confirmation-details__title'}>\n          <Text id={'OrderConfirmation.Details.title'} />\n        </h2>\n      </div>\n\n      <div className={'order-confirmation-details__contact'}>\n        {(!orderDetails || hasToDisplayContactDetails) && (\n          <h3>\n            <Text id={'OrderConfirmation.Details.contact'} />\n          </h3>\n        )}\n\n        {hasToDisplayContactDetails && <p>{contactDetails}</p>}\n\n        {!hasOrderDetails && (\n          <StaticSkeleton\n            rows={1}\n            data-testid=\"order-confirmation-details-contact-skeleton\"\n          />\n        )}\n      </div>\n\n      <div className={'order-confirmation-details__information'}>\n        <div className={'order-confirmation-details__shipping_address'}>\n          {(!hasOrderDetails || hasToDisplayShippingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingAddress && (\n            <>\n              <p>\n                {shippingAddress?.firstname} {shippingAddress?.lastname}\n              </p>\n\n              {shippingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {shippingAddress?.city} {shippingAddress?.region}{' '}\n                {shippingAddress?.postcode}, {shippingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-shipping-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__billing_address'}>\n          {(!hasOrderDetails || hasToDisplayBillingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.billingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayBillingAddress && (\n            <>\n              <p>\n                {billingAddress?.firstname} {billingAddress?.lastname}\n              </p>\n\n              {billingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {billingAddress?.city} {billingAddress?.region}{' '}\n                {billingAddress?.postcode}, {billingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-billing-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__shipping-method'}>\n          {(!hasOrderDetails || hasToDisplayShippingMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingMethod && (\n            <>\n              {shippingCost === 0 ? (\n                <p className=\"order-confirmation-order-summary__price\">\n                  <Text id=\"OrderConfirmation.Details.freeShipping\" />\n                </p>\n              ) : (\n                <p>\n                  <Price amount={shippingCost} currency={shippingCurrency} />{' '}\n                  {shippingMethod}\n                </p>\n              )}\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-shipping-method-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__payment-method'}>\n          {(!hasOrderDetails || hasToDisplayPaymentMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.paymentMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayPaymentMethod && <p>{selectedPaymentMethod}</p>}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-payment-method-skeleton\"\n            />\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Card, Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const DetailsSkeleton: FunctionComponent = () => {\n  return (\n    <Card variant={'secondary'} className={'order-confirmation-details'}>\n      <Skeleton data-testid=\"order-confirmation-details-skeleton\">\n        <SkeletonRow variant={'heading'} size=\"medium\" fullWidth={true} />\n        <SkeletonRow size=\"medium\" />\n        <SkeletonRow variant={'empty'} size=\"medium\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n      </Skeleton>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { Button } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { FooterSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Footer/Footer.css';\n\nexport interface FooterProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\nexport const Footer: FunctionComponent<FooterProps> = ({\n  isLoading,\n  className,\n  routeHome,\n  routeSupport,\n  ...props\n}) => {\n  if (isLoading) {\n    return <FooterSkeleton />;\n  }\n\n  return (\n    <div\n      className={classes(['order-confirmation-footer', className])}\n      {...props}\n    >\n      {routeHome?.() && (\n        <Button\n          data-testid=\"order-confirmation-footer__continue-button\"\n          className=\"order-confirmation-footer__continue-button\"\n          size={'medium'}\n          variant={'primary'}\n          key={'continueShopping'}\n          type={'submit'}\n          href={routeHome?.()}\n        >\n          <Text id={'OrderConfirmation.Footer.continueShopping'} />\n        </Button>\n      )}\n\n      <p className=\"order-confirmation-footer__contact-support\">\n        <Text id={'OrderConfirmation.Footer.help'} />{' '}\n        {routeSupport?.() && (\n          <a\n            href={routeSupport?.()}\n            rel={'noreferrer'}\n            className=\"order-confirmation-footer__contact-support-link\"\n            data-testid=\"order-confirmation-footer__contact-support-link\"\n          >\n            <Text id={'OrderConfirmation.Footer.contactSupport'} />\n          </a>\n        )}\n      </p>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const FooterSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton className={'order-confirmation-footer'}>\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/StaticSkeleton/StaticSkeleton.css';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport interface StaticSkeletonProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  rows: number;\n  size?: 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge';\n}\nexport const StaticSkeleton: FunctionComponent<StaticSkeletonProps> = ({\n  rows,\n  size = 'xsmall',\n  ...props\n}) => {\n  return (\n    <Skeleton className={'static-skeleton'} {...props}>\n      {Array.from(Array(rows).keys()).map((i) => (\n        <SkeletonRow key={i} variant={'heading'} size={size} fullWidth={true} />\n      ))}\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderSummary/OrderSummary.css';\nimport { Text } from '@adobe/elsie/i18n';\nimport { Card, Divider, Price } from '@adobe/elsie/components';\nimport {\n  StaticSkeleton,\n  OrderSummarySkeleton,\n} from '@/order-confirmation/components';\n\nexport type CartTaxItem = {\n  label: string;\n  amount: {\n    value?: number;\n    currency?: string;\n  };\n};\n\nexport type Summary = {\n  total: {\n    inclTax: {\n      amount: number;\n      currency: string;\n    };\n    exclTax?: {\n      amount: number;\n      currency: string;\n    };\n  };\n  subtotal: {\n    amount: number;\n    currency: string;\n    isTaxIncl: boolean;\n  };\n  shipping?: {\n    amount: number;\n    currency: string;\n  };\n  tax?: {\n    amount: number;\n    currency: string;\n    breakdown?: CartTaxItem[];\n  };\n};\n\nexport interface OrderSummaryProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'summary'> {\n  isLoading: boolean;\n  summary?: Summary;\n  variant?: 'primary' | 'secondary';\n}\n\nexport const OrderSummary: FunctionComponent<OrderSummaryProps> = ({\n  className,\n  isLoading,\n  summary,\n  variant = 'secondary',\n}) => {\n  if (isLoading) {\n    return <OrderSummarySkeleton />;\n  }\n\n  const { total, subtotal, shipping, tax } = summary ?? {};\n\n  return (\n    <Card\n      className={classes(['order-confirmation-order-summary', className])}\n      variant={variant}\n    >\n      {/* move heading to elsie? */}\n      <h2 className=\"order-confirmation-order-summary__title\">\n        <Text id=\"OrderConfirmation.OrderSummary.title\" />\n      </h2>\n\n      <Divider variant=\"primary\" />\n\n      {subtotal != undefined ? (\n        <div\n          data-testid=\"order-summary-subtotal\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.subtotal\" />\n          </p>\n          <Price\n            amount={subtotal?.amount}\n            currency={subtotal?.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-subtotal-skeleton\"\n        />\n      )}\n\n      {subtotal?.isTaxIncl && (\n        <div\n          data-testid=\"order-summary-subtotal-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.includingTaxes\" />\n          </p>\n        </div>\n      )}\n\n      {shipping != undefined ? (\n        <div\n          data-testid=\"order-summary-shipping\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.shipping\" />\n          </p>\n\n          {shipping.amount === 0 ? (\n            <p className=\"order-confirmation-order-summary__price\">\n              <Text id=\"OrderConfirmation.OrderSummary.freeShipping\" />\n            </p>\n          ) : (\n            <Price\n              amount={shipping.amount}\n              currency={shipping.currency}\n              className={classes([\n                'order-confirmation-order-summary__price',\n                className,\n              ])}\n            />\n          )}\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-shipping-skeleton\"\n        />\n      )}\n\n      {tax != undefined && !tax.breakdown && (\n        <div\n          data-testid=\"order-summary-tax\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.tax\" />\n          </p>\n          <Price\n            amount={tax.amount}\n            currency={tax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n\n      {tax != undefined && tax.breakdown && (\n        <>\n          <Divider variant=\"secondary\" />\n\n          <div className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--margin-bottom\">\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxBreakdown\" />\n            </p>\n          </div>\n\n          {tax.breakdown.map((tax) => (\n            <div\n              data-testid=\"order-summary-tax-breakdown\"\n              key={tax.label}\n              className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n            >\n              <p>{tax.label}</p>\n\n              <Price\n                amount={tax.amount.value!}\n                currency={tax.amount.currency!}\n                className={classes([\n                  'order-confirmation-order-summary__price',\n                  className,\n                ])}\n              />\n            </div>\n          ))}\n\n          <div\n            data-testid=\"order-summary-tax-breakdown-total\"\n            className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--strong order-confirmation-order-summary__row--margin-top\"\n          >\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxTotal\" />\n            </p>\n\n            <Price\n              amount={tax.amount}\n              currency={tax.currency}\n              className={classes([\n                'order-confirmation-order-summary__price',\n                className,\n              ])}\n            />\n          </div>\n\n          <Divider variant=\"secondary\" />\n        </>\n      )}\n\n      {total != undefined ? (\n        <div\n          data-testid=\"order-summary-total-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--emphasized\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.total\" />\n          </p>\n\n          <Price\n            amount={total?.inclTax.amount}\n            currency={total?.inclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-total-skeleton\"\n        />\n      )}\n\n      {total?.exclTax != undefined && (\n        <div\n          data-testid=\"order-summary-total-excl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.totalExclTax\" />\n          </p>\n\n          <Price\n            amount={total.exclTax.amount}\n            currency={total.exclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const OrderSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-order-summary-skeleton\"\n      className={'order-confirmation-order-summary'}\n    >\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"heading\" size=\"small\" fullWidth={true} lines={3} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { useText } from '@adobe/elsie/i18n';\nimport '@/order-confirmation/components/CartSummaryItem/CartSummaryItem.css';\nimport { CartItem, Image, Price } from '@adobe/elsie/components';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\n\nexport interface CartSummaryItemProps extends HTMLAttributes<HTMLDivElement> {\n  item: ReturnType<typeof transformItems>;\n  taxIncluded?: boolean;\n}\n\nexport const CartSummaryItem: FunctionComponent<CartSummaryItemProps> = ({\n  className,\n  item,\n  taxIncluded = false,\n}) => {\n  const translations = useText({\n    Sender: 'OrderConfirmation.CartSummary.GiftCard.sender',\n    Recipient: 'OrderConfirmation.CartSummary.GiftCard.recipient',\n  });\n\n  let price = item.regularPrice;\n  let total = item.total;\n\n  if (taxIncluded) {\n    price = item.priceInclTax;\n    total = item.totalInclTax;\n  }\n\n  const configurations = {\n    ...('configurableOptions' in item ? item.configurableOptions : {}),\n    ...('senderName' in item && item.senderName\n      ? { [translations.Sender]: item.senderName }\n      : {}),\n    ...('senderEmail' in item && item.senderEmail\n      ? { [translations.Sender]: item.senderEmail }\n      : {}),\n    ...('recipientName' in item && item.recipientName\n      ? { [translations.Recipient]: item.recipientName }\n      : {}),\n    ...('recipientEmail' in item && item.recipientEmail\n      ? { [translations.Recipient]: item.recipientEmail }\n      : {}),\n  };\n\n  return (\n    <div\n      className={classes(['order-confirmation-cart-summary-item', className])}\n    >\n      <CartItem\n        data-testid=\"cart-summary-item\"\n        key={item.uid}\n        taxIncluded={taxIncluded}\n        title={<div data-testid=\"product-name\">{item.name}</div>}\n        sku={<div>{item.sku}</div>}\n        quantity={item.quantity!}\n        image={\n          <Image\n            src={item.image.src!}\n            alt={item.image.alt!}\n            loading=\"lazy\"\n            width=\"80\"\n            height=\"80\"\n            params={{ width: 80 }}\n          />\n        }\n        configurations={configurations}\n        price={\n          <Price\n            amount={item.regularPrice.value}\n            currency={price.currency}\n            weight=\"normal\"\n          />\n        }\n        total={\n          <>\n            <Price\n              amount={item.regularPrice.value * item.quantity!}\n              currency={price.currency}\n              variant={item.discounted ? 'strikethrough' : 'default'}\n            />\n\n            {item.discounted && (\n              <Price amount={total.value} currency={total.currency!} sale />\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { GuestOrderDataFragment } from '@/order-confirmation/__generated__/types';\n\ntype NonNullableItems = NonNullable<GuestOrderDataFragment['items']>;\ntype NonNullableItem = NonNullable<NonNullableItems[number]>;\n\nexport function transformItems(item: NonNullableItem) {\n  return {\n    uid: item.id,\n    quantity: item.quantity_ordered,\n    sku: item.product!.sku,\n    name: item.product!.name,\n    image: {\n      src: item.product!.thumbnail!.url,\n      alt: item.product!.thumbnail!.label,\n    },\n    price: {\n      value: item.product_sale_price.value,\n      currency: item.product_sale_price.currency,\n    },\n    priceInclTax: {\n      value: item.product_sale_price.value!,\n      currency: item.product_sale_price.currency!,\n    },\n    total: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    totalInclTax: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    discount: {\n      value: 0,\n      currency: item.product_sale_price.currency,\n    },\n    regularPrice: {\n      value: item.product!.price_range.maximum_price!.regular_price.value!,\n      currency:\n        item.product!.price_range.maximum_price!.regular_price.currency!,\n    },\n    discounted:\n      item.product!.price_range.maximum_price!.regular_price.value! *\n        item.quantity_ordered! !==\n      item.product_sale_price.value! * item.quantity_ordered!,\n    configurableOptions: transformConfigurableOptions(item),\n    senderName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_name\n        : undefined,\n    senderEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_email!\n        : undefined,\n    recipientEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_email!\n        : undefined,\n    recipientName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_name\n        : undefined,\n  };\n}\nfunction transformConfigurableOptions(item: NonNullableItem) {\n  if (!('selected_options' in item)) return;\n\n  const configurableOptions: Record<string, string> = {};\n\n  for (const option of item.selected_options!) {\n    configurableOptions[option!.label] = option!.value;\n  }\n\n  return configurableOptions;\n}\n"],"file":"containers/OrderConfirmation.js"}